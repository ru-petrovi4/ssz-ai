// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tensorflow/compiler/xla/xla.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Xla {

  /// <summary>Holder for reflection information generated from tensorflow/compiler/xla/xla.proto</summary>
  public static partial class XlaReflection {

    #region Descriptor
    /// <summary>File descriptor for tensorflow/compiler/xla/xla.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static XlaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiF0ZW5zb3JmbG93L2NvbXBpbGVyL3hsYS94bGEucHJvdG8SA3hsYRopdGVu",
            "c29yZmxvdy9jb21waWxlci94bGEvc2VydmljZS9obG8ucHJvdG8aJnRlbnNv",
            "cmZsb3cvY29tcGlsZXIveGxhL3hsYV9kYXRhLnByb3RvIscdCgxEZWJ1Z09w",
            "dGlvbnMSHwoXeGxhX2hsb19ncmFwaF9hZGRyZXNzZXMYAiABKAgSFwoPeGxh",
            "X2hsb19wcm9maWxlGAkgASgIEh4KFnhsYV9kaXNhYmxlX2hsb19wYXNzZXMY",
            "HiADKAkSIgoaeGxhX2VuYWJsZV9obG9fcGFzc2VzX29ubHkYfCADKAkSIgoa",
            "eGxhX2Rpc2FibGVfYWxsX2hsb19wYXNzZXMYaCABKAgSJgoeeGxhX2JhY2tl",
            "bmRfb3B0aW1pemF0aW9uX2xldmVsGB8gASgFEiIKGnhsYV9lbWJlZF9pcl9p",
            "bl9leGVjdXRhYmxlGCEgASgIEiwKJHhsYV9lbGltaW5hdGVfaGxvX2ltcGxp",
            "Y2l0X2Jyb2FkY2FzdBgjIAEoCBIiChp4bGFfY3B1X211bHRpX3RocmVhZF9l",
            "aWdlbhg8IAEoCBIdChV4bGFfZ3B1X2N1ZGFfZGF0YV9kaXIYPSABKAkSEwoL",
            "eGxhX2dwdV9mdHoYPiABKAgSLAokeGxhX2xsdm1fZW5hYmxlX2FsaWFzX3Nj",
            "b3BlX21ldGFkYXRhGEYgASgIEigKIHhsYV9sbHZtX2VuYWJsZV9ub2FsaWFz",
            "X21ldGFkYXRhGEcgASgIEi8KJ3hsYV9sbHZtX2VuYWJsZV9pbnZhcmlhbnRf",
            "bG9hZF9tZXRhZGF0YRhIIAEoCBIpCiF4bGFfbGx2bV9kaXNhYmxlX2V4cGVu",
            "c2l2ZV9wYXNzZXMYSSABKAgSIwobeGxhX3Rlc3RfYWxsX291dHB1dF9sYXlv",
            "dXRzGFogASgIEiIKGnhsYV90ZXN0X2FsbF9pbnB1dF9sYXlvdXRzGFsgASgI",
            "EiQKHHhsYV9obG9fZ3JhcGhfc2hhcmRpbmdfY29sb3IYXCABKAgSGwoTeGxh",
            "X2NwdV91c2VfbWtsX2RubhhhIAEoCBIgChd4bGFfY3B1X3VzZV94bGFfcnVu",
            "dGltZRixASABKAgSKAogeGxhX2dwdV9tYXhfa2VybmVsX3Vucm9sbF9mYWN0",
            "b3IYYiABKAUSIAoYeGxhX2NwdV9lbmFibGVfZmFzdF9tYXRoGGMgASgIEiQK",
            "HHhsYV9jcHVfZmFzdF9tYXRoX2hvbm9yX25hbnMYeCABKAgSJAoceGxhX2Nw",
            "dV9mYXN0X21hdGhfaG9ub3JfaW5mcxh5IAEoCBIoCiB4bGFfY3B1X2Zhc3Rf",
            "bWF0aF9ob25vcl9kaXZpc2lvbhh+IAEoCBIqCiF4bGFfY3B1X2Zhc3RfbWF0",
            "aF9ob25vcl9mdW5jdGlvbnMYgQEgASgIEiQKG3hsYV9jcHVfZW5hYmxlX2Zh",
            "c3RfbWluX21heBiMASABKAgSIwobeGxhX2dwdV9lbmFibGVfZmFzdF9taW5f",
            "bWF4GGQgASgIEiIKGnhsYV9hbGxvd19leGNlc3NfcHJlY2lzaW9uGHogASgI",
            "Ei4KJnhsYV9ncHVfY3Jhc2hfb25fdmVyaWZpY2F0aW9uX2ZhaWx1cmVzGGUg",
            "ASgIEh4KFnhsYV9ncHVfYXV0b3R1bmVfbGV2ZWwYeyABKAUSLAokeGxhX2Zv",
            "cmNlX2hvc3RfcGxhdGZvcm1fZGV2aWNlX2NvdW50GGYgASgFEiwKJHhsYV9n",
            "cHVfZGlzYWJsZV9ncHVhc21fb3B0aW1pemF0aW9ucxhnIAEoCBI8ChR4bGFf",
            "Z3B1X3NoYXBlX2NoZWNrcxiqASABKA4yHS54bGEuRGVidWdPcHRpb25zLlNo",
            "YXBlQ2hlY2tzEiUKHHhsYV9jcHVfZW5hYmxlX21saXJfbG93ZXJpbmcYqwEg",
            "ASgIEiUKHHhsYV9ncHVfZW5hYmxlX21saXJfbG93ZXJpbmcYrQEgASgIEicK",
            "H3hsYV9obG9fZXZhbHVhdG9yX3VzZV9mYXN0X3BhdGgYaiABKAgSKgoieGxh",
            "X2FsbG93X3NjYWxhcl9pbmRleF9keW5hbWljX29wcxhrIAEoCBJGChh4bGFf",
            "c3RlcF9tYXJrZXJfbG9jYXRpb24YbCABKA4yJC54bGEuRGVidWdPcHRpb25z",
            "LlN0ZXBNYXJrZXJMb2NhdGlvbhITCgt4bGFfZHVtcF90bxhtIAEoCRIeChZ4",
            "bGFfZHVtcF9obG9fbW9kdWxlX3JlGG4gASgJEhwKFHhsYV9kdW1wX2hsb19w",
            "YXNzX3JlGG8gASgJEhwKFHhsYV9kdW1wX2hsb19hc190ZXh0GHAgASgIEh0K",
            "FXhsYV9kdW1wX2hsb19hc19wcm90bxhxIAEoCBIbChN4bGFfZHVtcF9obG9f",
            "YXNfZG90GHIgASgIEhsKE3hsYV9kdW1wX2hsb19hc191cmwYcyABKAgSHAoU",
            "eGxhX2R1bXBfaGxvX2FzX2h0bWwYdCABKAgSJgodeGxhX2R1bXBfZnVzaW9u",
            "X3Zpc3VhbGl6YXRpb24YlQEgASgIEh4KFnhsYV9kdW1wX2hsb19zbmFwc2hv",
            "dHMYdiABKAgSIwoaeGxhX2R1bXBfaW5jbHVkZV90aW1lc3RhbXAYgwEgASgI",
            "EiEKGHhsYV9kdW1wX21heF9obG9fbW9kdWxlcxiEASABKAUSIQoYeGxhX2R1",
            "bXBfbW9kdWxlX21ldGFkYXRhGJABIAEoCBIhChh4bGFfZHVtcF9jb21wcmVz",
            "c19wcm90b3MYlwEgASgIEiIKGXhsYV9kdW1wX2hsb19hc19sb25nX3RleHQY",
            "pAEgASgIEh8KF3hsYV9ncHVfZm9yY2VfY29udl9uY2h3GH0gASgIEiAKF3hs",
            "YV9ncHVfZm9yY2VfY29udl9uaHdjGJIBIAEoCBIYChB4bGFfZ3B1X3B0eF9m",
            "aWxlGH8gAygJEhwKE3hsYV9ncHVfZHVtcF9sbHZtaXIYmwEgASgIEigKH3hs",
            "YV9ncHVfYWxnb3JpdGhtX2RlbnlsaXN0X3BhdGgYgAEgASgJEhsKEnhsYV90",
            "cHVfZGV0ZWN0X25hbhiHASABKAgSGwoSeGxhX3RwdV9kZXRlY3RfaW5mGIgB",
            "IAEoCBIlChx4bGFfY3B1X2VuYWJsZV94cHJvZl90cmFjZW1lGIkBIAEoCBI9",
            "CjR4bGFfZ3B1X3Vuc2FmZV9mYWxsYmFja190b19kcml2ZXJfb25fcHR4YXNf",
            "bm90X2ZvdW5kGIoBIAEoCBIgChd4bGFfZ3B1X2FzbV9leHRyYV9mbGFncxiN",
            "ASABKAkSLwomeGxhX211bHRpaGVhcF9zaXplX2NvbnN0cmFpbnRfcGVyX2hl",
            "YXAYjgEgASgFEikKIHhsYV9kZXRhaWxlZF9sb2dnaW5nX2FuZF9kdW1waW5n",
            "GI8BIAEoCBIuCiV4bGFfZ3B1X2ZvcmNlX2NvbXBpbGF0aW9uX3BhcmFsbGVs",
            "aXNtGJMBIAEoBRIiChl4bGFfZ3B1X2RldGVybWluaXN0aWNfb3BzGJQBIAEo",
            "CBIdChR4bGFfZ3B1X2xsdm1faXJfZmlsZRiWASADKAkSKAofeGxhX2dwdV9l",
            "bmFibGVfYXN5bmNfYWxsX3JlZHVjZRiYASABKAgSMwoqeGxhX2dwdV9hbGxf",
            "cmVkdWNlX2NvbWJpbmVfdGhyZXNob2xkX2J5dGVzGJ0BIAEoAxImCh14bGFf",
            "Z3B1X2FsbF9yZWR1Y2VfY29udGlndW91cxieASABKAgSPAozeGxhX2dwdV9h",
            "bGxfcmVkdWNlX2JsdWVjb25uZWN0X251bV9kZXZpY2VzX3Blcl9ob3N0GJ8B",
            "IAEoBRImCh14bGFfZ3B1X2VuYWJsZV9jdWRubl9mcm9udGVuZBigASABKAgS",
            "IgoZeGxhX2R1bXBfZGlzYWJsZV9tZXRhZGF0YRiZASABKAgSIQoYeGxhX2R1",
            "bXBfaGxvX3BpcGVsaW5lX3JlGJoBIAEoCRItCiR4bGFfZ3B1X3N0cmljdF9j",
            "b252X2FsZ29yaXRobV9waWNrZXIYnAEgASgIEi4KJXhsYV9ncHVfZW5hYmxl",
            "X3hsYV9ydW50aW1lX2V4ZWN1dGFibGUYqQEgASgIEjEKKHhsYV9ncHVfbmNj",
            "bF90ZXJtaW5hdGlvbl90aW1lb3V0X3NlY29uZHMYowEgASgDEigKH3hsYV9n",
            "cHVfZW5hYmxlX3NoYXJlZF9jb25zdGFudHMYpQEgASgIEiAKF3hsYV9ncHVf",
            "ZW5hYmxlX2N1Ymxhc2x0GKYBIAEoCBIuCiV4bGFfZ3B1X3JlZHpvbmVfc2Ny",
            "YXRjaF9tYXhfbWVnYWJ5dGVzGKcBIAEoAxIsCiN4bGFfZ3B1X3NpbXBsaWZ5",
            "X2FsbF9mcF9jb252ZXJzaW9ucxioASABKAgSIgoZeGxhX2dwdV9ub3JtYWxp",
            "emVfbGF5b3V0cxisASABKAgSGAoPeGxhX2NwdV91c2VfYWNsGK4BIAEoCBIl",
            "Chx4bGFfY3B1X3N0cmljdF9kb3RfY29udl9tYXRoGK8BIAEoCBJRChl4bGFf",
            "YmFja2VuZF9leHRyYV9vcHRpb25zGPQDIAMoCzItLnhsYS5EZWJ1Z09wdGlv",
            "bnMuWGxhQmFja2VuZEV4dHJhT3B0aW9uc0VudHJ5Gj0KG1hsYUJhY2tlbmRF",
            "eHRyYU9wdGlvbnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6",
            "AjgBIjgKC1NoYXBlQ2hlY2tzEgoKBklHTk9SRRAAEgsKB1JVTlRJTUUQARIQ",
            "CgxDT01QSUxFX1RJTUUQAiKRAQoSU3RlcE1hcmtlckxvY2F0aW9uEhYKElNU",
            "RVBfTUFSS19BVF9FTlRSWRAAEiUKIVNURVBfTUFSS19BVF9UT1BfTEVWRUxf",
            "V0hJTEVfTE9PUBABEigKJFNURVBfTUFSS19BVF9TRUNPTkRfTEVWRUxfV0hJ",
            "TEVfTE9PUBADEhIKDlNURVBfTUFSS19OT05FEAJKBAg/EEBKBgiGARCHAUoE",
            "CFAQUUoECF0QXkoECF4QX0oGCIIBEIMBSgYIoQEQogFKBgiiARCjAUoECAUQ",
            "BkoECHUQdkoGCIUBEIYBSgYIiwEQjAFKBgiwARCxAUoGCLIBELMBIqsEChBF",
            "eGVjdXRpb25PcHRpb25zEjEKGHNoYXBlX3dpdGhfb3V0cHV0X2xheW91dBgC",
            "IAEoCzIPLnhsYS5TaGFwZVByb3RvEgwKBHNlZWQYAyABKAQSKAoNZGVidWdf",
            "b3B0aW9ucxgEIAEoCzIRLnhsYS5EZWJ1Z09wdGlvbnMSKQoOZGV2aWNlX2hh",
            "bmRsZXMYBSADKAsyES54bGEuRGV2aWNlSGFuZGxlEhQKDG51bV9yZXBsaWNh",
            "cxgGIAEoBRI1ChFkZXZpY2VfYXNzaWdubWVudBgHIAEoCzIaLnhsYS5EZXZp",
            "Y2VBc3NpZ25tZW50UHJvdG8SIAoYYWxpYXNfcGFzc3Rocm91Z2hfcGFyYW1z",
            "GAggASgIEhYKDm51bV9wYXJ0aXRpb25zGAkgASgFEhEKCWxhdW5jaF9pZBgK",
            "IAEoBRIdChV1c2Vfc3BtZF9wYXJ0aXRpb25pbmcYCyABKAgSIgoadXNlX2F1",
            "dG9fc3BtZF9wYXJ0aXRpb25pbmcYDyABKAgSKQohYXV0b19zcG1kX3BhcnRp",
            "dGlvbmluZ19tZXNoX3NoYXBlGBAgAygDEicKH2F1dG9fc3BtZF9wYXJ0aXRp",
            "b25pbmdfbWVzaF9pZHMYESADKAMSFwoPZGVkdXBsaWNhdGVfaGxvGAwgASgI",
            "EjEKKWFsbG93X3NwbWRfc2hhcmRpbmdfcHJvcGFnYXRpb25fdG9fb3V0cHV0",
            "GA4gASgISgQIDRAOIi8KF0dldERldmljZUhhbmRsZXNSZXF1ZXN0EhQKDGRl",
            "dmljZV9jb3VudBgBIAEoAyJFChhHZXREZXZpY2VIYW5kbGVzUmVzcG9uc2US",
            "KQoOZGV2aWNlX2hhbmRsZXMYASADKAsyES54bGEuRGV2aWNlSGFuZGxlImoK",
            "F1RyYW5zZmVyVG9DbGllbnRSZXF1ZXN0EiMKBGRhdGEYASABKAsyFS54bGEu",
            "R2xvYmFsRGF0YUhhbmRsZRIqChFzaGFwZV93aXRoX2xheW91dBgCIAEoCzIP",
            "LnhsYS5TaGFwZVByb3RvIj4KGFRyYW5zZmVyVG9DbGllbnRSZXNwb25zZRIi",
            "CgdsaXRlcmFsGAEgASgLMhEueGxhLkxpdGVyYWxQcm90byJnChdUcmFuc2Zl",
            "clRvU2VydmVyUmVxdWVzdBIiCgdsaXRlcmFsGAEgASgLMhEueGxhLkxpdGVy",
            "YWxQcm90bxIoCg1kZXZpY2VfaGFuZGxlGAIgASgLMhEueGxhLkRldmljZUhh",
            "bmRsZSI/ChhUcmFuc2ZlclRvU2VydmVyUmVzcG9uc2USIwoEZGF0YRgBIAEo",
            "CzIVLnhsYS5HbG9iYWxEYXRhSGFuZGxlInsKF1RyYW5zZmVyVG9JbmZlZWRS",
            "ZXF1ZXN0EiIKB2xpdGVyYWwYASABKAsyES54bGEuTGl0ZXJhbFByb3RvEhIK",
            "CnJlcGxpY2FfaWQYAiABKAMSKAoNZGV2aWNlX2hhbmRsZRgDIAEoCzIRLnhs",
            "YS5EZXZpY2VIYW5kbGUiGgoYVHJhbnNmZXJUb0luZmVlZFJlc3BvbnNlIoYB",
            "ChpUcmFuc2ZlckZyb21PdXRmZWVkUmVxdWVzdBIqChFzaGFwZV93aXRoX2xh",
            "eW91dBgBIAEoCzIPLnhsYS5TaGFwZVByb3RvEhIKCnJlcGxpY2FfaWQYAiAB",
            "KAMSKAoNZGV2aWNlX2hhbmRsZRgDIAEoCzIRLnhsYS5EZXZpY2VIYW5kbGUi",
            "QQobVHJhbnNmZXJGcm9tT3V0ZmVlZFJlc3BvbnNlEiIKB2xpdGVyYWwYASAB",
            "KAsyES54bGEuTGl0ZXJhbFByb3RvIj4KElJlc2V0RGV2aWNlUmVxdWVzdBIo",
            "Cg1kZXZpY2VfaGFuZGxlGAEgASgLMhEueGxhLkRldmljZUhhbmRsZSIVChNS",
            "ZXNldERldmljZVJlc3BvbnNlInIKHENvbXB1dGF0aW9uR3JhcGhTdGF0c1Jl",
            "cXVlc3QSKAoLY29tcHV0YXRpb24YASABKAsyEy54bGEuSGxvTW9kdWxlUHJv",
            "dG8SKAoNZGVidWdfb3B0aW9ucxgCIAEoCzIRLnhsYS5EZWJ1Z09wdGlvbnMi",
            "QAoYQ29tcHV0YXRpb25TdGF0c1Jlc3BvbnNlEiQKBXN0YXRzGAEgASgLMhUu",
            "eGxhLkNvbXB1dGF0aW9uU3RhdHMiUgoaQ3JlYXRlQ2hhbm5lbEhhbmRsZVJl",
            "cXVlc3QSNAoMY2hhbm5lbF90eXBlGAEgASgOMh4ueGxhLkNoYW5uZWxIYW5k",
            "bGUuQ2hhbm5lbFR5cGUiQgobQ3JlYXRlQ2hhbm5lbEhhbmRsZVJlc3BvbnNl",
            "EiMKB2NoYW5uZWwYASABKAsyEi54bGEuQ2hhbm5lbEhhbmRsZSI4ChFVbnJl",
            "Z2lzdGVyUmVxdWVzdBIjCgRkYXRhGAEgAygLMhUueGxhLkdsb2JhbERhdGFI",
            "YW5kbGUiFAoSVW5yZWdpc3RlclJlc3BvbnNlIp4BCg5Db21waWxlUmVxdWVz",
            "dBIoCgtjb21wdXRhdGlvbhgBIAEoCzITLnhsYS5IbG9Nb2R1bGVQcm90bxIw",
            "ChFleGVjdXRpb25fb3B0aW9ucxgCIAEoCzIVLnhsYS5FeGVjdXRpb25PcHRp",
            "b25zEjAKF2lucHV0X3NoYXBlX3dpdGhfbGF5b3V0GAMgAygLMg8ueGxhLlNo",
            "YXBlUHJvdG8iNwoPQ29tcGlsZVJlc3BvbnNlEiQKBmhhbmRsZRgBIAEoCzIU",
            "LnhsYS5FeGVjdXRpb25IYW5kbGUiYAoORXhlY3V0ZVJlcXVlc3QSJAoGaGFu",
            "ZGxlGAEgASgLMhQueGxhLkV4ZWN1dGlvbkhhbmRsZRIoCglhcmd1bWVudHMY",
            "AiADKAsyFS54bGEuR2xvYmFsRGF0YUhhbmRsZSKbAQoTRXhlY3V0ZUdyYXBo",
            "UmVxdWVzdBIoCgtjb21wdXRhdGlvbhgBIAEoCzITLnhsYS5IbG9Nb2R1bGVQ",
            "cm90bxIoCglhcmd1bWVudHMYAiADKAsyFS54bGEuR2xvYmFsRGF0YUhhbmRs",
            "ZRIwChFleGVjdXRpb25fb3B0aW9ucxgDIAEoCzIVLnhsYS5FeGVjdXRpb25P",
            "cHRpb25zIkkKG0V4ZWN1dGVHcmFwaFBhcmFsbGVsUmVxdWVzdBIqCghyZXF1",
            "ZXN0cxgBIAMoCzIYLnhsYS5FeGVjdXRlR3JhcGhSZXF1ZXN0ImAKD0V4ZWN1",
            "dGVSZXNwb25zZRIlCgZvdXRwdXQYASABKAsyFS54bGEuR2xvYmFsRGF0YUhh",
            "bmRsZRImCgdwcm9maWxlGAIgASgLMhUueGxhLkV4ZWN1dGlvblByb2ZpbGUi",
            "QgoXRXhlY3V0ZVBhcmFsbGVsUmVzcG9uc2USJwoJcmVzcG9uc2VzGAEgAygL",
            "MhQueGxhLkV4ZWN1dGVSZXNwb25zZSJCChdXYWl0Rm9yRXhlY3V0aW9uUmVx",
            "dWVzdBInCglleGVjdXRpb24YASABKAsyFC54bGEuRXhlY3V0aW9uSGFuZGxl",
            "ImkKGFdhaXRGb3JFeGVjdXRpb25SZXNwb25zZRIlCgZvdXRwdXQYASABKAsy",
            "FS54bGEuR2xvYmFsRGF0YUhhbmRsZRImCgdwcm9maWxlGAIgASgLMhUueGxh",
            "LkV4ZWN1dGlvblByb2ZpbGUicAobQ29tcHV0ZUNvbnN0YW50R3JhcGhSZXF1",
            "ZXN0EigKC2NvbXB1dGF0aW9uGAEgASgLMhMueGxhLkhsb01vZHVsZVByb3Rv",
            "EicKDW91dHB1dF9sYXlvdXQYAiABKAsyEC54bGEuTGF5b3V0UHJvdG8iPQoX",
            "Q29tcHV0ZUNvbnN0YW50UmVzcG9uc2USIgoHbGl0ZXJhbBgBIAEoCzIRLnhs",
            "YS5MaXRlcmFsUHJvdG8iRgoXRGVjb25zdHJ1Y3RUdXBsZVJlcXVlc3QSKwoM",
            "dHVwbGVfaGFuZGxlGAIgASgLMhUueGxhLkdsb2JhbERhdGFIYW5kbGUiSgoY",
            "RGVjb25zdHJ1Y3RUdXBsZVJlc3BvbnNlEi4KD2VsZW1lbnRfaGFuZGxlcxgB",
            "IAMoCzIVLnhsYS5HbG9iYWxEYXRhSGFuZGxlIpsBCg9Mb2FkRGF0YVJlcXVl",
            "c3QSHAoUY29sdW1uaW9fdGFibGV0X3BhdGgYASABKAkSFgoOY29sdW1uaW9f",
            "ZmllbGQYAiABKAkSJgoNZWxlbWVudF9zaGFwZRgDIAEoCzIPLnhsYS5TaGFw",
            "ZVByb3RvEg4KBm9mZnNldBgEIAEoAxINCgVsaW1pdBgFIAEoAxILCgN6aXAY",
            "BiABKAgingEKEExvYWREYXRhUmVzcG9uc2USIwoEZGF0YRgBIAEoCzIVLnhs",
            "YS5HbG9iYWxEYXRhSGFuZGxlEiMKCmRhdGFfc2hhcGUYAiABKAsyDy54bGEu",
            "U2hhcGVQcm90bxIWCg5hdmFpbGFibGVfcm93cxgDIAEoAxITCgtyb3dzX2xv",
            "YWRlZBgEIAEoAxITCgtuYW5vc2Vjb25kcxgFIAEoAyI2Cg9HZXRTaGFwZVJl",
            "cXVlc3QSIwoEZGF0YRgBIAEoCzIVLnhsYS5HbG9iYWxEYXRhSGFuZGxlIjIK",
            "EEdldFNoYXBlUmVzcG9uc2USHgoFc2hhcGUYASABKAsyDy54bGEuU2hhcGVQ",
            "cm90byI0Cg1VbnBhY2tSZXF1ZXN0EiMKBGRhdGEYASABKAsyFS54bGEuR2xv",
            "YmFsRGF0YUhhbmRsZSI6Cg5VbnBhY2tSZXNwb25zZRIoCgl0aWVkX2RhdGEY",
            "ASADKAsyFS54bGEuR2xvYmFsRGF0YUhhbmRsZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Xla.HloReflection.Descriptor, global::Xla.XlaDataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.DebugOptions), global::Xla.DebugOptions.Parser, new[]{ "XlaHloGraphAddresses", "XlaHloProfile", "XlaDisableHloPasses", "XlaEnableHloPassesOnly", "XlaDisableAllHloPasses", "XlaBackendOptimizationLevel", "XlaEmbedIrInExecutable", "XlaEliminateHloImplicitBroadcast", "XlaCpuMultiThreadEigen", "XlaGpuCudaDataDir", "XlaGpuFtz", "XlaLlvmEnableAliasScopeMetadata", "XlaLlvmEnableNoaliasMetadata", "XlaLlvmEnableInvariantLoadMetadata", "XlaLlvmDisableExpensivePasses", "XlaTestAllOutputLayouts", "XlaTestAllInputLayouts", "XlaHloGraphShardingColor", "XlaCpuUseMklDnn", "XlaCpuUseXlaRuntime", "XlaGpuMaxKernelUnrollFactor", "XlaCpuEnableFastMath", "XlaCpuFastMathHonorNans", "XlaCpuFastMathHonorInfs", "XlaCpuFastMathHonorDivision", "XlaCpuFastMathHonorFunctions", "XlaCpuEnableFastMinMax", "XlaGpuEnableFastMinMax", "XlaAllowExcessPrecision", "XlaGpuCrashOnVerificationFailures", "XlaGpuAutotuneLevel", "XlaForceHostPlatformDeviceCount", "XlaGpuDisableGpuasmOptimizations", "XlaGpuShapeChecks", "XlaCpuEnableMlirLowering", "XlaGpuEnableMlirLowering", "XlaHloEvaluatorUseFastPath", "XlaAllowScalarIndexDynamicOps", "XlaStepMarkerLocation", "XlaDumpTo", "XlaDumpHloModuleRe", "XlaDumpHloPassRe", "XlaDumpHloAsText", "XlaDumpHloAsProto", "XlaDumpHloAsDot", "XlaDumpHloAsUrl", "XlaDumpHloAsHtml", "XlaDumpFusionVisualization", "XlaDumpHloSnapshots", "XlaDumpIncludeTimestamp", "XlaDumpMaxHloModules", "XlaDumpModuleMetadata", "XlaDumpCompressProtos", "XlaDumpHloAsLongText", "XlaGpuForceConvNchw", "XlaGpuForceConvNhwc", "XlaGpuPtxFile", "XlaGpuDumpLlvmir", "XlaGpuAlgorithmDenylistPath", "XlaTpuDetectNan", "XlaTpuDetectInf", "XlaCpuEnableXprofTraceme", "XlaGpuUnsafeFallbackToDriverOnPtxasNotFound", "XlaGpuAsmExtraFlags", "XlaMultiheapSizeConstraintPerHeap", "XlaDetailedLoggingAndDumping", "XlaGpuForceCompilationParallelism", "XlaGpuDeterministicOps", "XlaGpuLlvmIrFile", "XlaGpuEnableAsyncAllReduce", "XlaGpuAllReduceCombineThresholdBytes", "XlaGpuAllReduceContiguous", "XlaGpuAllReduceBlueconnectNumDevicesPerHost", "XlaGpuEnableCudnnFrontend", "XlaDumpDisableMetadata", "XlaDumpHloPipelineRe", "XlaGpuStrictConvAlgorithmPicker", "XlaGpuEnableXlaRuntimeExecutable", "XlaGpuNcclTerminationTimeoutSeconds", "XlaGpuEnableSharedConstants", "XlaGpuEnableCublaslt", "XlaGpuRedzoneScratchMaxMegabytes", "XlaGpuSimplifyAllFpConversions", "XlaGpuNormalizeLayouts", "XlaCpuUseAcl", "XlaCpuStrictDotConvMath", "XlaBackendExtraOptions" }, null, new[]{ typeof(global::Xla.DebugOptions.Types.ShapeChecks), typeof(global::Xla.DebugOptions.Types.StepMarkerLocation) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.ExecutionOptions), global::Xla.ExecutionOptions.Parser, new[]{ "ShapeWithOutputLayout", "Seed", "DebugOptions", "DeviceHandles", "NumReplicas", "DeviceAssignment", "AliasPassthroughParams", "NumPartitions", "LaunchId", "UseSpmdPartitioning", "UseAutoSpmdPartitioning", "AutoSpmdPartitioningMeshShape", "AutoSpmdPartitioningMeshIds", "DeduplicateHlo", "AllowSpmdShardingPropagationToOutput" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.GetDeviceHandlesRequest), global::Xla.GetDeviceHandlesRequest.Parser, new[]{ "DeviceCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.GetDeviceHandlesResponse), global::Xla.GetDeviceHandlesResponse.Parser, new[]{ "DeviceHandles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.TransferToClientRequest), global::Xla.TransferToClientRequest.Parser, new[]{ "Data", "ShapeWithLayout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.TransferToClientResponse), global::Xla.TransferToClientResponse.Parser, new[]{ "Literal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.TransferToServerRequest), global::Xla.TransferToServerRequest.Parser, new[]{ "Literal", "DeviceHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.TransferToServerResponse), global::Xla.TransferToServerResponse.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.TransferToInfeedRequest), global::Xla.TransferToInfeedRequest.Parser, new[]{ "Literal", "ReplicaId", "DeviceHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.TransferToInfeedResponse), global::Xla.TransferToInfeedResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.TransferFromOutfeedRequest), global::Xla.TransferFromOutfeedRequest.Parser, new[]{ "ShapeWithLayout", "ReplicaId", "DeviceHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.TransferFromOutfeedResponse), global::Xla.TransferFromOutfeedResponse.Parser, new[]{ "Literal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.ResetDeviceRequest), global::Xla.ResetDeviceRequest.Parser, new[]{ "DeviceHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.ResetDeviceResponse), global::Xla.ResetDeviceResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.ComputationGraphStatsRequest), global::Xla.ComputationGraphStatsRequest.Parser, new[]{ "Computation", "DebugOptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.ComputationStatsResponse), global::Xla.ComputationStatsResponse.Parser, new[]{ "Stats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.CreateChannelHandleRequest), global::Xla.CreateChannelHandleRequest.Parser, new[]{ "ChannelType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.CreateChannelHandleResponse), global::Xla.CreateChannelHandleResponse.Parser, new[]{ "Channel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.UnregisterRequest), global::Xla.UnregisterRequest.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.UnregisterResponse), global::Xla.UnregisterResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.CompileRequest), global::Xla.CompileRequest.Parser, new[]{ "Computation", "ExecutionOptions", "InputShapeWithLayout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.CompileResponse), global::Xla.CompileResponse.Parser, new[]{ "Handle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.ExecuteRequest), global::Xla.ExecuteRequest.Parser, new[]{ "Handle", "Arguments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.ExecuteGraphRequest), global::Xla.ExecuteGraphRequest.Parser, new[]{ "Computation", "Arguments", "ExecutionOptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.ExecuteGraphParallelRequest), global::Xla.ExecuteGraphParallelRequest.Parser, new[]{ "Requests" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.ExecuteResponse), global::Xla.ExecuteResponse.Parser, new[]{ "Output", "Profile" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.ExecuteParallelResponse), global::Xla.ExecuteParallelResponse.Parser, new[]{ "Responses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.WaitForExecutionRequest), global::Xla.WaitForExecutionRequest.Parser, new[]{ "Execution" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.WaitForExecutionResponse), global::Xla.WaitForExecutionResponse.Parser, new[]{ "Output", "Profile" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.ComputeConstantGraphRequest), global::Xla.ComputeConstantGraphRequest.Parser, new[]{ "Computation", "OutputLayout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.ComputeConstantResponse), global::Xla.ComputeConstantResponse.Parser, new[]{ "Literal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.DeconstructTupleRequest), global::Xla.DeconstructTupleRequest.Parser, new[]{ "TupleHandle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.DeconstructTupleResponse), global::Xla.DeconstructTupleResponse.Parser, new[]{ "ElementHandles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.LoadDataRequest), global::Xla.LoadDataRequest.Parser, new[]{ "ColumnioTabletPath", "ColumnioField", "ElementShape", "Offset", "Limit", "Zip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.LoadDataResponse), global::Xla.LoadDataResponse.Parser, new[]{ "Data", "DataShape", "AvailableRows", "RowsLoaded", "Nanoseconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.GetShapeRequest), global::Xla.GetShapeRequest.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.GetShapeResponse), global::Xla.GetShapeResponse.Parser, new[]{ "Shape" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.UnpackRequest), global::Xla.UnpackRequest.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Xla.UnpackResponse), global::Xla.UnpackResponse.Parser, new[]{ "TiedData" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Debugging options for XLA. These options may change at any time - there are
  /// no guarantees about backward or forward compatibility for these fields.
  /// </summary>
  public sealed partial class DebugOptions : pb::IMessage<DebugOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DebugOptions> _parser = new pb::MessageParser<DebugOptions>(() => new DebugOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DebugOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DebugOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DebugOptions(DebugOptions other) : this() {
      xlaHloGraphAddresses_ = other.xlaHloGraphAddresses_;
      xlaHloProfile_ = other.xlaHloProfile_;
      xlaDisableHloPasses_ = other.xlaDisableHloPasses_.Clone();
      xlaEnableHloPassesOnly_ = other.xlaEnableHloPassesOnly_.Clone();
      xlaDisableAllHloPasses_ = other.xlaDisableAllHloPasses_;
      xlaBackendOptimizationLevel_ = other.xlaBackendOptimizationLevel_;
      xlaEmbedIrInExecutable_ = other.xlaEmbedIrInExecutable_;
      xlaEliminateHloImplicitBroadcast_ = other.xlaEliminateHloImplicitBroadcast_;
      xlaCpuMultiThreadEigen_ = other.xlaCpuMultiThreadEigen_;
      xlaGpuCudaDataDir_ = other.xlaGpuCudaDataDir_;
      xlaGpuFtz_ = other.xlaGpuFtz_;
      xlaLlvmEnableAliasScopeMetadata_ = other.xlaLlvmEnableAliasScopeMetadata_;
      xlaLlvmEnableNoaliasMetadata_ = other.xlaLlvmEnableNoaliasMetadata_;
      xlaLlvmEnableInvariantLoadMetadata_ = other.xlaLlvmEnableInvariantLoadMetadata_;
      xlaLlvmDisableExpensivePasses_ = other.xlaLlvmDisableExpensivePasses_;
      xlaTestAllOutputLayouts_ = other.xlaTestAllOutputLayouts_;
      xlaTestAllInputLayouts_ = other.xlaTestAllInputLayouts_;
      xlaHloGraphShardingColor_ = other.xlaHloGraphShardingColor_;
      xlaCpuUseMklDnn_ = other.xlaCpuUseMklDnn_;
      xlaCpuUseXlaRuntime_ = other.xlaCpuUseXlaRuntime_;
      xlaGpuMaxKernelUnrollFactor_ = other.xlaGpuMaxKernelUnrollFactor_;
      xlaCpuEnableFastMath_ = other.xlaCpuEnableFastMath_;
      xlaCpuFastMathHonorNans_ = other.xlaCpuFastMathHonorNans_;
      xlaCpuFastMathHonorInfs_ = other.xlaCpuFastMathHonorInfs_;
      xlaCpuFastMathHonorDivision_ = other.xlaCpuFastMathHonorDivision_;
      xlaCpuFastMathHonorFunctions_ = other.xlaCpuFastMathHonorFunctions_;
      xlaCpuEnableFastMinMax_ = other.xlaCpuEnableFastMinMax_;
      xlaGpuEnableFastMinMax_ = other.xlaGpuEnableFastMinMax_;
      xlaAllowExcessPrecision_ = other.xlaAllowExcessPrecision_;
      xlaGpuCrashOnVerificationFailures_ = other.xlaGpuCrashOnVerificationFailures_;
      xlaGpuAutotuneLevel_ = other.xlaGpuAutotuneLevel_;
      xlaForceHostPlatformDeviceCount_ = other.xlaForceHostPlatformDeviceCount_;
      xlaGpuDisableGpuasmOptimizations_ = other.xlaGpuDisableGpuasmOptimizations_;
      xlaGpuShapeChecks_ = other.xlaGpuShapeChecks_;
      xlaCpuEnableMlirLowering_ = other.xlaCpuEnableMlirLowering_;
      xlaGpuEnableMlirLowering_ = other.xlaGpuEnableMlirLowering_;
      xlaHloEvaluatorUseFastPath_ = other.xlaHloEvaluatorUseFastPath_;
      xlaAllowScalarIndexDynamicOps_ = other.xlaAllowScalarIndexDynamicOps_;
      xlaStepMarkerLocation_ = other.xlaStepMarkerLocation_;
      xlaDumpTo_ = other.xlaDumpTo_;
      xlaDumpHloModuleRe_ = other.xlaDumpHloModuleRe_;
      xlaDumpHloPassRe_ = other.xlaDumpHloPassRe_;
      xlaDumpHloAsText_ = other.xlaDumpHloAsText_;
      xlaDumpHloAsProto_ = other.xlaDumpHloAsProto_;
      xlaDumpHloAsDot_ = other.xlaDumpHloAsDot_;
      xlaDumpHloAsUrl_ = other.xlaDumpHloAsUrl_;
      xlaDumpHloAsHtml_ = other.xlaDumpHloAsHtml_;
      xlaDumpFusionVisualization_ = other.xlaDumpFusionVisualization_;
      xlaDumpHloSnapshots_ = other.xlaDumpHloSnapshots_;
      xlaDumpIncludeTimestamp_ = other.xlaDumpIncludeTimestamp_;
      xlaDumpMaxHloModules_ = other.xlaDumpMaxHloModules_;
      xlaDumpModuleMetadata_ = other.xlaDumpModuleMetadata_;
      xlaDumpCompressProtos_ = other.xlaDumpCompressProtos_;
      xlaDumpHloAsLongText_ = other.xlaDumpHloAsLongText_;
      xlaGpuForceConvNchw_ = other.xlaGpuForceConvNchw_;
      xlaGpuForceConvNhwc_ = other.xlaGpuForceConvNhwc_;
      xlaGpuPtxFile_ = other.xlaGpuPtxFile_.Clone();
      xlaGpuDumpLlvmir_ = other.xlaGpuDumpLlvmir_;
      xlaGpuAlgorithmDenylistPath_ = other.xlaGpuAlgorithmDenylistPath_;
      xlaTpuDetectNan_ = other.xlaTpuDetectNan_;
      xlaTpuDetectInf_ = other.xlaTpuDetectInf_;
      xlaCpuEnableXprofTraceme_ = other.xlaCpuEnableXprofTraceme_;
      xlaGpuUnsafeFallbackToDriverOnPtxasNotFound_ = other.xlaGpuUnsafeFallbackToDriverOnPtxasNotFound_;
      xlaGpuAsmExtraFlags_ = other.xlaGpuAsmExtraFlags_;
      xlaMultiheapSizeConstraintPerHeap_ = other.xlaMultiheapSizeConstraintPerHeap_;
      xlaDetailedLoggingAndDumping_ = other.xlaDetailedLoggingAndDumping_;
      xlaGpuForceCompilationParallelism_ = other.xlaGpuForceCompilationParallelism_;
      xlaGpuDeterministicOps_ = other.xlaGpuDeterministicOps_;
      xlaGpuLlvmIrFile_ = other.xlaGpuLlvmIrFile_.Clone();
      xlaGpuEnableAsyncAllReduce_ = other.xlaGpuEnableAsyncAllReduce_;
      xlaGpuAllReduceCombineThresholdBytes_ = other.xlaGpuAllReduceCombineThresholdBytes_;
      xlaGpuAllReduceContiguous_ = other.xlaGpuAllReduceContiguous_;
      xlaGpuAllReduceBlueconnectNumDevicesPerHost_ = other.xlaGpuAllReduceBlueconnectNumDevicesPerHost_;
      xlaGpuEnableCudnnFrontend_ = other.xlaGpuEnableCudnnFrontend_;
      xlaDumpDisableMetadata_ = other.xlaDumpDisableMetadata_;
      xlaDumpHloPipelineRe_ = other.xlaDumpHloPipelineRe_;
      xlaGpuStrictConvAlgorithmPicker_ = other.xlaGpuStrictConvAlgorithmPicker_;
      xlaGpuEnableXlaRuntimeExecutable_ = other.xlaGpuEnableXlaRuntimeExecutable_;
      xlaGpuNcclTerminationTimeoutSeconds_ = other.xlaGpuNcclTerminationTimeoutSeconds_;
      xlaGpuEnableSharedConstants_ = other.xlaGpuEnableSharedConstants_;
      xlaGpuEnableCublaslt_ = other.xlaGpuEnableCublaslt_;
      xlaGpuRedzoneScratchMaxMegabytes_ = other.xlaGpuRedzoneScratchMaxMegabytes_;
      xlaGpuSimplifyAllFpConversions_ = other.xlaGpuSimplifyAllFpConversions_;
      xlaGpuNormalizeLayouts_ = other.xlaGpuNormalizeLayouts_;
      xlaCpuUseAcl_ = other.xlaCpuUseAcl_;
      xlaCpuStrictDotConvMath_ = other.xlaCpuStrictDotConvMath_;
      xlaBackendExtraOptions_ = other.xlaBackendExtraOptions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DebugOptions Clone() {
      return new DebugOptions(this);
    }

    /// <summary>Field number for the "xla_hlo_graph_addresses" field.</summary>
    public const int XlaHloGraphAddressesFieldNumber = 2;
    private bool xlaHloGraphAddresses_;
    /// <summary>
    /// Show addresses of HLO ops in graph dump.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaHloGraphAddresses {
      get { return xlaHloGraphAddresses_; }
      set {
        xlaHloGraphAddresses_ = value;
      }
    }

    /// <summary>Field number for the "xla_hlo_profile" field.</summary>
    public const int XlaHloProfileFieldNumber = 9;
    private bool xlaHloProfile_;
    /// <summary>
    /// Instrument the computation to collect per-HLO cycle counts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaHloProfile {
      get { return xlaHloProfile_; }
      set {
        xlaHloProfile_ = value;
      }
    }

    /// <summary>Field number for the "xla_disable_hlo_passes" field.</summary>
    public const int XlaDisableHloPassesFieldNumber = 30;
    private static readonly pb::FieldCodec<string> _repeated_xlaDisableHloPasses_codec
        = pb::FieldCodec.ForString(242);
    private readonly pbc::RepeatedField<string> xlaDisableHloPasses_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of HLO passes to disable/enable. These names must exactly match the
    /// pass names as specified by the HloPassInterface::name() method.
    ///
    /// At least one of xla_disable_hlo_passes and xla_enable_hlo_passes_only must
    /// be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> XlaDisableHloPasses {
      get { return xlaDisableHloPasses_; }
    }

    /// <summary>Field number for the "xla_enable_hlo_passes_only" field.</summary>
    public const int XlaEnableHloPassesOnlyFieldNumber = 124;
    private static readonly pb::FieldCodec<string> _repeated_xlaEnableHloPassesOnly_codec
        = pb::FieldCodec.ForString(994);
    private readonly pbc::RepeatedField<string> xlaEnableHloPassesOnly_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> XlaEnableHloPassesOnly {
      get { return xlaEnableHloPassesOnly_; }
    }

    /// <summary>Field number for the "xla_disable_all_hlo_passes" field.</summary>
    public const int XlaDisableAllHloPassesFieldNumber = 104;
    private bool xlaDisableAllHloPasses_;
    /// <summary>
    /// Disables all HLO passes.  Notes that some passes are necessary for
    /// correctness and the invariants that must be satisfied by "fully optimized"
    /// HLO are different for different devices and may change over time.  The only
    /// "guarantee", such as it is, is that if you compile XLA and dump the
    /// optimized HLO for some graph, you should be able to run it again on the
    /// same device with the same build of XLA.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaDisableAllHloPasses {
      get { return xlaDisableAllHloPasses_; }
      set {
        xlaDisableAllHloPasses_ = value;
      }
    }

    /// <summary>Field number for the "xla_backend_optimization_level" field.</summary>
    public const int XlaBackendOptimizationLevelFieldNumber = 31;
    private int xlaBackendOptimizationLevel_;
    /// <summary>
    /// Numerical optimization level for the XLA compiler backend; the specific
    /// interpretation of this value is left to the backends.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int XlaBackendOptimizationLevel {
      get { return xlaBackendOptimizationLevel_; }
      set {
        xlaBackendOptimizationLevel_ = value;
      }
    }

    /// <summary>Field number for the "xla_embed_ir_in_executable" field.</summary>
    public const int XlaEmbedIrInExecutableFieldNumber = 33;
    private bool xlaEmbedIrInExecutable_;
    /// <summary>
    /// Embed the compiler IR as a string in the executable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaEmbedIrInExecutable {
      get { return xlaEmbedIrInExecutable_; }
      set {
        xlaEmbedIrInExecutable_ = value;
      }
    }

    /// <summary>Field number for the "xla_eliminate_hlo_implicit_broadcast" field.</summary>
    public const int XlaEliminateHloImplicitBroadcastFieldNumber = 35;
    private bool xlaEliminateHloImplicitBroadcast_;
    /// <summary>
    /// Eliminate implicit broadcasts when lowering user computations to HLO
    /// instructions; use explicit broadcast instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaEliminateHloImplicitBroadcast {
      get { return xlaEliminateHloImplicitBroadcast_; }
      set {
        xlaEliminateHloImplicitBroadcast_ = value;
      }
    }

    /// <summary>Field number for the "xla_cpu_multi_thread_eigen" field.</summary>
    public const int XlaCpuMultiThreadEigenFieldNumber = 60;
    private bool xlaCpuMultiThreadEigen_;
    /// <summary>
    /// When generating calls to Eigen in the CPU backend, use multi-threaded Eigen
    /// mode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaCpuMultiThreadEigen {
      get { return xlaCpuMultiThreadEigen_; }
      set {
        xlaCpuMultiThreadEigen_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_cuda_data_dir" field.</summary>
    public const int XlaGpuCudaDataDirFieldNumber = 61;
    private string xlaGpuCudaDataDir_ = "";
    /// <summary>
    /// Path to directory with cuda/ptx tools and libraries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string XlaGpuCudaDataDir {
      get { return xlaGpuCudaDataDir_; }
      set {
        xlaGpuCudaDataDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "xla_gpu_ftz" field.</summary>
    public const int XlaGpuFtzFieldNumber = 62;
    private bool xlaGpuFtz_;
    /// <summary>
    /// Enable flush-to-zero semantics in the GPU backend.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuFtz {
      get { return xlaGpuFtz_; }
      set {
        xlaGpuFtz_ = value;
      }
    }

    /// <summary>Field number for the "xla_llvm_enable_alias_scope_metadata" field.</summary>
    public const int XlaLlvmEnableAliasScopeMetadataFieldNumber = 70;
    private bool xlaLlvmEnableAliasScopeMetadata_;
    /// <summary>
    /// If true, in LLVM-based backends, emit !alias.scope metadata in
    /// generated IR.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaLlvmEnableAliasScopeMetadata {
      get { return xlaLlvmEnableAliasScopeMetadata_; }
      set {
        xlaLlvmEnableAliasScopeMetadata_ = value;
      }
    }

    /// <summary>Field number for the "xla_llvm_enable_noalias_metadata" field.</summary>
    public const int XlaLlvmEnableNoaliasMetadataFieldNumber = 71;
    private bool xlaLlvmEnableNoaliasMetadata_;
    /// <summary>
    /// If true, in LLVM-based backends, emit !noalias metadata in the
    /// generated IR.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaLlvmEnableNoaliasMetadata {
      get { return xlaLlvmEnableNoaliasMetadata_; }
      set {
        xlaLlvmEnableNoaliasMetadata_ = value;
      }
    }

    /// <summary>Field number for the "xla_llvm_enable_invariant_load_metadata" field.</summary>
    public const int XlaLlvmEnableInvariantLoadMetadataFieldNumber = 72;
    private bool xlaLlvmEnableInvariantLoadMetadata_;
    /// <summary>
    /// If true, in LLVM-based backends, emit !invariant.load metadata in
    /// the generated IR.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaLlvmEnableInvariantLoadMetadata {
      get { return xlaLlvmEnableInvariantLoadMetadata_; }
      set {
        xlaLlvmEnableInvariantLoadMetadata_ = value;
      }
    }

    /// <summary>Field number for the "xla_llvm_disable_expensive_passes" field.</summary>
    public const int XlaLlvmDisableExpensivePassesFieldNumber = 73;
    private bool xlaLlvmDisableExpensivePasses_;
    /// <summary>
    /// If true, a set of expensive LLVM optimization passes will not be run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaLlvmDisableExpensivePasses {
      get { return xlaLlvmDisableExpensivePasses_; }
      set {
        xlaLlvmDisableExpensivePasses_ = value;
      }
    }

    /// <summary>Field number for the "xla_test_all_output_layouts" field.</summary>
    public const int XlaTestAllOutputLayoutsFieldNumber = 90;
    private bool xlaTestAllOutputLayouts_;
    /// <summary>
    /// This is used by ClientLibraryTestBase::ComputeAndCompare*. If true, the
    /// computation will run n! times with all permunations of layouts for the
    /// output shape in rank n. For example, with a 3D shape, all permutations of
    /// the set {0, 1, 2} are tried.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaTestAllOutputLayouts {
      get { return xlaTestAllOutputLayouts_; }
      set {
        xlaTestAllOutputLayouts_ = value;
      }
    }

    /// <summary>Field number for the "xla_test_all_input_layouts" field.</summary>
    public const int XlaTestAllInputLayoutsFieldNumber = 91;
    private bool xlaTestAllInputLayouts_;
    /// <summary>
    /// This is used by ClientLibraryTestBase::ComputeAndCompare*. If true, the
    /// computation will run for all permunations of layouts of all input
    /// arguments. For example, with 2 input arguments in 2D and 4D shapes, the
    /// computation will run 2! * 4! times.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaTestAllInputLayouts {
      get { return xlaTestAllInputLayouts_; }
      set {
        xlaTestAllInputLayouts_ = value;
      }
    }

    /// <summary>Field number for the "xla_hlo_graph_sharding_color" field.</summary>
    public const int XlaHloGraphShardingColorFieldNumber = 92;
    private bool xlaHloGraphShardingColor_;
    /// <summary>
    /// Assign colors based on sharding information when generating the Graphviz
    /// HLO graph.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaHloGraphShardingColor {
      get { return xlaHloGraphShardingColor_; }
      set {
        xlaHloGraphShardingColor_ = value;
      }
    }

    /// <summary>Field number for the "xla_cpu_use_mkl_dnn" field.</summary>
    public const int XlaCpuUseMklDnnFieldNumber = 97;
    private bool xlaCpuUseMklDnn_;
    /// <summary>
    /// Generate calls to MKL-DNN in the CPU backend.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaCpuUseMklDnn {
      get { return xlaCpuUseMklDnn_; }
      set {
        xlaCpuUseMklDnn_ = value;
      }
    }

    /// <summary>Field number for the "xla_cpu_use_xla_runtime" field.</summary>
    public const int XlaCpuUseXlaRuntimeFieldNumber = 177;
    private bool xlaCpuUseXlaRuntime_;
    /// <summary>
    /// Enable XLA Runtime in the CPU backend.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaCpuUseXlaRuntime {
      get { return xlaCpuUseXlaRuntime_; }
      set {
        xlaCpuUseXlaRuntime_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_max_kernel_unroll_factor" field.</summary>
    public const int XlaGpuMaxKernelUnrollFactorFieldNumber = 98;
    private int xlaGpuMaxKernelUnrollFactor_;
    /// <summary>
    /// Maximum kernel unroll factor for the GPU backend.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int XlaGpuMaxKernelUnrollFactor {
      get { return xlaGpuMaxKernelUnrollFactor_; }
      set {
        xlaGpuMaxKernelUnrollFactor_ = value;
      }
    }

    /// <summary>Field number for the "xla_cpu_enable_fast_math" field.</summary>
    public const int XlaCpuEnableFastMathFieldNumber = 99;
    private bool xlaCpuEnableFastMath_;
    /// <summary>
    /// When true, "unsafe" mathematical optimizations are enabled. These
    /// transformations include but are not limited to:
    ///
    ///  - Reducing the precision of operations (e.g. using an approximate sin
    ///    function, or transforming x/y into x * (1/y)).
    ///  - Assuming that operations never produce or consume NaN or +/- Inf (this
    ///    behavior can be adjusted using xla_cpu_fast_math_allow_{nans|infs}).
    ///  - Assuming that +0 and -0 are indistinguishable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaCpuEnableFastMath {
      get { return xlaCpuEnableFastMath_; }
      set {
        xlaCpuEnableFastMath_ = value;
      }
    }

    /// <summary>Field number for the "xla_cpu_fast_math_honor_nans" field.</summary>
    public const int XlaCpuFastMathHonorNansFieldNumber = 120;
    private bool xlaCpuFastMathHonorNans_;
    /// <summary>
    /// When xla_cpu_enable_fast_math is true then this controls whether we allow
    /// operations to produce NaNs.  Ignored when xla_cpu_enable_fast_math is
    /// false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaCpuFastMathHonorNans {
      get { return xlaCpuFastMathHonorNans_; }
      set {
        xlaCpuFastMathHonorNans_ = value;
      }
    }

    /// <summary>Field number for the "xla_cpu_fast_math_honor_infs" field.</summary>
    public const int XlaCpuFastMathHonorInfsFieldNumber = 121;
    private bool xlaCpuFastMathHonorInfs_;
    /// <summary>
    /// When xla_cpu_enable_fast_math is true then this controls whether we allow
    /// operations to produce infinites. Ignored when xla_cpu_enable_fast_math is
    /// false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaCpuFastMathHonorInfs {
      get { return xlaCpuFastMathHonorInfs_; }
      set {
        xlaCpuFastMathHonorInfs_ = value;
      }
    }

    /// <summary>Field number for the "xla_cpu_fast_math_honor_division" field.</summary>
    public const int XlaCpuFastMathHonorDivisionFieldNumber = 126;
    private bool xlaCpuFastMathHonorDivision_;
    /// <summary>
    /// When xla_cpu_enable_fast_math is true then this controls whether we forbid
    /// to use the reciprocal of an argument instead of division. Ignored when
    /// xla_cpu_enable_fast_math is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaCpuFastMathHonorDivision {
      get { return xlaCpuFastMathHonorDivision_; }
      set {
        xlaCpuFastMathHonorDivision_ = value;
      }
    }

    /// <summary>Field number for the "xla_cpu_fast_math_honor_functions" field.</summary>
    public const int XlaCpuFastMathHonorFunctionsFieldNumber = 129;
    private bool xlaCpuFastMathHonorFunctions_;
    /// <summary>
    /// When xla_cpu_enable_fast_math is true then this controls whether we forbid
    /// to approximate calculations for functions. Ignored when
    /// xla_cpu_enable_fast_math is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaCpuFastMathHonorFunctions {
      get { return xlaCpuFastMathHonorFunctions_; }
      set {
        xlaCpuFastMathHonorFunctions_ = value;
      }
    }

    /// <summary>Field number for the "xla_cpu_enable_fast_min_max" field.</summary>
    public const int XlaCpuEnableFastMinMaxFieldNumber = 140;
    private bool xlaCpuEnableFastMinMax_;
    /// <summary>
    /// When false we lower the Minimum and Maximum hlos in the CPU backend such
    /// that Min(NotNaN, NaN) = Min(NaN, NotNaN) = NaN.  In other words, if flag
    /// this is false we always propagate NaNs through Min and Max.
    ///
    /// Note, this does not correspond to the exact same behavior as the gpu flag
    /// below!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaCpuEnableFastMinMax {
      get { return xlaCpuEnableFastMinMax_; }
      set {
        xlaCpuEnableFastMinMax_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_enable_fast_min_max" field.</summary>
    public const int XlaGpuEnableFastMinMaxFieldNumber = 100;
    private bool xlaGpuEnableFastMinMax_;
    /// <summary>
    /// When true we lower the Minimum and Maximum hlos in the GPU backend such
    /// that Min(NotNaN, NaN) = Min(NaN, NotNaN) = NotNaN.  In other words, if flag
    /// this is true we don't propagate NaNs through Min and Max.
    ///
    /// Note, this does not correspond to the exact same behavior as the cpu flag
    /// above!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuEnableFastMinMax {
      get { return xlaGpuEnableFastMinMax_; }
      set {
        xlaGpuEnableFastMinMax_ = value;
      }
    }

    /// <summary>Field number for the "xla_allow_excess_precision" field.</summary>
    public const int XlaAllowExcessPrecisionFieldNumber = 122;
    private bool xlaAllowExcessPrecision_;
    /// <summary>
    /// Allows xla to increase the output precision of floating point operations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaAllowExcessPrecision {
      get { return xlaAllowExcessPrecision_; }
      set {
        xlaAllowExcessPrecision_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_crash_on_verification_failures" field.</summary>
    public const int XlaGpuCrashOnVerificationFailuresFieldNumber = 101;
    private bool xlaGpuCrashOnVerificationFailures_;
    /// <summary>
    /// Crashes the program when any kind of verification fails, instead of just
    /// logging the failures. One example is cross checking of convolution results
    /// among different algorithms.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuCrashOnVerificationFailures {
      get { return xlaGpuCrashOnVerificationFailures_; }
      set {
        xlaGpuCrashOnVerificationFailures_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_autotune_level" field.</summary>
    public const int XlaGpuAutotuneLevelFieldNumber = 123;
    private int xlaGpuAutotuneLevel_;
    /// <summary>
    /// 0:   Disable gemm and convolution autotuning.
    /// 1:   Enable autotuning, but disable correctness checking.
    /// 2:   Also set output buffers to random numbers during autotuning.
    /// 3:   Also reset output buffers to random numbers after autotuning each
    ///      algorithm.
    /// 4+:  Also check for correct outputs and for out-of-bounds reads/writes.
    ///
    /// Default: 4.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int XlaGpuAutotuneLevel {
      get { return xlaGpuAutotuneLevel_; }
      set {
        xlaGpuAutotuneLevel_ = value;
      }
    }

    /// <summary>Field number for the "xla_force_host_platform_device_count" field.</summary>
    public const int XlaForceHostPlatformDeviceCountFieldNumber = 102;
    private int xlaForceHostPlatformDeviceCount_;
    /// <summary>
    /// Force the host platform to pretend that there are these many host
    /// "devices".  All these devices are backed by the same threadpool.  Defaults
    /// to 1.
    ///
    /// Setting this to anything other than 1 can increase overhead from context
    /// switching but we let the user override this behavior to help run tests on
    /// the host that run models in parallel across multiple devices.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int XlaForceHostPlatformDeviceCount {
      get { return xlaForceHostPlatformDeviceCount_; }
      set {
        xlaForceHostPlatformDeviceCount_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_disable_gpuasm_optimizations" field.</summary>
    public const int XlaGpuDisableGpuasmOptimizationsFieldNumber = 103;
    private bool xlaGpuDisableGpuasmOptimizations_;
    /// <summary>
    /// If set to true XLA:GPU invokes `ptxas` with -O0 (default is -O3).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuDisableGpuasmOptimizations {
      get { return xlaGpuDisableGpuasmOptimizations_; }
      set {
        xlaGpuDisableGpuasmOptimizations_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_shape_checks" field.</summary>
    public const int XlaGpuShapeChecksFieldNumber = 170;
    private global::Xla.DebugOptions.Types.ShapeChecks xlaGpuShapeChecks_ = global::Xla.DebugOptions.Types.ShapeChecks.Ignore;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.DebugOptions.Types.ShapeChecks XlaGpuShapeChecks {
      get { return xlaGpuShapeChecks_; }
      set {
        xlaGpuShapeChecks_ = value;
      }
    }

    /// <summary>Field number for the "xla_cpu_enable_mlir_lowering" field.</summary>
    public const int XlaCpuEnableMlirLoweringFieldNumber = 171;
    private bool xlaCpuEnableMlirLowering_;
    /// <summary>
    /// Enable MLIR-based lowering in XLA:CPU instead of LLVM emitters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaCpuEnableMlirLowering {
      get { return xlaCpuEnableMlirLowering_; }
      set {
        xlaCpuEnableMlirLowering_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_enable_mlir_lowering" field.</summary>
    public const int XlaGpuEnableMlirLoweringFieldNumber = 173;
    private bool xlaGpuEnableMlirLowering_;
    /// <summary>
    /// If true, use MLIR instead of IR emitter to generate device code for
    /// supported lmhlo.fusion ops. See xla::gpu::RewriteFusionOps() for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuEnableMlirLowering {
      get { return xlaGpuEnableMlirLowering_; }
      set {
        xlaGpuEnableMlirLowering_ = value;
      }
    }

    /// <summary>Field number for the "xla_hlo_evaluator_use_fast_path" field.</summary>
    public const int XlaHloEvaluatorUseFastPathFieldNumber = 106;
    private bool xlaHloEvaluatorUseFastPath_;
    /// <summary>
    /// Enable fast math with eigen in the HLO evaluator.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaHloEvaluatorUseFastPath {
      get { return xlaHloEvaluatorUseFastPath_; }
      set {
        xlaHloEvaluatorUseFastPath_ = value;
      }
    }

    /// <summary>Field number for the "xla_allow_scalar_index_dynamic_ops" field.</summary>
    public const int XlaAllowScalarIndexDynamicOpsFieldNumber = 107;
    private bool xlaAllowScalarIndexDynamicOps_;
    /// <summary>
    /// Temporary option to allow support for both the R1 and the scalar index
    /// versions of DynamicSlice and DynamicUpdateSlice. Only used for testing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaAllowScalarIndexDynamicOps {
      get { return xlaAllowScalarIndexDynamicOps_; }
      set {
        xlaAllowScalarIndexDynamicOps_ = value;
      }
    }

    /// <summary>Field number for the "xla_step_marker_location" field.</summary>
    public const int XlaStepMarkerLocationFieldNumber = 108;
    private global::Xla.DebugOptions.Types.StepMarkerLocation xlaStepMarkerLocation_ = global::Xla.DebugOptions.Types.StepMarkerLocation.StepMarkAtEntry;
    /// <summary>
    /// Option to emit a target-specific marker to indicate the start of a training
    /// step. The location of the marker (if any) is determined by the option
    /// value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.DebugOptions.Types.StepMarkerLocation XlaStepMarkerLocation {
      get { return xlaStepMarkerLocation_; }
      set {
        xlaStepMarkerLocation_ = value;
      }
    }

    /// <summary>Field number for the "xla_dump_to" field.</summary>
    public const int XlaDumpToFieldNumber = 109;
    private string xlaDumpTo_ = "";
    /// <summary>
    /// Directory to dump into.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string XlaDumpTo {
      get { return xlaDumpTo_; }
      set {
        xlaDumpTo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "xla_dump_hlo_module_re" field.</summary>
    public const int XlaDumpHloModuleReFieldNumber = 110;
    private string xlaDumpHloModuleRe_ = "";
    /// <summary>
    /// If specified, will only dump modules which match this regexp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string XlaDumpHloModuleRe {
      get { return xlaDumpHloModuleRe_; }
      set {
        xlaDumpHloModuleRe_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "xla_dump_hlo_pass_re" field.</summary>
    public const int XlaDumpHloPassReFieldNumber = 111;
    private string xlaDumpHloPassRe_ = "";
    /// <summary>
    /// If this flag is specified, will also dump HLO before and after passes that
    /// match this regular expression.  Set to .* to dump before/after all passes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string XlaDumpHloPassRe {
      get { return xlaDumpHloPassRe_; }
      set {
        xlaDumpHloPassRe_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "xla_dump_hlo_as_text" field.</summary>
    public const int XlaDumpHloAsTextFieldNumber = 112;
    private bool xlaDumpHloAsText_;
    /// <summary>
    /// Specifies the format that HLO is dumped in.  Multiple of these may be
    /// specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaDumpHloAsText {
      get { return xlaDumpHloAsText_; }
      set {
        xlaDumpHloAsText_ = value;
      }
    }

    /// <summary>Field number for the "xla_dump_hlo_as_proto" field.</summary>
    public const int XlaDumpHloAsProtoFieldNumber = 113;
    private bool xlaDumpHloAsProto_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaDumpHloAsProto {
      get { return xlaDumpHloAsProto_; }
      set {
        xlaDumpHloAsProto_ = value;
      }
    }

    /// <summary>Field number for the "xla_dump_hlo_as_dot" field.</summary>
    public const int XlaDumpHloAsDotFieldNumber = 114;
    private bool xlaDumpHloAsDot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaDumpHloAsDot {
      get { return xlaDumpHloAsDot_; }
      set {
        xlaDumpHloAsDot_ = value;
      }
    }

    /// <summary>Field number for the "xla_dump_hlo_as_url" field.</summary>
    public const int XlaDumpHloAsUrlFieldNumber = 115;
    private bool xlaDumpHloAsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaDumpHloAsUrl {
      get { return xlaDumpHloAsUrl_; }
      set {
        xlaDumpHloAsUrl_ = value;
      }
    }

    /// <summary>Field number for the "xla_dump_hlo_as_html" field.</summary>
    public const int XlaDumpHloAsHtmlFieldNumber = 116;
    private bool xlaDumpHloAsHtml_;
    /// <summary>
    /// Dump HLO graphs as an HTML (DOT -> SVG inlined in HTML)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaDumpHloAsHtml {
      get { return xlaDumpHloAsHtml_; }
      set {
        xlaDumpHloAsHtml_ = value;
      }
    }

    /// <summary>Field number for the "xla_dump_fusion_visualization" field.</summary>
    public const int XlaDumpFusionVisualizationFieldNumber = 149;
    private bool xlaDumpFusionVisualization_;
    /// <summary>
    /// Dump the visualization of the fusion progress.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaDumpFusionVisualization {
      get { return xlaDumpFusionVisualization_; }
      set {
        xlaDumpFusionVisualization_ = value;
      }
    }

    /// <summary>Field number for the "xla_dump_hlo_snapshots" field.</summary>
    public const int XlaDumpHloSnapshotsFieldNumber = 118;
    private bool xlaDumpHloSnapshots_;
    /// <summary>
    /// If true, every time an HLO module is run, we will dump an HloSnapshot
    /// (essentially, a serialized module plus its inputs) to the --xla_dump_to
    /// directory.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaDumpHloSnapshots {
      get { return xlaDumpHloSnapshots_; }
      set {
        xlaDumpHloSnapshots_ = value;
      }
    }

    /// <summary>Field number for the "xla_dump_include_timestamp" field.</summary>
    public const int XlaDumpIncludeTimestampFieldNumber = 131;
    private bool xlaDumpIncludeTimestamp_;
    /// <summary>
    /// Include a timestamp in the dumped filenames.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaDumpIncludeTimestamp {
      get { return xlaDumpIncludeTimestamp_; }
      set {
        xlaDumpIncludeTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "xla_dump_max_hlo_modules" field.</summary>
    public const int XlaDumpMaxHloModulesFieldNumber = 132;
    private int xlaDumpMaxHloModules_;
    /// <summary>
    /// Max number of hlo module dumps in a directory. Set to &lt; 0 for unbounded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int XlaDumpMaxHloModules {
      get { return xlaDumpMaxHloModules_; }
      set {
        xlaDumpMaxHloModules_ = value;
      }
    }

    /// <summary>Field number for the "xla_dump_module_metadata" field.</summary>
    public const int XlaDumpModuleMetadataFieldNumber = 144;
    private bool xlaDumpModuleMetadata_;
    /// <summary>
    /// Dump HloModuleMetadata as a text proto for each HLO module.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaDumpModuleMetadata {
      get { return xlaDumpModuleMetadata_; }
      set {
        xlaDumpModuleMetadata_ = value;
      }
    }

    /// <summary>Field number for the "xla_dump_compress_protos" field.</summary>
    public const int XlaDumpCompressProtosFieldNumber = 151;
    private bool xlaDumpCompressProtos_;
    /// <summary>
    /// GZip-compress protos dumped via --xla_dump_hlo_as_proto.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaDumpCompressProtos {
      get { return xlaDumpCompressProtos_; }
      set {
        xlaDumpCompressProtos_ = value;
      }
    }

    /// <summary>Field number for the "xla_dump_hlo_as_long_text" field.</summary>
    public const int XlaDumpHloAsLongTextFieldNumber = 164;
    private bool xlaDumpHloAsLongText_;
    /// <summary>
    /// Dump HLO in long text format. Ignored unless xla_dump_hlo_as_text is true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaDumpHloAsLongText {
      get { return xlaDumpHloAsLongText_; }
      set {
        xlaDumpHloAsLongText_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_force_conv_nchw" field.</summary>
    public const int XlaGpuForceConvNchwFieldNumber = 125;
    private bool xlaGpuForceConvNchw_;
    /// <summary>
    /// Overrides for XLA GPU's convolution layout heuristic.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuForceConvNchw {
      get { return xlaGpuForceConvNchw_; }
      set {
        xlaGpuForceConvNchw_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_force_conv_nhwc" field.</summary>
    public const int XlaGpuForceConvNhwcFieldNumber = 146;
    private bool xlaGpuForceConvNhwc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuForceConvNhwc {
      get { return xlaGpuForceConvNhwc_; }
      set {
        xlaGpuForceConvNhwc_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_ptx_file" field.</summary>
    public const int XlaGpuPtxFileFieldNumber = 127;
    private static readonly pb::FieldCodec<string> _repeated_xlaGpuPtxFile_codec
        = pb::FieldCodec.ForString(1018);
    private readonly pbc::RepeatedField<string> xlaGpuPtxFile_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Paths to files with ptx code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> XlaGpuPtxFile {
      get { return xlaGpuPtxFile_; }
    }

    /// <summary>Field number for the "xla_gpu_dump_llvmir" field.</summary>
    public const int XlaGpuDumpLlvmirFieldNumber = 155;
    private bool xlaGpuDumpLlvmir_;
    /// <summary>
    /// Whether to dump llvm ir when compiling to ptx.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuDumpLlvmir {
      get { return xlaGpuDumpLlvmir_; }
      set {
        xlaGpuDumpLlvmir_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_algorithm_denylist_path" field.</summary>
    public const int XlaGpuAlgorithmDenylistPathFieldNumber = 128;
    private string xlaGpuAlgorithmDenylistPath_ = "";
    /// <summary>
    /// Denylist for cuDNN convolutions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string XlaGpuAlgorithmDenylistPath {
      get { return xlaGpuAlgorithmDenylistPath_; }
      set {
        xlaGpuAlgorithmDenylistPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "xla_tpu_detect_nan" field.</summary>
    public const int XlaTpuDetectNanFieldNumber = 135;
    private bool xlaTpuDetectNan_;
    /// <summary>
    /// Debug options that trigger execution errors when NaN or Inf are detected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaTpuDetectNan {
      get { return xlaTpuDetectNan_; }
      set {
        xlaTpuDetectNan_ = value;
      }
    }

    /// <summary>Field number for the "xla_tpu_detect_inf" field.</summary>
    public const int XlaTpuDetectInfFieldNumber = 136;
    private bool xlaTpuDetectInf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaTpuDetectInf {
      get { return xlaTpuDetectInf_; }
      set {
        xlaTpuDetectInf_ = value;
      }
    }

    /// <summary>Field number for the "xla_cpu_enable_xprof_traceme" field.</summary>
    public const int XlaCpuEnableXprofTracemeFieldNumber = 137;
    private bool xlaCpuEnableXprofTraceme_;
    /// <summary>
    /// True if TraceMe annotations are enabled for XLA:CPU.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaCpuEnableXprofTraceme {
      get { return xlaCpuEnableXprofTraceme_; }
      set {
        xlaCpuEnableXprofTraceme_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_unsafe_fallback_to_driver_on_ptxas_not_found" field.</summary>
    public const int XlaGpuUnsafeFallbackToDriverOnPtxasNotFoundFieldNumber = 138;
    private bool xlaGpuUnsafeFallbackToDriverOnPtxasNotFound_;
    /// <summary>
    /// It is usually preferable to not fallback to the driver; it can consume more
    /// memory, or have bugs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuUnsafeFallbackToDriverOnPtxasNotFound {
      get { return xlaGpuUnsafeFallbackToDriverOnPtxasNotFound_; }
      set {
        xlaGpuUnsafeFallbackToDriverOnPtxasNotFound_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_asm_extra_flags" field.</summary>
    public const int XlaGpuAsmExtraFlagsFieldNumber = 141;
    private string xlaGpuAsmExtraFlags_ = "";
    /// <summary>
    /// Extra parameters to pass the GPU assembler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string XlaGpuAsmExtraFlags {
      get { return xlaGpuAsmExtraFlags_; }
      set {
        xlaGpuAsmExtraFlags_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "xla_multiheap_size_constraint_per_heap" field.</summary>
    public const int XlaMultiheapSizeConstraintPerHeapFieldNumber = 142;
    private int xlaMultiheapSizeConstraintPerHeap_;
    /// <summary>
    /// Per-heap size constraint. New heaps will be created if per-heap max size is
    /// reached.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int XlaMultiheapSizeConstraintPerHeap {
      get { return xlaMultiheapSizeConstraintPerHeap_; }
      set {
        xlaMultiheapSizeConstraintPerHeap_ = value;
      }
    }

    /// <summary>Field number for the "xla_detailed_logging_and_dumping" field.</summary>
    public const int XlaDetailedLoggingAndDumpingFieldNumber = 143;
    private bool xlaDetailedLoggingAndDumping_;
    /// <summary>
    /// Enable detailed logging into vlog and xla dumping. If this is disabled, no
    /// compilation summary will be printed in the end of computation and no hlo
    /// modules will be dumped.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaDetailedLoggingAndDumping {
      get { return xlaDetailedLoggingAndDumping_; }
      set {
        xlaDetailedLoggingAndDumping_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_force_compilation_parallelism" field.</summary>
    public const int XlaGpuForceCompilationParallelismFieldNumber = 147;
    private int xlaGpuForceCompilationParallelism_;
    /// <summary>
    /// Overrides normal multi-threaded compilation settting to use this many
    /// threads. Setting to 0 (the default value) means no enforcement.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int XlaGpuForceCompilationParallelism {
      get { return xlaGpuForceCompilationParallelism_; }
      set {
        xlaGpuForceCompilationParallelism_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_deterministic_ops" field.</summary>
    public const int XlaGpuDeterministicOpsFieldNumber = 148;
    private bool xlaGpuDeterministicOps_;
    /// <summary>
    /// Guarantees run-to-run determinism. At present, the HLO ops Scatter and
    /// SelectAndScatter do not have deterministic XLA:GPU implementations.
    /// Compilation errors out if these ops are encountered.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuDeterministicOps {
      get { return xlaGpuDeterministicOps_; }
      set {
        xlaGpuDeterministicOps_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_llvm_ir_file" field.</summary>
    public const int XlaGpuLlvmIrFileFieldNumber = 150;
    private static readonly pb::FieldCodec<string> _repeated_xlaGpuLlvmIrFile_codec
        = pb::FieldCodec.ForString(1202);
    private readonly pbc::RepeatedField<string> xlaGpuLlvmIrFile_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Paths to files with LLVM code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> XlaGpuLlvmIrFile {
      get { return xlaGpuLlvmIrFile_; }
    }

    /// <summary>Field number for the "xla_gpu_enable_async_all_reduce" field.</summary>
    public const int XlaGpuEnableAsyncAllReduceFieldNumber = 152;
    private bool xlaGpuEnableAsyncAllReduce_;
    /// <summary>
    /// Convert synchronous all-reduces ops into asynchronous.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuEnableAsyncAllReduce {
      get { return xlaGpuEnableAsyncAllReduce_; }
      set {
        xlaGpuEnableAsyncAllReduce_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_all_reduce_combine_threshold_bytes" field.</summary>
    public const int XlaGpuAllReduceCombineThresholdBytesFieldNumber = 157;
    private long xlaGpuAllReduceCombineThresholdBytes_;
    /// <summary>
    /// Size threshold (in bytes) for the GPU all-reduce combiner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long XlaGpuAllReduceCombineThresholdBytes {
      get { return xlaGpuAllReduceCombineThresholdBytes_; }
      set {
        xlaGpuAllReduceCombineThresholdBytes_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_all_reduce_contiguous" field.</summary>
    public const int XlaGpuAllReduceContiguousFieldNumber = 158;
    private bool xlaGpuAllReduceContiguous_;
    /// <summary>
    /// Combine GPU all-reduces into a single operation over a contiguous buffer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuAllReduceContiguous {
      get { return xlaGpuAllReduceContiguous_; }
      set {
        xlaGpuAllReduceContiguous_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_all_reduce_blueconnect_num_devices_per_host" field.</summary>
    public const int XlaGpuAllReduceBlueconnectNumDevicesPerHostFieldNumber = 159;
    private int xlaGpuAllReduceBlueconnectNumDevicesPerHost_;
    /// <summary>
    /// Number of devices per host for first stage of BlueConnect decomposition
    /// pass. The pass will attempt to decompose all-reduces ops into a
    /// ReduceScatter-AllReduce-AllGather sequence, with the initial ReduceScatter
    /// being performed over all of the devices in the same host. Set to &lt; 1 to
    /// disable all-reduce decomposition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int XlaGpuAllReduceBlueconnectNumDevicesPerHost {
      get { return xlaGpuAllReduceBlueconnectNumDevicesPerHost_; }
      set {
        xlaGpuAllReduceBlueconnectNumDevicesPerHost_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_enable_cudnn_frontend" field.</summary>
    public const int XlaGpuEnableCudnnFrontendFieldNumber = 160;
    private bool xlaGpuEnableCudnnFrontend_;
    /// <summary>
    /// Whether to use the cuDNN frontend API for convolutions when possible.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuEnableCudnnFrontend {
      get { return xlaGpuEnableCudnnFrontend_; }
      set {
        xlaGpuEnableCudnnFrontend_ = value;
      }
    }

    /// <summary>Field number for the "xla_dump_disable_metadata" field.</summary>
    public const int XlaDumpDisableMetadataFieldNumber = 153;
    private bool xlaDumpDisableMetadata_;
    /// <summary>
    /// Disable dumping metadata in HLO dumps.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaDumpDisableMetadata {
      get { return xlaDumpDisableMetadata_; }
      set {
        xlaDumpDisableMetadata_ = value;
      }
    }

    /// <summary>Field number for the "xla_dump_hlo_pipeline_re" field.</summary>
    public const int XlaDumpHloPipelineReFieldNumber = 154;
    private string xlaDumpHloPipelineRe_ = "";
    /// <summary>
    /// If this flag is specified, will only dump HLO before and after passes in
    /// the pass pipeline that matches this regular expression. Default empty value
    /// enables dumping in all pipelines.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string XlaDumpHloPipelineRe {
      get { return xlaDumpHloPipelineRe_; }
      set {
        xlaDumpHloPipelineRe_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "xla_gpu_strict_conv_algorithm_picker" field.</summary>
    public const int XlaGpuStrictConvAlgorithmPickerFieldNumber = 156;
    private bool xlaGpuStrictConvAlgorithmPicker_;
    /// <summary>
    /// If true, abort immediately when conv algorithm picker fails, rather than
    /// logging a warning and proceeding with fallback.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuStrictConvAlgorithmPicker {
      get { return xlaGpuStrictConvAlgorithmPicker_; }
      set {
        xlaGpuStrictConvAlgorithmPicker_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_enable_xla_runtime_executable" field.</summary>
    public const int XlaGpuEnableXlaRuntimeExecutableFieldNumber = 169;
    private bool xlaGpuEnableXlaRuntimeExecutable_;
    /// <summary>
    /// If true, use XLA runtime for XLA:GPU backend.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuEnableXlaRuntimeExecutable {
      get { return xlaGpuEnableXlaRuntimeExecutable_; }
      set {
        xlaGpuEnableXlaRuntimeExecutable_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_nccl_termination_timeout_seconds" field.</summary>
    public const int XlaGpuNcclTerminationTimeoutSecondsFieldNumber = 163;
    private long xlaGpuNcclTerminationTimeoutSeconds_;
    /// <summary>
    /// Timeout in seconds before terminating jobs that are stuck in a NCCL
    /// Rendezvous. Negative value disables the timeout and will not terminate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long XlaGpuNcclTerminationTimeoutSeconds {
      get { return xlaGpuNcclTerminationTimeoutSeconds_; }
      set {
        xlaGpuNcclTerminationTimeoutSeconds_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_enable_shared_constants" field.</summary>
    public const int XlaGpuEnableSharedConstantsFieldNumber = 165;
    private bool xlaGpuEnableSharedConstants_;
    /// <summary>
    /// Enables shared constants for XLA/GPU. This allows large constants to be
    /// shared among multiple GPU executables.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuEnableSharedConstants {
      get { return xlaGpuEnableSharedConstants_; }
      set {
        xlaGpuEnableSharedConstants_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_enable_cublaslt" field.</summary>
    public const int XlaGpuEnableCublasltFieldNumber = 166;
    private bool xlaGpuEnableCublaslt_;
    /// <summary>
    /// Whether to use cuBLASLt for GEMMs on GPUs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuEnableCublaslt {
      get { return xlaGpuEnableCublaslt_; }
      set {
        xlaGpuEnableCublaslt_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_redzone_scratch_max_megabytes" field.</summary>
    public const int XlaGpuRedzoneScratchMaxMegabytesFieldNumber = 167;
    private long xlaGpuRedzoneScratchMaxMegabytes_;
    /// <summary>
    /// Size threshold (in megabytes) for the GPU redzone scratch allocator.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long XlaGpuRedzoneScratchMaxMegabytes {
      get { return xlaGpuRedzoneScratchMaxMegabytes_; }
      set {
        xlaGpuRedzoneScratchMaxMegabytes_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_simplify_all_fp_conversions" field.</summary>
    public const int XlaGpuSimplifyAllFpConversionsFieldNumber = 168;
    private bool xlaGpuSimplifyAllFpConversions_;
    /// <summary>
    /// Allows all floating-point conversions to be simplified, including those
    /// that affect the numerics. The `BFloat16Normalization` pass inserts many
    /// `f32 -> bf16 -> f32` conversion pairs. These are not removed by the
    /// `AlgebraicSimplifier`, as that will only simplify conversions that are
    /// no-ops, e.g. `bf16 -> f32 -> bf16`. Removing these improves accuracy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuSimplifyAllFpConversions {
      get { return xlaGpuSimplifyAllFpConversions_; }
      set {
        xlaGpuSimplifyAllFpConversions_ = value;
      }
    }

    /// <summary>Field number for the "xla_gpu_normalize_layouts" field.</summary>
    public const int XlaGpuNormalizeLayoutsFieldNumber = 172;
    private bool xlaGpuNormalizeLayouts_;
    /// <summary>
    /// An experimental option to force all layouts present in the
    /// after-optimizations HLO to be descending, e.g.
    /// ShapeUtil::MakeShapeWithDescendingLayout is an identity on all
    /// instructions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaGpuNormalizeLayouts {
      get { return xlaGpuNormalizeLayouts_; }
      set {
        xlaGpuNormalizeLayouts_ = value;
      }
    }

    /// <summary>Field number for the "xla_cpu_use_acl" field.</summary>
    public const int XlaCpuUseAclFieldNumber = 174;
    private bool xlaCpuUseAcl_;
    /// <summary>
    /// Generate calls to Arm Compute Library in the CPU backend.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaCpuUseAcl {
      get { return xlaCpuUseAcl_; }
      set {
        xlaCpuUseAcl_ = value;
      }
    }

    /// <summary>Field number for the "xla_cpu_strict_dot_conv_math" field.</summary>
    public const int XlaCpuStrictDotConvMathFieldNumber = 175;
    private bool xlaCpuStrictDotConvMath_;
    /// <summary>
    /// By default, XLA:CPU will run fp16 dot/conv as fp32, as this is generally
    /// (much) faster on our hardware.  Set this flag to disable this behavior.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool XlaCpuStrictDotConvMath {
      get { return xlaCpuStrictDotConvMath_; }
      set {
        xlaCpuStrictDotConvMath_ = value;
      }
    }

    /// <summary>Field number for the "xla_backend_extra_options" field.</summary>
    public const int XlaBackendExtraOptionsFieldNumber = 500;
    private static readonly pbc::MapField<string, string>.Codec _map_xlaBackendExtraOptions_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 4002);
    private readonly pbc::MapField<string, string> xlaBackendExtraOptions_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Extra options to pass to the compilation backend (e.g. LLVM); specific
    /// interpretation of these values is left to the backend.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> XlaBackendExtraOptions {
      get { return xlaBackendExtraOptions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DebugOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DebugOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (XlaHloGraphAddresses != other.XlaHloGraphAddresses) return false;
      if (XlaHloProfile != other.XlaHloProfile) return false;
      if(!xlaDisableHloPasses_.Equals(other.xlaDisableHloPasses_)) return false;
      if(!xlaEnableHloPassesOnly_.Equals(other.xlaEnableHloPassesOnly_)) return false;
      if (XlaDisableAllHloPasses != other.XlaDisableAllHloPasses) return false;
      if (XlaBackendOptimizationLevel != other.XlaBackendOptimizationLevel) return false;
      if (XlaEmbedIrInExecutable != other.XlaEmbedIrInExecutable) return false;
      if (XlaEliminateHloImplicitBroadcast != other.XlaEliminateHloImplicitBroadcast) return false;
      if (XlaCpuMultiThreadEigen != other.XlaCpuMultiThreadEigen) return false;
      if (XlaGpuCudaDataDir != other.XlaGpuCudaDataDir) return false;
      if (XlaGpuFtz != other.XlaGpuFtz) return false;
      if (XlaLlvmEnableAliasScopeMetadata != other.XlaLlvmEnableAliasScopeMetadata) return false;
      if (XlaLlvmEnableNoaliasMetadata != other.XlaLlvmEnableNoaliasMetadata) return false;
      if (XlaLlvmEnableInvariantLoadMetadata != other.XlaLlvmEnableInvariantLoadMetadata) return false;
      if (XlaLlvmDisableExpensivePasses != other.XlaLlvmDisableExpensivePasses) return false;
      if (XlaTestAllOutputLayouts != other.XlaTestAllOutputLayouts) return false;
      if (XlaTestAllInputLayouts != other.XlaTestAllInputLayouts) return false;
      if (XlaHloGraphShardingColor != other.XlaHloGraphShardingColor) return false;
      if (XlaCpuUseMklDnn != other.XlaCpuUseMklDnn) return false;
      if (XlaCpuUseXlaRuntime != other.XlaCpuUseXlaRuntime) return false;
      if (XlaGpuMaxKernelUnrollFactor != other.XlaGpuMaxKernelUnrollFactor) return false;
      if (XlaCpuEnableFastMath != other.XlaCpuEnableFastMath) return false;
      if (XlaCpuFastMathHonorNans != other.XlaCpuFastMathHonorNans) return false;
      if (XlaCpuFastMathHonorInfs != other.XlaCpuFastMathHonorInfs) return false;
      if (XlaCpuFastMathHonorDivision != other.XlaCpuFastMathHonorDivision) return false;
      if (XlaCpuFastMathHonorFunctions != other.XlaCpuFastMathHonorFunctions) return false;
      if (XlaCpuEnableFastMinMax != other.XlaCpuEnableFastMinMax) return false;
      if (XlaGpuEnableFastMinMax != other.XlaGpuEnableFastMinMax) return false;
      if (XlaAllowExcessPrecision != other.XlaAllowExcessPrecision) return false;
      if (XlaGpuCrashOnVerificationFailures != other.XlaGpuCrashOnVerificationFailures) return false;
      if (XlaGpuAutotuneLevel != other.XlaGpuAutotuneLevel) return false;
      if (XlaForceHostPlatformDeviceCount != other.XlaForceHostPlatformDeviceCount) return false;
      if (XlaGpuDisableGpuasmOptimizations != other.XlaGpuDisableGpuasmOptimizations) return false;
      if (XlaGpuShapeChecks != other.XlaGpuShapeChecks) return false;
      if (XlaCpuEnableMlirLowering != other.XlaCpuEnableMlirLowering) return false;
      if (XlaGpuEnableMlirLowering != other.XlaGpuEnableMlirLowering) return false;
      if (XlaHloEvaluatorUseFastPath != other.XlaHloEvaluatorUseFastPath) return false;
      if (XlaAllowScalarIndexDynamicOps != other.XlaAllowScalarIndexDynamicOps) return false;
      if (XlaStepMarkerLocation != other.XlaStepMarkerLocation) return false;
      if (XlaDumpTo != other.XlaDumpTo) return false;
      if (XlaDumpHloModuleRe != other.XlaDumpHloModuleRe) return false;
      if (XlaDumpHloPassRe != other.XlaDumpHloPassRe) return false;
      if (XlaDumpHloAsText != other.XlaDumpHloAsText) return false;
      if (XlaDumpHloAsProto != other.XlaDumpHloAsProto) return false;
      if (XlaDumpHloAsDot != other.XlaDumpHloAsDot) return false;
      if (XlaDumpHloAsUrl != other.XlaDumpHloAsUrl) return false;
      if (XlaDumpHloAsHtml != other.XlaDumpHloAsHtml) return false;
      if (XlaDumpFusionVisualization != other.XlaDumpFusionVisualization) return false;
      if (XlaDumpHloSnapshots != other.XlaDumpHloSnapshots) return false;
      if (XlaDumpIncludeTimestamp != other.XlaDumpIncludeTimestamp) return false;
      if (XlaDumpMaxHloModules != other.XlaDumpMaxHloModules) return false;
      if (XlaDumpModuleMetadata != other.XlaDumpModuleMetadata) return false;
      if (XlaDumpCompressProtos != other.XlaDumpCompressProtos) return false;
      if (XlaDumpHloAsLongText != other.XlaDumpHloAsLongText) return false;
      if (XlaGpuForceConvNchw != other.XlaGpuForceConvNchw) return false;
      if (XlaGpuForceConvNhwc != other.XlaGpuForceConvNhwc) return false;
      if(!xlaGpuPtxFile_.Equals(other.xlaGpuPtxFile_)) return false;
      if (XlaGpuDumpLlvmir != other.XlaGpuDumpLlvmir) return false;
      if (XlaGpuAlgorithmDenylistPath != other.XlaGpuAlgorithmDenylistPath) return false;
      if (XlaTpuDetectNan != other.XlaTpuDetectNan) return false;
      if (XlaTpuDetectInf != other.XlaTpuDetectInf) return false;
      if (XlaCpuEnableXprofTraceme != other.XlaCpuEnableXprofTraceme) return false;
      if (XlaGpuUnsafeFallbackToDriverOnPtxasNotFound != other.XlaGpuUnsafeFallbackToDriverOnPtxasNotFound) return false;
      if (XlaGpuAsmExtraFlags != other.XlaGpuAsmExtraFlags) return false;
      if (XlaMultiheapSizeConstraintPerHeap != other.XlaMultiheapSizeConstraintPerHeap) return false;
      if (XlaDetailedLoggingAndDumping != other.XlaDetailedLoggingAndDumping) return false;
      if (XlaGpuForceCompilationParallelism != other.XlaGpuForceCompilationParallelism) return false;
      if (XlaGpuDeterministicOps != other.XlaGpuDeterministicOps) return false;
      if(!xlaGpuLlvmIrFile_.Equals(other.xlaGpuLlvmIrFile_)) return false;
      if (XlaGpuEnableAsyncAllReduce != other.XlaGpuEnableAsyncAllReduce) return false;
      if (XlaGpuAllReduceCombineThresholdBytes != other.XlaGpuAllReduceCombineThresholdBytes) return false;
      if (XlaGpuAllReduceContiguous != other.XlaGpuAllReduceContiguous) return false;
      if (XlaGpuAllReduceBlueconnectNumDevicesPerHost != other.XlaGpuAllReduceBlueconnectNumDevicesPerHost) return false;
      if (XlaGpuEnableCudnnFrontend != other.XlaGpuEnableCudnnFrontend) return false;
      if (XlaDumpDisableMetadata != other.XlaDumpDisableMetadata) return false;
      if (XlaDumpHloPipelineRe != other.XlaDumpHloPipelineRe) return false;
      if (XlaGpuStrictConvAlgorithmPicker != other.XlaGpuStrictConvAlgorithmPicker) return false;
      if (XlaGpuEnableXlaRuntimeExecutable != other.XlaGpuEnableXlaRuntimeExecutable) return false;
      if (XlaGpuNcclTerminationTimeoutSeconds != other.XlaGpuNcclTerminationTimeoutSeconds) return false;
      if (XlaGpuEnableSharedConstants != other.XlaGpuEnableSharedConstants) return false;
      if (XlaGpuEnableCublaslt != other.XlaGpuEnableCublaslt) return false;
      if (XlaGpuRedzoneScratchMaxMegabytes != other.XlaGpuRedzoneScratchMaxMegabytes) return false;
      if (XlaGpuSimplifyAllFpConversions != other.XlaGpuSimplifyAllFpConversions) return false;
      if (XlaGpuNormalizeLayouts != other.XlaGpuNormalizeLayouts) return false;
      if (XlaCpuUseAcl != other.XlaCpuUseAcl) return false;
      if (XlaCpuStrictDotConvMath != other.XlaCpuStrictDotConvMath) return false;
      if (!XlaBackendExtraOptions.Equals(other.XlaBackendExtraOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (XlaHloGraphAddresses != false) hash ^= XlaHloGraphAddresses.GetHashCode();
      if (XlaHloProfile != false) hash ^= XlaHloProfile.GetHashCode();
      hash ^= xlaDisableHloPasses_.GetHashCode();
      hash ^= xlaEnableHloPassesOnly_.GetHashCode();
      if (XlaDisableAllHloPasses != false) hash ^= XlaDisableAllHloPasses.GetHashCode();
      if (XlaBackendOptimizationLevel != 0) hash ^= XlaBackendOptimizationLevel.GetHashCode();
      if (XlaEmbedIrInExecutable != false) hash ^= XlaEmbedIrInExecutable.GetHashCode();
      if (XlaEliminateHloImplicitBroadcast != false) hash ^= XlaEliminateHloImplicitBroadcast.GetHashCode();
      if (XlaCpuMultiThreadEigen != false) hash ^= XlaCpuMultiThreadEigen.GetHashCode();
      if (XlaGpuCudaDataDir.Length != 0) hash ^= XlaGpuCudaDataDir.GetHashCode();
      if (XlaGpuFtz != false) hash ^= XlaGpuFtz.GetHashCode();
      if (XlaLlvmEnableAliasScopeMetadata != false) hash ^= XlaLlvmEnableAliasScopeMetadata.GetHashCode();
      if (XlaLlvmEnableNoaliasMetadata != false) hash ^= XlaLlvmEnableNoaliasMetadata.GetHashCode();
      if (XlaLlvmEnableInvariantLoadMetadata != false) hash ^= XlaLlvmEnableInvariantLoadMetadata.GetHashCode();
      if (XlaLlvmDisableExpensivePasses != false) hash ^= XlaLlvmDisableExpensivePasses.GetHashCode();
      if (XlaTestAllOutputLayouts != false) hash ^= XlaTestAllOutputLayouts.GetHashCode();
      if (XlaTestAllInputLayouts != false) hash ^= XlaTestAllInputLayouts.GetHashCode();
      if (XlaHloGraphShardingColor != false) hash ^= XlaHloGraphShardingColor.GetHashCode();
      if (XlaCpuUseMklDnn != false) hash ^= XlaCpuUseMklDnn.GetHashCode();
      if (XlaCpuUseXlaRuntime != false) hash ^= XlaCpuUseXlaRuntime.GetHashCode();
      if (XlaGpuMaxKernelUnrollFactor != 0) hash ^= XlaGpuMaxKernelUnrollFactor.GetHashCode();
      if (XlaCpuEnableFastMath != false) hash ^= XlaCpuEnableFastMath.GetHashCode();
      if (XlaCpuFastMathHonorNans != false) hash ^= XlaCpuFastMathHonorNans.GetHashCode();
      if (XlaCpuFastMathHonorInfs != false) hash ^= XlaCpuFastMathHonorInfs.GetHashCode();
      if (XlaCpuFastMathHonorDivision != false) hash ^= XlaCpuFastMathHonorDivision.GetHashCode();
      if (XlaCpuFastMathHonorFunctions != false) hash ^= XlaCpuFastMathHonorFunctions.GetHashCode();
      if (XlaCpuEnableFastMinMax != false) hash ^= XlaCpuEnableFastMinMax.GetHashCode();
      if (XlaGpuEnableFastMinMax != false) hash ^= XlaGpuEnableFastMinMax.GetHashCode();
      if (XlaAllowExcessPrecision != false) hash ^= XlaAllowExcessPrecision.GetHashCode();
      if (XlaGpuCrashOnVerificationFailures != false) hash ^= XlaGpuCrashOnVerificationFailures.GetHashCode();
      if (XlaGpuAutotuneLevel != 0) hash ^= XlaGpuAutotuneLevel.GetHashCode();
      if (XlaForceHostPlatformDeviceCount != 0) hash ^= XlaForceHostPlatformDeviceCount.GetHashCode();
      if (XlaGpuDisableGpuasmOptimizations != false) hash ^= XlaGpuDisableGpuasmOptimizations.GetHashCode();
      if (XlaGpuShapeChecks != global::Xla.DebugOptions.Types.ShapeChecks.Ignore) hash ^= XlaGpuShapeChecks.GetHashCode();
      if (XlaCpuEnableMlirLowering != false) hash ^= XlaCpuEnableMlirLowering.GetHashCode();
      if (XlaGpuEnableMlirLowering != false) hash ^= XlaGpuEnableMlirLowering.GetHashCode();
      if (XlaHloEvaluatorUseFastPath != false) hash ^= XlaHloEvaluatorUseFastPath.GetHashCode();
      if (XlaAllowScalarIndexDynamicOps != false) hash ^= XlaAllowScalarIndexDynamicOps.GetHashCode();
      if (XlaStepMarkerLocation != global::Xla.DebugOptions.Types.StepMarkerLocation.StepMarkAtEntry) hash ^= XlaStepMarkerLocation.GetHashCode();
      if (XlaDumpTo.Length != 0) hash ^= XlaDumpTo.GetHashCode();
      if (XlaDumpHloModuleRe.Length != 0) hash ^= XlaDumpHloModuleRe.GetHashCode();
      if (XlaDumpHloPassRe.Length != 0) hash ^= XlaDumpHloPassRe.GetHashCode();
      if (XlaDumpHloAsText != false) hash ^= XlaDumpHloAsText.GetHashCode();
      if (XlaDumpHloAsProto != false) hash ^= XlaDumpHloAsProto.GetHashCode();
      if (XlaDumpHloAsDot != false) hash ^= XlaDumpHloAsDot.GetHashCode();
      if (XlaDumpHloAsUrl != false) hash ^= XlaDumpHloAsUrl.GetHashCode();
      if (XlaDumpHloAsHtml != false) hash ^= XlaDumpHloAsHtml.GetHashCode();
      if (XlaDumpFusionVisualization != false) hash ^= XlaDumpFusionVisualization.GetHashCode();
      if (XlaDumpHloSnapshots != false) hash ^= XlaDumpHloSnapshots.GetHashCode();
      if (XlaDumpIncludeTimestamp != false) hash ^= XlaDumpIncludeTimestamp.GetHashCode();
      if (XlaDumpMaxHloModules != 0) hash ^= XlaDumpMaxHloModules.GetHashCode();
      if (XlaDumpModuleMetadata != false) hash ^= XlaDumpModuleMetadata.GetHashCode();
      if (XlaDumpCompressProtos != false) hash ^= XlaDumpCompressProtos.GetHashCode();
      if (XlaDumpHloAsLongText != false) hash ^= XlaDumpHloAsLongText.GetHashCode();
      if (XlaGpuForceConvNchw != false) hash ^= XlaGpuForceConvNchw.GetHashCode();
      if (XlaGpuForceConvNhwc != false) hash ^= XlaGpuForceConvNhwc.GetHashCode();
      hash ^= xlaGpuPtxFile_.GetHashCode();
      if (XlaGpuDumpLlvmir != false) hash ^= XlaGpuDumpLlvmir.GetHashCode();
      if (XlaGpuAlgorithmDenylistPath.Length != 0) hash ^= XlaGpuAlgorithmDenylistPath.GetHashCode();
      if (XlaTpuDetectNan != false) hash ^= XlaTpuDetectNan.GetHashCode();
      if (XlaTpuDetectInf != false) hash ^= XlaTpuDetectInf.GetHashCode();
      if (XlaCpuEnableXprofTraceme != false) hash ^= XlaCpuEnableXprofTraceme.GetHashCode();
      if (XlaGpuUnsafeFallbackToDriverOnPtxasNotFound != false) hash ^= XlaGpuUnsafeFallbackToDriverOnPtxasNotFound.GetHashCode();
      if (XlaGpuAsmExtraFlags.Length != 0) hash ^= XlaGpuAsmExtraFlags.GetHashCode();
      if (XlaMultiheapSizeConstraintPerHeap != 0) hash ^= XlaMultiheapSizeConstraintPerHeap.GetHashCode();
      if (XlaDetailedLoggingAndDumping != false) hash ^= XlaDetailedLoggingAndDumping.GetHashCode();
      if (XlaGpuForceCompilationParallelism != 0) hash ^= XlaGpuForceCompilationParallelism.GetHashCode();
      if (XlaGpuDeterministicOps != false) hash ^= XlaGpuDeterministicOps.GetHashCode();
      hash ^= xlaGpuLlvmIrFile_.GetHashCode();
      if (XlaGpuEnableAsyncAllReduce != false) hash ^= XlaGpuEnableAsyncAllReduce.GetHashCode();
      if (XlaGpuAllReduceCombineThresholdBytes != 0L) hash ^= XlaGpuAllReduceCombineThresholdBytes.GetHashCode();
      if (XlaGpuAllReduceContiguous != false) hash ^= XlaGpuAllReduceContiguous.GetHashCode();
      if (XlaGpuAllReduceBlueconnectNumDevicesPerHost != 0) hash ^= XlaGpuAllReduceBlueconnectNumDevicesPerHost.GetHashCode();
      if (XlaGpuEnableCudnnFrontend != false) hash ^= XlaGpuEnableCudnnFrontend.GetHashCode();
      if (XlaDumpDisableMetadata != false) hash ^= XlaDumpDisableMetadata.GetHashCode();
      if (XlaDumpHloPipelineRe.Length != 0) hash ^= XlaDumpHloPipelineRe.GetHashCode();
      if (XlaGpuStrictConvAlgorithmPicker != false) hash ^= XlaGpuStrictConvAlgorithmPicker.GetHashCode();
      if (XlaGpuEnableXlaRuntimeExecutable != false) hash ^= XlaGpuEnableXlaRuntimeExecutable.GetHashCode();
      if (XlaGpuNcclTerminationTimeoutSeconds != 0L) hash ^= XlaGpuNcclTerminationTimeoutSeconds.GetHashCode();
      if (XlaGpuEnableSharedConstants != false) hash ^= XlaGpuEnableSharedConstants.GetHashCode();
      if (XlaGpuEnableCublaslt != false) hash ^= XlaGpuEnableCublaslt.GetHashCode();
      if (XlaGpuRedzoneScratchMaxMegabytes != 0L) hash ^= XlaGpuRedzoneScratchMaxMegabytes.GetHashCode();
      if (XlaGpuSimplifyAllFpConversions != false) hash ^= XlaGpuSimplifyAllFpConversions.GetHashCode();
      if (XlaGpuNormalizeLayouts != false) hash ^= XlaGpuNormalizeLayouts.GetHashCode();
      if (XlaCpuUseAcl != false) hash ^= XlaCpuUseAcl.GetHashCode();
      if (XlaCpuStrictDotConvMath != false) hash ^= XlaCpuStrictDotConvMath.GetHashCode();
      hash ^= XlaBackendExtraOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (XlaHloGraphAddresses != false) {
        output.WriteRawTag(16);
        output.WriteBool(XlaHloGraphAddresses);
      }
      if (XlaHloProfile != false) {
        output.WriteRawTag(72);
        output.WriteBool(XlaHloProfile);
      }
      xlaDisableHloPasses_.WriteTo(output, _repeated_xlaDisableHloPasses_codec);
      if (XlaBackendOptimizationLevel != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(XlaBackendOptimizationLevel);
      }
      if (XlaEmbedIrInExecutable != false) {
        output.WriteRawTag(136, 2);
        output.WriteBool(XlaEmbedIrInExecutable);
      }
      if (XlaEliminateHloImplicitBroadcast != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(XlaEliminateHloImplicitBroadcast);
      }
      if (XlaCpuMultiThreadEigen != false) {
        output.WriteRawTag(224, 3);
        output.WriteBool(XlaCpuMultiThreadEigen);
      }
      if (XlaGpuCudaDataDir.Length != 0) {
        output.WriteRawTag(234, 3);
        output.WriteString(XlaGpuCudaDataDir);
      }
      if (XlaGpuFtz != false) {
        output.WriteRawTag(240, 3);
        output.WriteBool(XlaGpuFtz);
      }
      if (XlaLlvmEnableAliasScopeMetadata != false) {
        output.WriteRawTag(176, 4);
        output.WriteBool(XlaLlvmEnableAliasScopeMetadata);
      }
      if (XlaLlvmEnableNoaliasMetadata != false) {
        output.WriteRawTag(184, 4);
        output.WriteBool(XlaLlvmEnableNoaliasMetadata);
      }
      if (XlaLlvmEnableInvariantLoadMetadata != false) {
        output.WriteRawTag(192, 4);
        output.WriteBool(XlaLlvmEnableInvariantLoadMetadata);
      }
      if (XlaLlvmDisableExpensivePasses != false) {
        output.WriteRawTag(200, 4);
        output.WriteBool(XlaLlvmDisableExpensivePasses);
      }
      if (XlaTestAllOutputLayouts != false) {
        output.WriteRawTag(208, 5);
        output.WriteBool(XlaTestAllOutputLayouts);
      }
      if (XlaTestAllInputLayouts != false) {
        output.WriteRawTag(216, 5);
        output.WriteBool(XlaTestAllInputLayouts);
      }
      if (XlaHloGraphShardingColor != false) {
        output.WriteRawTag(224, 5);
        output.WriteBool(XlaHloGraphShardingColor);
      }
      if (XlaCpuUseMklDnn != false) {
        output.WriteRawTag(136, 6);
        output.WriteBool(XlaCpuUseMklDnn);
      }
      if (XlaGpuMaxKernelUnrollFactor != 0) {
        output.WriteRawTag(144, 6);
        output.WriteInt32(XlaGpuMaxKernelUnrollFactor);
      }
      if (XlaCpuEnableFastMath != false) {
        output.WriteRawTag(152, 6);
        output.WriteBool(XlaCpuEnableFastMath);
      }
      if (XlaGpuEnableFastMinMax != false) {
        output.WriteRawTag(160, 6);
        output.WriteBool(XlaGpuEnableFastMinMax);
      }
      if (XlaGpuCrashOnVerificationFailures != false) {
        output.WriteRawTag(168, 6);
        output.WriteBool(XlaGpuCrashOnVerificationFailures);
      }
      if (XlaForceHostPlatformDeviceCount != 0) {
        output.WriteRawTag(176, 6);
        output.WriteInt32(XlaForceHostPlatformDeviceCount);
      }
      if (XlaGpuDisableGpuasmOptimizations != false) {
        output.WriteRawTag(184, 6);
        output.WriteBool(XlaGpuDisableGpuasmOptimizations);
      }
      if (XlaDisableAllHloPasses != false) {
        output.WriteRawTag(192, 6);
        output.WriteBool(XlaDisableAllHloPasses);
      }
      if (XlaHloEvaluatorUseFastPath != false) {
        output.WriteRawTag(208, 6);
        output.WriteBool(XlaHloEvaluatorUseFastPath);
      }
      if (XlaAllowScalarIndexDynamicOps != false) {
        output.WriteRawTag(216, 6);
        output.WriteBool(XlaAllowScalarIndexDynamicOps);
      }
      if (XlaStepMarkerLocation != global::Xla.DebugOptions.Types.StepMarkerLocation.StepMarkAtEntry) {
        output.WriteRawTag(224, 6);
        output.WriteEnum((int) XlaStepMarkerLocation);
      }
      if (XlaDumpTo.Length != 0) {
        output.WriteRawTag(234, 6);
        output.WriteString(XlaDumpTo);
      }
      if (XlaDumpHloModuleRe.Length != 0) {
        output.WriteRawTag(242, 6);
        output.WriteString(XlaDumpHloModuleRe);
      }
      if (XlaDumpHloPassRe.Length != 0) {
        output.WriteRawTag(250, 6);
        output.WriteString(XlaDumpHloPassRe);
      }
      if (XlaDumpHloAsText != false) {
        output.WriteRawTag(128, 7);
        output.WriteBool(XlaDumpHloAsText);
      }
      if (XlaDumpHloAsProto != false) {
        output.WriteRawTag(136, 7);
        output.WriteBool(XlaDumpHloAsProto);
      }
      if (XlaDumpHloAsDot != false) {
        output.WriteRawTag(144, 7);
        output.WriteBool(XlaDumpHloAsDot);
      }
      if (XlaDumpHloAsUrl != false) {
        output.WriteRawTag(152, 7);
        output.WriteBool(XlaDumpHloAsUrl);
      }
      if (XlaDumpHloAsHtml != false) {
        output.WriteRawTag(160, 7);
        output.WriteBool(XlaDumpHloAsHtml);
      }
      if (XlaDumpHloSnapshots != false) {
        output.WriteRawTag(176, 7);
        output.WriteBool(XlaDumpHloSnapshots);
      }
      if (XlaCpuFastMathHonorNans != false) {
        output.WriteRawTag(192, 7);
        output.WriteBool(XlaCpuFastMathHonorNans);
      }
      if (XlaCpuFastMathHonorInfs != false) {
        output.WriteRawTag(200, 7);
        output.WriteBool(XlaCpuFastMathHonorInfs);
      }
      if (XlaAllowExcessPrecision != false) {
        output.WriteRawTag(208, 7);
        output.WriteBool(XlaAllowExcessPrecision);
      }
      if (XlaGpuAutotuneLevel != 0) {
        output.WriteRawTag(216, 7);
        output.WriteInt32(XlaGpuAutotuneLevel);
      }
      xlaEnableHloPassesOnly_.WriteTo(output, _repeated_xlaEnableHloPassesOnly_codec);
      if (XlaGpuForceConvNchw != false) {
        output.WriteRawTag(232, 7);
        output.WriteBool(XlaGpuForceConvNchw);
      }
      if (XlaCpuFastMathHonorDivision != false) {
        output.WriteRawTag(240, 7);
        output.WriteBool(XlaCpuFastMathHonorDivision);
      }
      xlaGpuPtxFile_.WriteTo(output, _repeated_xlaGpuPtxFile_codec);
      if (XlaGpuAlgorithmDenylistPath.Length != 0) {
        output.WriteRawTag(130, 8);
        output.WriteString(XlaGpuAlgorithmDenylistPath);
      }
      if (XlaCpuFastMathHonorFunctions != false) {
        output.WriteRawTag(136, 8);
        output.WriteBool(XlaCpuFastMathHonorFunctions);
      }
      if (XlaDumpIncludeTimestamp != false) {
        output.WriteRawTag(152, 8);
        output.WriteBool(XlaDumpIncludeTimestamp);
      }
      if (XlaDumpMaxHloModules != 0) {
        output.WriteRawTag(160, 8);
        output.WriteInt32(XlaDumpMaxHloModules);
      }
      if (XlaTpuDetectNan != false) {
        output.WriteRawTag(184, 8);
        output.WriteBool(XlaTpuDetectNan);
      }
      if (XlaTpuDetectInf != false) {
        output.WriteRawTag(192, 8);
        output.WriteBool(XlaTpuDetectInf);
      }
      if (XlaCpuEnableXprofTraceme != false) {
        output.WriteRawTag(200, 8);
        output.WriteBool(XlaCpuEnableXprofTraceme);
      }
      if (XlaGpuUnsafeFallbackToDriverOnPtxasNotFound != false) {
        output.WriteRawTag(208, 8);
        output.WriteBool(XlaGpuUnsafeFallbackToDriverOnPtxasNotFound);
      }
      if (XlaCpuEnableFastMinMax != false) {
        output.WriteRawTag(224, 8);
        output.WriteBool(XlaCpuEnableFastMinMax);
      }
      if (XlaGpuAsmExtraFlags.Length != 0) {
        output.WriteRawTag(234, 8);
        output.WriteString(XlaGpuAsmExtraFlags);
      }
      if (XlaMultiheapSizeConstraintPerHeap != 0) {
        output.WriteRawTag(240, 8);
        output.WriteInt32(XlaMultiheapSizeConstraintPerHeap);
      }
      if (XlaDetailedLoggingAndDumping != false) {
        output.WriteRawTag(248, 8);
        output.WriteBool(XlaDetailedLoggingAndDumping);
      }
      if (XlaDumpModuleMetadata != false) {
        output.WriteRawTag(128, 9);
        output.WriteBool(XlaDumpModuleMetadata);
      }
      if (XlaGpuForceConvNhwc != false) {
        output.WriteRawTag(144, 9);
        output.WriteBool(XlaGpuForceConvNhwc);
      }
      if (XlaGpuForceCompilationParallelism != 0) {
        output.WriteRawTag(152, 9);
        output.WriteInt32(XlaGpuForceCompilationParallelism);
      }
      if (XlaGpuDeterministicOps != false) {
        output.WriteRawTag(160, 9);
        output.WriteBool(XlaGpuDeterministicOps);
      }
      if (XlaDumpFusionVisualization != false) {
        output.WriteRawTag(168, 9);
        output.WriteBool(XlaDumpFusionVisualization);
      }
      xlaGpuLlvmIrFile_.WriteTo(output, _repeated_xlaGpuLlvmIrFile_codec);
      if (XlaDumpCompressProtos != false) {
        output.WriteRawTag(184, 9);
        output.WriteBool(XlaDumpCompressProtos);
      }
      if (XlaGpuEnableAsyncAllReduce != false) {
        output.WriteRawTag(192, 9);
        output.WriteBool(XlaGpuEnableAsyncAllReduce);
      }
      if (XlaDumpDisableMetadata != false) {
        output.WriteRawTag(200, 9);
        output.WriteBool(XlaDumpDisableMetadata);
      }
      if (XlaDumpHloPipelineRe.Length != 0) {
        output.WriteRawTag(210, 9);
        output.WriteString(XlaDumpHloPipelineRe);
      }
      if (XlaGpuDumpLlvmir != false) {
        output.WriteRawTag(216, 9);
        output.WriteBool(XlaGpuDumpLlvmir);
      }
      if (XlaGpuStrictConvAlgorithmPicker != false) {
        output.WriteRawTag(224, 9);
        output.WriteBool(XlaGpuStrictConvAlgorithmPicker);
      }
      if (XlaGpuAllReduceCombineThresholdBytes != 0L) {
        output.WriteRawTag(232, 9);
        output.WriteInt64(XlaGpuAllReduceCombineThresholdBytes);
      }
      if (XlaGpuAllReduceContiguous != false) {
        output.WriteRawTag(240, 9);
        output.WriteBool(XlaGpuAllReduceContiguous);
      }
      if (XlaGpuAllReduceBlueconnectNumDevicesPerHost != 0) {
        output.WriteRawTag(248, 9);
        output.WriteInt32(XlaGpuAllReduceBlueconnectNumDevicesPerHost);
      }
      if (XlaGpuEnableCudnnFrontend != false) {
        output.WriteRawTag(128, 10);
        output.WriteBool(XlaGpuEnableCudnnFrontend);
      }
      if (XlaGpuNcclTerminationTimeoutSeconds != 0L) {
        output.WriteRawTag(152, 10);
        output.WriteInt64(XlaGpuNcclTerminationTimeoutSeconds);
      }
      if (XlaDumpHloAsLongText != false) {
        output.WriteRawTag(160, 10);
        output.WriteBool(XlaDumpHloAsLongText);
      }
      if (XlaGpuEnableSharedConstants != false) {
        output.WriteRawTag(168, 10);
        output.WriteBool(XlaGpuEnableSharedConstants);
      }
      if (XlaGpuEnableCublaslt != false) {
        output.WriteRawTag(176, 10);
        output.WriteBool(XlaGpuEnableCublaslt);
      }
      if (XlaGpuRedzoneScratchMaxMegabytes != 0L) {
        output.WriteRawTag(184, 10);
        output.WriteInt64(XlaGpuRedzoneScratchMaxMegabytes);
      }
      if (XlaGpuSimplifyAllFpConversions != false) {
        output.WriteRawTag(192, 10);
        output.WriteBool(XlaGpuSimplifyAllFpConversions);
      }
      if (XlaGpuEnableXlaRuntimeExecutable != false) {
        output.WriteRawTag(200, 10);
        output.WriteBool(XlaGpuEnableXlaRuntimeExecutable);
      }
      if (XlaGpuShapeChecks != global::Xla.DebugOptions.Types.ShapeChecks.Ignore) {
        output.WriteRawTag(208, 10);
        output.WriteEnum((int) XlaGpuShapeChecks);
      }
      if (XlaCpuEnableMlirLowering != false) {
        output.WriteRawTag(216, 10);
        output.WriteBool(XlaCpuEnableMlirLowering);
      }
      if (XlaGpuNormalizeLayouts != false) {
        output.WriteRawTag(224, 10);
        output.WriteBool(XlaGpuNormalizeLayouts);
      }
      if (XlaGpuEnableMlirLowering != false) {
        output.WriteRawTag(232, 10);
        output.WriteBool(XlaGpuEnableMlirLowering);
      }
      if (XlaCpuUseAcl != false) {
        output.WriteRawTag(240, 10);
        output.WriteBool(XlaCpuUseAcl);
      }
      if (XlaCpuStrictDotConvMath != false) {
        output.WriteRawTag(248, 10);
        output.WriteBool(XlaCpuStrictDotConvMath);
      }
      if (XlaCpuUseXlaRuntime != false) {
        output.WriteRawTag(136, 11);
        output.WriteBool(XlaCpuUseXlaRuntime);
      }
      xlaBackendExtraOptions_.WriteTo(output, _map_xlaBackendExtraOptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (XlaHloGraphAddresses != false) {
        output.WriteRawTag(16);
        output.WriteBool(XlaHloGraphAddresses);
      }
      if (XlaHloProfile != false) {
        output.WriteRawTag(72);
        output.WriteBool(XlaHloProfile);
      }
      xlaDisableHloPasses_.WriteTo(ref output, _repeated_xlaDisableHloPasses_codec);
      if (XlaBackendOptimizationLevel != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(XlaBackendOptimizationLevel);
      }
      if (XlaEmbedIrInExecutable != false) {
        output.WriteRawTag(136, 2);
        output.WriteBool(XlaEmbedIrInExecutable);
      }
      if (XlaEliminateHloImplicitBroadcast != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(XlaEliminateHloImplicitBroadcast);
      }
      if (XlaCpuMultiThreadEigen != false) {
        output.WriteRawTag(224, 3);
        output.WriteBool(XlaCpuMultiThreadEigen);
      }
      if (XlaGpuCudaDataDir.Length != 0) {
        output.WriteRawTag(234, 3);
        output.WriteString(XlaGpuCudaDataDir);
      }
      if (XlaGpuFtz != false) {
        output.WriteRawTag(240, 3);
        output.WriteBool(XlaGpuFtz);
      }
      if (XlaLlvmEnableAliasScopeMetadata != false) {
        output.WriteRawTag(176, 4);
        output.WriteBool(XlaLlvmEnableAliasScopeMetadata);
      }
      if (XlaLlvmEnableNoaliasMetadata != false) {
        output.WriteRawTag(184, 4);
        output.WriteBool(XlaLlvmEnableNoaliasMetadata);
      }
      if (XlaLlvmEnableInvariantLoadMetadata != false) {
        output.WriteRawTag(192, 4);
        output.WriteBool(XlaLlvmEnableInvariantLoadMetadata);
      }
      if (XlaLlvmDisableExpensivePasses != false) {
        output.WriteRawTag(200, 4);
        output.WriteBool(XlaLlvmDisableExpensivePasses);
      }
      if (XlaTestAllOutputLayouts != false) {
        output.WriteRawTag(208, 5);
        output.WriteBool(XlaTestAllOutputLayouts);
      }
      if (XlaTestAllInputLayouts != false) {
        output.WriteRawTag(216, 5);
        output.WriteBool(XlaTestAllInputLayouts);
      }
      if (XlaHloGraphShardingColor != false) {
        output.WriteRawTag(224, 5);
        output.WriteBool(XlaHloGraphShardingColor);
      }
      if (XlaCpuUseMklDnn != false) {
        output.WriteRawTag(136, 6);
        output.WriteBool(XlaCpuUseMklDnn);
      }
      if (XlaGpuMaxKernelUnrollFactor != 0) {
        output.WriteRawTag(144, 6);
        output.WriteInt32(XlaGpuMaxKernelUnrollFactor);
      }
      if (XlaCpuEnableFastMath != false) {
        output.WriteRawTag(152, 6);
        output.WriteBool(XlaCpuEnableFastMath);
      }
      if (XlaGpuEnableFastMinMax != false) {
        output.WriteRawTag(160, 6);
        output.WriteBool(XlaGpuEnableFastMinMax);
      }
      if (XlaGpuCrashOnVerificationFailures != false) {
        output.WriteRawTag(168, 6);
        output.WriteBool(XlaGpuCrashOnVerificationFailures);
      }
      if (XlaForceHostPlatformDeviceCount != 0) {
        output.WriteRawTag(176, 6);
        output.WriteInt32(XlaForceHostPlatformDeviceCount);
      }
      if (XlaGpuDisableGpuasmOptimizations != false) {
        output.WriteRawTag(184, 6);
        output.WriteBool(XlaGpuDisableGpuasmOptimizations);
      }
      if (XlaDisableAllHloPasses != false) {
        output.WriteRawTag(192, 6);
        output.WriteBool(XlaDisableAllHloPasses);
      }
      if (XlaHloEvaluatorUseFastPath != false) {
        output.WriteRawTag(208, 6);
        output.WriteBool(XlaHloEvaluatorUseFastPath);
      }
      if (XlaAllowScalarIndexDynamicOps != false) {
        output.WriteRawTag(216, 6);
        output.WriteBool(XlaAllowScalarIndexDynamicOps);
      }
      if (XlaStepMarkerLocation != global::Xla.DebugOptions.Types.StepMarkerLocation.StepMarkAtEntry) {
        output.WriteRawTag(224, 6);
        output.WriteEnum((int) XlaStepMarkerLocation);
      }
      if (XlaDumpTo.Length != 0) {
        output.WriteRawTag(234, 6);
        output.WriteString(XlaDumpTo);
      }
      if (XlaDumpHloModuleRe.Length != 0) {
        output.WriteRawTag(242, 6);
        output.WriteString(XlaDumpHloModuleRe);
      }
      if (XlaDumpHloPassRe.Length != 0) {
        output.WriteRawTag(250, 6);
        output.WriteString(XlaDumpHloPassRe);
      }
      if (XlaDumpHloAsText != false) {
        output.WriteRawTag(128, 7);
        output.WriteBool(XlaDumpHloAsText);
      }
      if (XlaDumpHloAsProto != false) {
        output.WriteRawTag(136, 7);
        output.WriteBool(XlaDumpHloAsProto);
      }
      if (XlaDumpHloAsDot != false) {
        output.WriteRawTag(144, 7);
        output.WriteBool(XlaDumpHloAsDot);
      }
      if (XlaDumpHloAsUrl != false) {
        output.WriteRawTag(152, 7);
        output.WriteBool(XlaDumpHloAsUrl);
      }
      if (XlaDumpHloAsHtml != false) {
        output.WriteRawTag(160, 7);
        output.WriteBool(XlaDumpHloAsHtml);
      }
      if (XlaDumpHloSnapshots != false) {
        output.WriteRawTag(176, 7);
        output.WriteBool(XlaDumpHloSnapshots);
      }
      if (XlaCpuFastMathHonorNans != false) {
        output.WriteRawTag(192, 7);
        output.WriteBool(XlaCpuFastMathHonorNans);
      }
      if (XlaCpuFastMathHonorInfs != false) {
        output.WriteRawTag(200, 7);
        output.WriteBool(XlaCpuFastMathHonorInfs);
      }
      if (XlaAllowExcessPrecision != false) {
        output.WriteRawTag(208, 7);
        output.WriteBool(XlaAllowExcessPrecision);
      }
      if (XlaGpuAutotuneLevel != 0) {
        output.WriteRawTag(216, 7);
        output.WriteInt32(XlaGpuAutotuneLevel);
      }
      xlaEnableHloPassesOnly_.WriteTo(ref output, _repeated_xlaEnableHloPassesOnly_codec);
      if (XlaGpuForceConvNchw != false) {
        output.WriteRawTag(232, 7);
        output.WriteBool(XlaGpuForceConvNchw);
      }
      if (XlaCpuFastMathHonorDivision != false) {
        output.WriteRawTag(240, 7);
        output.WriteBool(XlaCpuFastMathHonorDivision);
      }
      xlaGpuPtxFile_.WriteTo(ref output, _repeated_xlaGpuPtxFile_codec);
      if (XlaGpuAlgorithmDenylistPath.Length != 0) {
        output.WriteRawTag(130, 8);
        output.WriteString(XlaGpuAlgorithmDenylistPath);
      }
      if (XlaCpuFastMathHonorFunctions != false) {
        output.WriteRawTag(136, 8);
        output.WriteBool(XlaCpuFastMathHonorFunctions);
      }
      if (XlaDumpIncludeTimestamp != false) {
        output.WriteRawTag(152, 8);
        output.WriteBool(XlaDumpIncludeTimestamp);
      }
      if (XlaDumpMaxHloModules != 0) {
        output.WriteRawTag(160, 8);
        output.WriteInt32(XlaDumpMaxHloModules);
      }
      if (XlaTpuDetectNan != false) {
        output.WriteRawTag(184, 8);
        output.WriteBool(XlaTpuDetectNan);
      }
      if (XlaTpuDetectInf != false) {
        output.WriteRawTag(192, 8);
        output.WriteBool(XlaTpuDetectInf);
      }
      if (XlaCpuEnableXprofTraceme != false) {
        output.WriteRawTag(200, 8);
        output.WriteBool(XlaCpuEnableXprofTraceme);
      }
      if (XlaGpuUnsafeFallbackToDriverOnPtxasNotFound != false) {
        output.WriteRawTag(208, 8);
        output.WriteBool(XlaGpuUnsafeFallbackToDriverOnPtxasNotFound);
      }
      if (XlaCpuEnableFastMinMax != false) {
        output.WriteRawTag(224, 8);
        output.WriteBool(XlaCpuEnableFastMinMax);
      }
      if (XlaGpuAsmExtraFlags.Length != 0) {
        output.WriteRawTag(234, 8);
        output.WriteString(XlaGpuAsmExtraFlags);
      }
      if (XlaMultiheapSizeConstraintPerHeap != 0) {
        output.WriteRawTag(240, 8);
        output.WriteInt32(XlaMultiheapSizeConstraintPerHeap);
      }
      if (XlaDetailedLoggingAndDumping != false) {
        output.WriteRawTag(248, 8);
        output.WriteBool(XlaDetailedLoggingAndDumping);
      }
      if (XlaDumpModuleMetadata != false) {
        output.WriteRawTag(128, 9);
        output.WriteBool(XlaDumpModuleMetadata);
      }
      if (XlaGpuForceConvNhwc != false) {
        output.WriteRawTag(144, 9);
        output.WriteBool(XlaGpuForceConvNhwc);
      }
      if (XlaGpuForceCompilationParallelism != 0) {
        output.WriteRawTag(152, 9);
        output.WriteInt32(XlaGpuForceCompilationParallelism);
      }
      if (XlaGpuDeterministicOps != false) {
        output.WriteRawTag(160, 9);
        output.WriteBool(XlaGpuDeterministicOps);
      }
      if (XlaDumpFusionVisualization != false) {
        output.WriteRawTag(168, 9);
        output.WriteBool(XlaDumpFusionVisualization);
      }
      xlaGpuLlvmIrFile_.WriteTo(ref output, _repeated_xlaGpuLlvmIrFile_codec);
      if (XlaDumpCompressProtos != false) {
        output.WriteRawTag(184, 9);
        output.WriteBool(XlaDumpCompressProtos);
      }
      if (XlaGpuEnableAsyncAllReduce != false) {
        output.WriteRawTag(192, 9);
        output.WriteBool(XlaGpuEnableAsyncAllReduce);
      }
      if (XlaDumpDisableMetadata != false) {
        output.WriteRawTag(200, 9);
        output.WriteBool(XlaDumpDisableMetadata);
      }
      if (XlaDumpHloPipelineRe.Length != 0) {
        output.WriteRawTag(210, 9);
        output.WriteString(XlaDumpHloPipelineRe);
      }
      if (XlaGpuDumpLlvmir != false) {
        output.WriteRawTag(216, 9);
        output.WriteBool(XlaGpuDumpLlvmir);
      }
      if (XlaGpuStrictConvAlgorithmPicker != false) {
        output.WriteRawTag(224, 9);
        output.WriteBool(XlaGpuStrictConvAlgorithmPicker);
      }
      if (XlaGpuAllReduceCombineThresholdBytes != 0L) {
        output.WriteRawTag(232, 9);
        output.WriteInt64(XlaGpuAllReduceCombineThresholdBytes);
      }
      if (XlaGpuAllReduceContiguous != false) {
        output.WriteRawTag(240, 9);
        output.WriteBool(XlaGpuAllReduceContiguous);
      }
      if (XlaGpuAllReduceBlueconnectNumDevicesPerHost != 0) {
        output.WriteRawTag(248, 9);
        output.WriteInt32(XlaGpuAllReduceBlueconnectNumDevicesPerHost);
      }
      if (XlaGpuEnableCudnnFrontend != false) {
        output.WriteRawTag(128, 10);
        output.WriteBool(XlaGpuEnableCudnnFrontend);
      }
      if (XlaGpuNcclTerminationTimeoutSeconds != 0L) {
        output.WriteRawTag(152, 10);
        output.WriteInt64(XlaGpuNcclTerminationTimeoutSeconds);
      }
      if (XlaDumpHloAsLongText != false) {
        output.WriteRawTag(160, 10);
        output.WriteBool(XlaDumpHloAsLongText);
      }
      if (XlaGpuEnableSharedConstants != false) {
        output.WriteRawTag(168, 10);
        output.WriteBool(XlaGpuEnableSharedConstants);
      }
      if (XlaGpuEnableCublaslt != false) {
        output.WriteRawTag(176, 10);
        output.WriteBool(XlaGpuEnableCublaslt);
      }
      if (XlaGpuRedzoneScratchMaxMegabytes != 0L) {
        output.WriteRawTag(184, 10);
        output.WriteInt64(XlaGpuRedzoneScratchMaxMegabytes);
      }
      if (XlaGpuSimplifyAllFpConversions != false) {
        output.WriteRawTag(192, 10);
        output.WriteBool(XlaGpuSimplifyAllFpConversions);
      }
      if (XlaGpuEnableXlaRuntimeExecutable != false) {
        output.WriteRawTag(200, 10);
        output.WriteBool(XlaGpuEnableXlaRuntimeExecutable);
      }
      if (XlaGpuShapeChecks != global::Xla.DebugOptions.Types.ShapeChecks.Ignore) {
        output.WriteRawTag(208, 10);
        output.WriteEnum((int) XlaGpuShapeChecks);
      }
      if (XlaCpuEnableMlirLowering != false) {
        output.WriteRawTag(216, 10);
        output.WriteBool(XlaCpuEnableMlirLowering);
      }
      if (XlaGpuNormalizeLayouts != false) {
        output.WriteRawTag(224, 10);
        output.WriteBool(XlaGpuNormalizeLayouts);
      }
      if (XlaGpuEnableMlirLowering != false) {
        output.WriteRawTag(232, 10);
        output.WriteBool(XlaGpuEnableMlirLowering);
      }
      if (XlaCpuUseAcl != false) {
        output.WriteRawTag(240, 10);
        output.WriteBool(XlaCpuUseAcl);
      }
      if (XlaCpuStrictDotConvMath != false) {
        output.WriteRawTag(248, 10);
        output.WriteBool(XlaCpuStrictDotConvMath);
      }
      if (XlaCpuUseXlaRuntime != false) {
        output.WriteRawTag(136, 11);
        output.WriteBool(XlaCpuUseXlaRuntime);
      }
      xlaBackendExtraOptions_.WriteTo(ref output, _map_xlaBackendExtraOptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (XlaHloGraphAddresses != false) {
        size += 1 + 1;
      }
      if (XlaHloProfile != false) {
        size += 1 + 1;
      }
      size += xlaDisableHloPasses_.CalculateSize(_repeated_xlaDisableHloPasses_codec);
      size += xlaEnableHloPassesOnly_.CalculateSize(_repeated_xlaEnableHloPassesOnly_codec);
      if (XlaDisableAllHloPasses != false) {
        size += 2 + 1;
      }
      if (XlaBackendOptimizationLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(XlaBackendOptimizationLevel);
      }
      if (XlaEmbedIrInExecutable != false) {
        size += 2 + 1;
      }
      if (XlaEliminateHloImplicitBroadcast != false) {
        size += 2 + 1;
      }
      if (XlaCpuMultiThreadEigen != false) {
        size += 2 + 1;
      }
      if (XlaGpuCudaDataDir.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(XlaGpuCudaDataDir);
      }
      if (XlaGpuFtz != false) {
        size += 2 + 1;
      }
      if (XlaLlvmEnableAliasScopeMetadata != false) {
        size += 2 + 1;
      }
      if (XlaLlvmEnableNoaliasMetadata != false) {
        size += 2 + 1;
      }
      if (XlaLlvmEnableInvariantLoadMetadata != false) {
        size += 2 + 1;
      }
      if (XlaLlvmDisableExpensivePasses != false) {
        size += 2 + 1;
      }
      if (XlaTestAllOutputLayouts != false) {
        size += 2 + 1;
      }
      if (XlaTestAllInputLayouts != false) {
        size += 2 + 1;
      }
      if (XlaHloGraphShardingColor != false) {
        size += 2 + 1;
      }
      if (XlaCpuUseMklDnn != false) {
        size += 2 + 1;
      }
      if (XlaCpuUseXlaRuntime != false) {
        size += 2 + 1;
      }
      if (XlaGpuMaxKernelUnrollFactor != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(XlaGpuMaxKernelUnrollFactor);
      }
      if (XlaCpuEnableFastMath != false) {
        size += 2 + 1;
      }
      if (XlaCpuFastMathHonorNans != false) {
        size += 2 + 1;
      }
      if (XlaCpuFastMathHonorInfs != false) {
        size += 2 + 1;
      }
      if (XlaCpuFastMathHonorDivision != false) {
        size += 2 + 1;
      }
      if (XlaCpuFastMathHonorFunctions != false) {
        size += 2 + 1;
      }
      if (XlaCpuEnableFastMinMax != false) {
        size += 2 + 1;
      }
      if (XlaGpuEnableFastMinMax != false) {
        size += 2 + 1;
      }
      if (XlaAllowExcessPrecision != false) {
        size += 2 + 1;
      }
      if (XlaGpuCrashOnVerificationFailures != false) {
        size += 2 + 1;
      }
      if (XlaGpuAutotuneLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(XlaGpuAutotuneLevel);
      }
      if (XlaForceHostPlatformDeviceCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(XlaForceHostPlatformDeviceCount);
      }
      if (XlaGpuDisableGpuasmOptimizations != false) {
        size += 2 + 1;
      }
      if (XlaGpuShapeChecks != global::Xla.DebugOptions.Types.ShapeChecks.Ignore) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) XlaGpuShapeChecks);
      }
      if (XlaCpuEnableMlirLowering != false) {
        size += 2 + 1;
      }
      if (XlaGpuEnableMlirLowering != false) {
        size += 2 + 1;
      }
      if (XlaHloEvaluatorUseFastPath != false) {
        size += 2 + 1;
      }
      if (XlaAllowScalarIndexDynamicOps != false) {
        size += 2 + 1;
      }
      if (XlaStepMarkerLocation != global::Xla.DebugOptions.Types.StepMarkerLocation.StepMarkAtEntry) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) XlaStepMarkerLocation);
      }
      if (XlaDumpTo.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(XlaDumpTo);
      }
      if (XlaDumpHloModuleRe.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(XlaDumpHloModuleRe);
      }
      if (XlaDumpHloPassRe.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(XlaDumpHloPassRe);
      }
      if (XlaDumpHloAsText != false) {
        size += 2 + 1;
      }
      if (XlaDumpHloAsProto != false) {
        size += 2 + 1;
      }
      if (XlaDumpHloAsDot != false) {
        size += 2 + 1;
      }
      if (XlaDumpHloAsUrl != false) {
        size += 2 + 1;
      }
      if (XlaDumpHloAsHtml != false) {
        size += 2 + 1;
      }
      if (XlaDumpFusionVisualization != false) {
        size += 2 + 1;
      }
      if (XlaDumpHloSnapshots != false) {
        size += 2 + 1;
      }
      if (XlaDumpIncludeTimestamp != false) {
        size += 2 + 1;
      }
      if (XlaDumpMaxHloModules != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(XlaDumpMaxHloModules);
      }
      if (XlaDumpModuleMetadata != false) {
        size += 2 + 1;
      }
      if (XlaDumpCompressProtos != false) {
        size += 2 + 1;
      }
      if (XlaDumpHloAsLongText != false) {
        size += 2 + 1;
      }
      if (XlaGpuForceConvNchw != false) {
        size += 2 + 1;
      }
      if (XlaGpuForceConvNhwc != false) {
        size += 2 + 1;
      }
      size += xlaGpuPtxFile_.CalculateSize(_repeated_xlaGpuPtxFile_codec);
      if (XlaGpuDumpLlvmir != false) {
        size += 2 + 1;
      }
      if (XlaGpuAlgorithmDenylistPath.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(XlaGpuAlgorithmDenylistPath);
      }
      if (XlaTpuDetectNan != false) {
        size += 2 + 1;
      }
      if (XlaTpuDetectInf != false) {
        size += 2 + 1;
      }
      if (XlaCpuEnableXprofTraceme != false) {
        size += 2 + 1;
      }
      if (XlaGpuUnsafeFallbackToDriverOnPtxasNotFound != false) {
        size += 2 + 1;
      }
      if (XlaGpuAsmExtraFlags.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(XlaGpuAsmExtraFlags);
      }
      if (XlaMultiheapSizeConstraintPerHeap != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(XlaMultiheapSizeConstraintPerHeap);
      }
      if (XlaDetailedLoggingAndDumping != false) {
        size += 2 + 1;
      }
      if (XlaGpuForceCompilationParallelism != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(XlaGpuForceCompilationParallelism);
      }
      if (XlaGpuDeterministicOps != false) {
        size += 2 + 1;
      }
      size += xlaGpuLlvmIrFile_.CalculateSize(_repeated_xlaGpuLlvmIrFile_codec);
      if (XlaGpuEnableAsyncAllReduce != false) {
        size += 2 + 1;
      }
      if (XlaGpuAllReduceCombineThresholdBytes != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(XlaGpuAllReduceCombineThresholdBytes);
      }
      if (XlaGpuAllReduceContiguous != false) {
        size += 2 + 1;
      }
      if (XlaGpuAllReduceBlueconnectNumDevicesPerHost != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(XlaGpuAllReduceBlueconnectNumDevicesPerHost);
      }
      if (XlaGpuEnableCudnnFrontend != false) {
        size += 2 + 1;
      }
      if (XlaDumpDisableMetadata != false) {
        size += 2 + 1;
      }
      if (XlaDumpHloPipelineRe.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(XlaDumpHloPipelineRe);
      }
      if (XlaGpuStrictConvAlgorithmPicker != false) {
        size += 2 + 1;
      }
      if (XlaGpuEnableXlaRuntimeExecutable != false) {
        size += 2 + 1;
      }
      if (XlaGpuNcclTerminationTimeoutSeconds != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(XlaGpuNcclTerminationTimeoutSeconds);
      }
      if (XlaGpuEnableSharedConstants != false) {
        size += 2 + 1;
      }
      if (XlaGpuEnableCublaslt != false) {
        size += 2 + 1;
      }
      if (XlaGpuRedzoneScratchMaxMegabytes != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(XlaGpuRedzoneScratchMaxMegabytes);
      }
      if (XlaGpuSimplifyAllFpConversions != false) {
        size += 2 + 1;
      }
      if (XlaGpuNormalizeLayouts != false) {
        size += 2 + 1;
      }
      if (XlaCpuUseAcl != false) {
        size += 2 + 1;
      }
      if (XlaCpuStrictDotConvMath != false) {
        size += 2 + 1;
      }
      size += xlaBackendExtraOptions_.CalculateSize(_map_xlaBackendExtraOptions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DebugOptions other) {
      if (other == null) {
        return;
      }
      if (other.XlaHloGraphAddresses != false) {
        XlaHloGraphAddresses = other.XlaHloGraphAddresses;
      }
      if (other.XlaHloProfile != false) {
        XlaHloProfile = other.XlaHloProfile;
      }
      xlaDisableHloPasses_.Add(other.xlaDisableHloPasses_);
      xlaEnableHloPassesOnly_.Add(other.xlaEnableHloPassesOnly_);
      if (other.XlaDisableAllHloPasses != false) {
        XlaDisableAllHloPasses = other.XlaDisableAllHloPasses;
      }
      if (other.XlaBackendOptimizationLevel != 0) {
        XlaBackendOptimizationLevel = other.XlaBackendOptimizationLevel;
      }
      if (other.XlaEmbedIrInExecutable != false) {
        XlaEmbedIrInExecutable = other.XlaEmbedIrInExecutable;
      }
      if (other.XlaEliminateHloImplicitBroadcast != false) {
        XlaEliminateHloImplicitBroadcast = other.XlaEliminateHloImplicitBroadcast;
      }
      if (other.XlaCpuMultiThreadEigen != false) {
        XlaCpuMultiThreadEigen = other.XlaCpuMultiThreadEigen;
      }
      if (other.XlaGpuCudaDataDir.Length != 0) {
        XlaGpuCudaDataDir = other.XlaGpuCudaDataDir;
      }
      if (other.XlaGpuFtz != false) {
        XlaGpuFtz = other.XlaGpuFtz;
      }
      if (other.XlaLlvmEnableAliasScopeMetadata != false) {
        XlaLlvmEnableAliasScopeMetadata = other.XlaLlvmEnableAliasScopeMetadata;
      }
      if (other.XlaLlvmEnableNoaliasMetadata != false) {
        XlaLlvmEnableNoaliasMetadata = other.XlaLlvmEnableNoaliasMetadata;
      }
      if (other.XlaLlvmEnableInvariantLoadMetadata != false) {
        XlaLlvmEnableInvariantLoadMetadata = other.XlaLlvmEnableInvariantLoadMetadata;
      }
      if (other.XlaLlvmDisableExpensivePasses != false) {
        XlaLlvmDisableExpensivePasses = other.XlaLlvmDisableExpensivePasses;
      }
      if (other.XlaTestAllOutputLayouts != false) {
        XlaTestAllOutputLayouts = other.XlaTestAllOutputLayouts;
      }
      if (other.XlaTestAllInputLayouts != false) {
        XlaTestAllInputLayouts = other.XlaTestAllInputLayouts;
      }
      if (other.XlaHloGraphShardingColor != false) {
        XlaHloGraphShardingColor = other.XlaHloGraphShardingColor;
      }
      if (other.XlaCpuUseMklDnn != false) {
        XlaCpuUseMklDnn = other.XlaCpuUseMklDnn;
      }
      if (other.XlaCpuUseXlaRuntime != false) {
        XlaCpuUseXlaRuntime = other.XlaCpuUseXlaRuntime;
      }
      if (other.XlaGpuMaxKernelUnrollFactor != 0) {
        XlaGpuMaxKernelUnrollFactor = other.XlaGpuMaxKernelUnrollFactor;
      }
      if (other.XlaCpuEnableFastMath != false) {
        XlaCpuEnableFastMath = other.XlaCpuEnableFastMath;
      }
      if (other.XlaCpuFastMathHonorNans != false) {
        XlaCpuFastMathHonorNans = other.XlaCpuFastMathHonorNans;
      }
      if (other.XlaCpuFastMathHonorInfs != false) {
        XlaCpuFastMathHonorInfs = other.XlaCpuFastMathHonorInfs;
      }
      if (other.XlaCpuFastMathHonorDivision != false) {
        XlaCpuFastMathHonorDivision = other.XlaCpuFastMathHonorDivision;
      }
      if (other.XlaCpuFastMathHonorFunctions != false) {
        XlaCpuFastMathHonorFunctions = other.XlaCpuFastMathHonorFunctions;
      }
      if (other.XlaCpuEnableFastMinMax != false) {
        XlaCpuEnableFastMinMax = other.XlaCpuEnableFastMinMax;
      }
      if (other.XlaGpuEnableFastMinMax != false) {
        XlaGpuEnableFastMinMax = other.XlaGpuEnableFastMinMax;
      }
      if (other.XlaAllowExcessPrecision != false) {
        XlaAllowExcessPrecision = other.XlaAllowExcessPrecision;
      }
      if (other.XlaGpuCrashOnVerificationFailures != false) {
        XlaGpuCrashOnVerificationFailures = other.XlaGpuCrashOnVerificationFailures;
      }
      if (other.XlaGpuAutotuneLevel != 0) {
        XlaGpuAutotuneLevel = other.XlaGpuAutotuneLevel;
      }
      if (other.XlaForceHostPlatformDeviceCount != 0) {
        XlaForceHostPlatformDeviceCount = other.XlaForceHostPlatformDeviceCount;
      }
      if (other.XlaGpuDisableGpuasmOptimizations != false) {
        XlaGpuDisableGpuasmOptimizations = other.XlaGpuDisableGpuasmOptimizations;
      }
      if (other.XlaGpuShapeChecks != global::Xla.DebugOptions.Types.ShapeChecks.Ignore) {
        XlaGpuShapeChecks = other.XlaGpuShapeChecks;
      }
      if (other.XlaCpuEnableMlirLowering != false) {
        XlaCpuEnableMlirLowering = other.XlaCpuEnableMlirLowering;
      }
      if (other.XlaGpuEnableMlirLowering != false) {
        XlaGpuEnableMlirLowering = other.XlaGpuEnableMlirLowering;
      }
      if (other.XlaHloEvaluatorUseFastPath != false) {
        XlaHloEvaluatorUseFastPath = other.XlaHloEvaluatorUseFastPath;
      }
      if (other.XlaAllowScalarIndexDynamicOps != false) {
        XlaAllowScalarIndexDynamicOps = other.XlaAllowScalarIndexDynamicOps;
      }
      if (other.XlaStepMarkerLocation != global::Xla.DebugOptions.Types.StepMarkerLocation.StepMarkAtEntry) {
        XlaStepMarkerLocation = other.XlaStepMarkerLocation;
      }
      if (other.XlaDumpTo.Length != 0) {
        XlaDumpTo = other.XlaDumpTo;
      }
      if (other.XlaDumpHloModuleRe.Length != 0) {
        XlaDumpHloModuleRe = other.XlaDumpHloModuleRe;
      }
      if (other.XlaDumpHloPassRe.Length != 0) {
        XlaDumpHloPassRe = other.XlaDumpHloPassRe;
      }
      if (other.XlaDumpHloAsText != false) {
        XlaDumpHloAsText = other.XlaDumpHloAsText;
      }
      if (other.XlaDumpHloAsProto != false) {
        XlaDumpHloAsProto = other.XlaDumpHloAsProto;
      }
      if (other.XlaDumpHloAsDot != false) {
        XlaDumpHloAsDot = other.XlaDumpHloAsDot;
      }
      if (other.XlaDumpHloAsUrl != false) {
        XlaDumpHloAsUrl = other.XlaDumpHloAsUrl;
      }
      if (other.XlaDumpHloAsHtml != false) {
        XlaDumpHloAsHtml = other.XlaDumpHloAsHtml;
      }
      if (other.XlaDumpFusionVisualization != false) {
        XlaDumpFusionVisualization = other.XlaDumpFusionVisualization;
      }
      if (other.XlaDumpHloSnapshots != false) {
        XlaDumpHloSnapshots = other.XlaDumpHloSnapshots;
      }
      if (other.XlaDumpIncludeTimestamp != false) {
        XlaDumpIncludeTimestamp = other.XlaDumpIncludeTimestamp;
      }
      if (other.XlaDumpMaxHloModules != 0) {
        XlaDumpMaxHloModules = other.XlaDumpMaxHloModules;
      }
      if (other.XlaDumpModuleMetadata != false) {
        XlaDumpModuleMetadata = other.XlaDumpModuleMetadata;
      }
      if (other.XlaDumpCompressProtos != false) {
        XlaDumpCompressProtos = other.XlaDumpCompressProtos;
      }
      if (other.XlaDumpHloAsLongText != false) {
        XlaDumpHloAsLongText = other.XlaDumpHloAsLongText;
      }
      if (other.XlaGpuForceConvNchw != false) {
        XlaGpuForceConvNchw = other.XlaGpuForceConvNchw;
      }
      if (other.XlaGpuForceConvNhwc != false) {
        XlaGpuForceConvNhwc = other.XlaGpuForceConvNhwc;
      }
      xlaGpuPtxFile_.Add(other.xlaGpuPtxFile_);
      if (other.XlaGpuDumpLlvmir != false) {
        XlaGpuDumpLlvmir = other.XlaGpuDumpLlvmir;
      }
      if (other.XlaGpuAlgorithmDenylistPath.Length != 0) {
        XlaGpuAlgorithmDenylistPath = other.XlaGpuAlgorithmDenylistPath;
      }
      if (other.XlaTpuDetectNan != false) {
        XlaTpuDetectNan = other.XlaTpuDetectNan;
      }
      if (other.XlaTpuDetectInf != false) {
        XlaTpuDetectInf = other.XlaTpuDetectInf;
      }
      if (other.XlaCpuEnableXprofTraceme != false) {
        XlaCpuEnableXprofTraceme = other.XlaCpuEnableXprofTraceme;
      }
      if (other.XlaGpuUnsafeFallbackToDriverOnPtxasNotFound != false) {
        XlaGpuUnsafeFallbackToDriverOnPtxasNotFound = other.XlaGpuUnsafeFallbackToDriverOnPtxasNotFound;
      }
      if (other.XlaGpuAsmExtraFlags.Length != 0) {
        XlaGpuAsmExtraFlags = other.XlaGpuAsmExtraFlags;
      }
      if (other.XlaMultiheapSizeConstraintPerHeap != 0) {
        XlaMultiheapSizeConstraintPerHeap = other.XlaMultiheapSizeConstraintPerHeap;
      }
      if (other.XlaDetailedLoggingAndDumping != false) {
        XlaDetailedLoggingAndDumping = other.XlaDetailedLoggingAndDumping;
      }
      if (other.XlaGpuForceCompilationParallelism != 0) {
        XlaGpuForceCompilationParallelism = other.XlaGpuForceCompilationParallelism;
      }
      if (other.XlaGpuDeterministicOps != false) {
        XlaGpuDeterministicOps = other.XlaGpuDeterministicOps;
      }
      xlaGpuLlvmIrFile_.Add(other.xlaGpuLlvmIrFile_);
      if (other.XlaGpuEnableAsyncAllReduce != false) {
        XlaGpuEnableAsyncAllReduce = other.XlaGpuEnableAsyncAllReduce;
      }
      if (other.XlaGpuAllReduceCombineThresholdBytes != 0L) {
        XlaGpuAllReduceCombineThresholdBytes = other.XlaGpuAllReduceCombineThresholdBytes;
      }
      if (other.XlaGpuAllReduceContiguous != false) {
        XlaGpuAllReduceContiguous = other.XlaGpuAllReduceContiguous;
      }
      if (other.XlaGpuAllReduceBlueconnectNumDevicesPerHost != 0) {
        XlaGpuAllReduceBlueconnectNumDevicesPerHost = other.XlaGpuAllReduceBlueconnectNumDevicesPerHost;
      }
      if (other.XlaGpuEnableCudnnFrontend != false) {
        XlaGpuEnableCudnnFrontend = other.XlaGpuEnableCudnnFrontend;
      }
      if (other.XlaDumpDisableMetadata != false) {
        XlaDumpDisableMetadata = other.XlaDumpDisableMetadata;
      }
      if (other.XlaDumpHloPipelineRe.Length != 0) {
        XlaDumpHloPipelineRe = other.XlaDumpHloPipelineRe;
      }
      if (other.XlaGpuStrictConvAlgorithmPicker != false) {
        XlaGpuStrictConvAlgorithmPicker = other.XlaGpuStrictConvAlgorithmPicker;
      }
      if (other.XlaGpuEnableXlaRuntimeExecutable != false) {
        XlaGpuEnableXlaRuntimeExecutable = other.XlaGpuEnableXlaRuntimeExecutable;
      }
      if (other.XlaGpuNcclTerminationTimeoutSeconds != 0L) {
        XlaGpuNcclTerminationTimeoutSeconds = other.XlaGpuNcclTerminationTimeoutSeconds;
      }
      if (other.XlaGpuEnableSharedConstants != false) {
        XlaGpuEnableSharedConstants = other.XlaGpuEnableSharedConstants;
      }
      if (other.XlaGpuEnableCublaslt != false) {
        XlaGpuEnableCublaslt = other.XlaGpuEnableCublaslt;
      }
      if (other.XlaGpuRedzoneScratchMaxMegabytes != 0L) {
        XlaGpuRedzoneScratchMaxMegabytes = other.XlaGpuRedzoneScratchMaxMegabytes;
      }
      if (other.XlaGpuSimplifyAllFpConversions != false) {
        XlaGpuSimplifyAllFpConversions = other.XlaGpuSimplifyAllFpConversions;
      }
      if (other.XlaGpuNormalizeLayouts != false) {
        XlaGpuNormalizeLayouts = other.XlaGpuNormalizeLayouts;
      }
      if (other.XlaCpuUseAcl != false) {
        XlaCpuUseAcl = other.XlaCpuUseAcl;
      }
      if (other.XlaCpuStrictDotConvMath != false) {
        XlaCpuStrictDotConvMath = other.XlaCpuStrictDotConvMath;
      }
      xlaBackendExtraOptions_.Add(other.xlaBackendExtraOptions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            XlaHloGraphAddresses = input.ReadBool();
            break;
          }
          case 72: {
            XlaHloProfile = input.ReadBool();
            break;
          }
          case 242: {
            xlaDisableHloPasses_.AddEntriesFrom(input, _repeated_xlaDisableHloPasses_codec);
            break;
          }
          case 248: {
            XlaBackendOptimizationLevel = input.ReadInt32();
            break;
          }
          case 264: {
            XlaEmbedIrInExecutable = input.ReadBool();
            break;
          }
          case 280: {
            XlaEliminateHloImplicitBroadcast = input.ReadBool();
            break;
          }
          case 480: {
            XlaCpuMultiThreadEigen = input.ReadBool();
            break;
          }
          case 490: {
            XlaGpuCudaDataDir = input.ReadString();
            break;
          }
          case 496: {
            XlaGpuFtz = input.ReadBool();
            break;
          }
          case 560: {
            XlaLlvmEnableAliasScopeMetadata = input.ReadBool();
            break;
          }
          case 568: {
            XlaLlvmEnableNoaliasMetadata = input.ReadBool();
            break;
          }
          case 576: {
            XlaLlvmEnableInvariantLoadMetadata = input.ReadBool();
            break;
          }
          case 584: {
            XlaLlvmDisableExpensivePasses = input.ReadBool();
            break;
          }
          case 720: {
            XlaTestAllOutputLayouts = input.ReadBool();
            break;
          }
          case 728: {
            XlaTestAllInputLayouts = input.ReadBool();
            break;
          }
          case 736: {
            XlaHloGraphShardingColor = input.ReadBool();
            break;
          }
          case 776: {
            XlaCpuUseMklDnn = input.ReadBool();
            break;
          }
          case 784: {
            XlaGpuMaxKernelUnrollFactor = input.ReadInt32();
            break;
          }
          case 792: {
            XlaCpuEnableFastMath = input.ReadBool();
            break;
          }
          case 800: {
            XlaGpuEnableFastMinMax = input.ReadBool();
            break;
          }
          case 808: {
            XlaGpuCrashOnVerificationFailures = input.ReadBool();
            break;
          }
          case 816: {
            XlaForceHostPlatformDeviceCount = input.ReadInt32();
            break;
          }
          case 824: {
            XlaGpuDisableGpuasmOptimizations = input.ReadBool();
            break;
          }
          case 832: {
            XlaDisableAllHloPasses = input.ReadBool();
            break;
          }
          case 848: {
            XlaHloEvaluatorUseFastPath = input.ReadBool();
            break;
          }
          case 856: {
            XlaAllowScalarIndexDynamicOps = input.ReadBool();
            break;
          }
          case 864: {
            XlaStepMarkerLocation = (global::Xla.DebugOptions.Types.StepMarkerLocation) input.ReadEnum();
            break;
          }
          case 874: {
            XlaDumpTo = input.ReadString();
            break;
          }
          case 882: {
            XlaDumpHloModuleRe = input.ReadString();
            break;
          }
          case 890: {
            XlaDumpHloPassRe = input.ReadString();
            break;
          }
          case 896: {
            XlaDumpHloAsText = input.ReadBool();
            break;
          }
          case 904: {
            XlaDumpHloAsProto = input.ReadBool();
            break;
          }
          case 912: {
            XlaDumpHloAsDot = input.ReadBool();
            break;
          }
          case 920: {
            XlaDumpHloAsUrl = input.ReadBool();
            break;
          }
          case 928: {
            XlaDumpHloAsHtml = input.ReadBool();
            break;
          }
          case 944: {
            XlaDumpHloSnapshots = input.ReadBool();
            break;
          }
          case 960: {
            XlaCpuFastMathHonorNans = input.ReadBool();
            break;
          }
          case 968: {
            XlaCpuFastMathHonorInfs = input.ReadBool();
            break;
          }
          case 976: {
            XlaAllowExcessPrecision = input.ReadBool();
            break;
          }
          case 984: {
            XlaGpuAutotuneLevel = input.ReadInt32();
            break;
          }
          case 994: {
            xlaEnableHloPassesOnly_.AddEntriesFrom(input, _repeated_xlaEnableHloPassesOnly_codec);
            break;
          }
          case 1000: {
            XlaGpuForceConvNchw = input.ReadBool();
            break;
          }
          case 1008: {
            XlaCpuFastMathHonorDivision = input.ReadBool();
            break;
          }
          case 1018: {
            xlaGpuPtxFile_.AddEntriesFrom(input, _repeated_xlaGpuPtxFile_codec);
            break;
          }
          case 1026: {
            XlaGpuAlgorithmDenylistPath = input.ReadString();
            break;
          }
          case 1032: {
            XlaCpuFastMathHonorFunctions = input.ReadBool();
            break;
          }
          case 1048: {
            XlaDumpIncludeTimestamp = input.ReadBool();
            break;
          }
          case 1056: {
            XlaDumpMaxHloModules = input.ReadInt32();
            break;
          }
          case 1080: {
            XlaTpuDetectNan = input.ReadBool();
            break;
          }
          case 1088: {
            XlaTpuDetectInf = input.ReadBool();
            break;
          }
          case 1096: {
            XlaCpuEnableXprofTraceme = input.ReadBool();
            break;
          }
          case 1104: {
            XlaGpuUnsafeFallbackToDriverOnPtxasNotFound = input.ReadBool();
            break;
          }
          case 1120: {
            XlaCpuEnableFastMinMax = input.ReadBool();
            break;
          }
          case 1130: {
            XlaGpuAsmExtraFlags = input.ReadString();
            break;
          }
          case 1136: {
            XlaMultiheapSizeConstraintPerHeap = input.ReadInt32();
            break;
          }
          case 1144: {
            XlaDetailedLoggingAndDumping = input.ReadBool();
            break;
          }
          case 1152: {
            XlaDumpModuleMetadata = input.ReadBool();
            break;
          }
          case 1168: {
            XlaGpuForceConvNhwc = input.ReadBool();
            break;
          }
          case 1176: {
            XlaGpuForceCompilationParallelism = input.ReadInt32();
            break;
          }
          case 1184: {
            XlaGpuDeterministicOps = input.ReadBool();
            break;
          }
          case 1192: {
            XlaDumpFusionVisualization = input.ReadBool();
            break;
          }
          case 1202: {
            xlaGpuLlvmIrFile_.AddEntriesFrom(input, _repeated_xlaGpuLlvmIrFile_codec);
            break;
          }
          case 1208: {
            XlaDumpCompressProtos = input.ReadBool();
            break;
          }
          case 1216: {
            XlaGpuEnableAsyncAllReduce = input.ReadBool();
            break;
          }
          case 1224: {
            XlaDumpDisableMetadata = input.ReadBool();
            break;
          }
          case 1234: {
            XlaDumpHloPipelineRe = input.ReadString();
            break;
          }
          case 1240: {
            XlaGpuDumpLlvmir = input.ReadBool();
            break;
          }
          case 1248: {
            XlaGpuStrictConvAlgorithmPicker = input.ReadBool();
            break;
          }
          case 1256: {
            XlaGpuAllReduceCombineThresholdBytes = input.ReadInt64();
            break;
          }
          case 1264: {
            XlaGpuAllReduceContiguous = input.ReadBool();
            break;
          }
          case 1272: {
            XlaGpuAllReduceBlueconnectNumDevicesPerHost = input.ReadInt32();
            break;
          }
          case 1280: {
            XlaGpuEnableCudnnFrontend = input.ReadBool();
            break;
          }
          case 1304: {
            XlaGpuNcclTerminationTimeoutSeconds = input.ReadInt64();
            break;
          }
          case 1312: {
            XlaDumpHloAsLongText = input.ReadBool();
            break;
          }
          case 1320: {
            XlaGpuEnableSharedConstants = input.ReadBool();
            break;
          }
          case 1328: {
            XlaGpuEnableCublaslt = input.ReadBool();
            break;
          }
          case 1336: {
            XlaGpuRedzoneScratchMaxMegabytes = input.ReadInt64();
            break;
          }
          case 1344: {
            XlaGpuSimplifyAllFpConversions = input.ReadBool();
            break;
          }
          case 1352: {
            XlaGpuEnableXlaRuntimeExecutable = input.ReadBool();
            break;
          }
          case 1360: {
            XlaGpuShapeChecks = (global::Xla.DebugOptions.Types.ShapeChecks) input.ReadEnum();
            break;
          }
          case 1368: {
            XlaCpuEnableMlirLowering = input.ReadBool();
            break;
          }
          case 1376: {
            XlaGpuNormalizeLayouts = input.ReadBool();
            break;
          }
          case 1384: {
            XlaGpuEnableMlirLowering = input.ReadBool();
            break;
          }
          case 1392: {
            XlaCpuUseAcl = input.ReadBool();
            break;
          }
          case 1400: {
            XlaCpuStrictDotConvMath = input.ReadBool();
            break;
          }
          case 1416: {
            XlaCpuUseXlaRuntime = input.ReadBool();
            break;
          }
          case 4002: {
            xlaBackendExtraOptions_.AddEntriesFrom(input, _map_xlaBackendExtraOptions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            XlaHloGraphAddresses = input.ReadBool();
            break;
          }
          case 72: {
            XlaHloProfile = input.ReadBool();
            break;
          }
          case 242: {
            xlaDisableHloPasses_.AddEntriesFrom(ref input, _repeated_xlaDisableHloPasses_codec);
            break;
          }
          case 248: {
            XlaBackendOptimizationLevel = input.ReadInt32();
            break;
          }
          case 264: {
            XlaEmbedIrInExecutable = input.ReadBool();
            break;
          }
          case 280: {
            XlaEliminateHloImplicitBroadcast = input.ReadBool();
            break;
          }
          case 480: {
            XlaCpuMultiThreadEigen = input.ReadBool();
            break;
          }
          case 490: {
            XlaGpuCudaDataDir = input.ReadString();
            break;
          }
          case 496: {
            XlaGpuFtz = input.ReadBool();
            break;
          }
          case 560: {
            XlaLlvmEnableAliasScopeMetadata = input.ReadBool();
            break;
          }
          case 568: {
            XlaLlvmEnableNoaliasMetadata = input.ReadBool();
            break;
          }
          case 576: {
            XlaLlvmEnableInvariantLoadMetadata = input.ReadBool();
            break;
          }
          case 584: {
            XlaLlvmDisableExpensivePasses = input.ReadBool();
            break;
          }
          case 720: {
            XlaTestAllOutputLayouts = input.ReadBool();
            break;
          }
          case 728: {
            XlaTestAllInputLayouts = input.ReadBool();
            break;
          }
          case 736: {
            XlaHloGraphShardingColor = input.ReadBool();
            break;
          }
          case 776: {
            XlaCpuUseMklDnn = input.ReadBool();
            break;
          }
          case 784: {
            XlaGpuMaxKernelUnrollFactor = input.ReadInt32();
            break;
          }
          case 792: {
            XlaCpuEnableFastMath = input.ReadBool();
            break;
          }
          case 800: {
            XlaGpuEnableFastMinMax = input.ReadBool();
            break;
          }
          case 808: {
            XlaGpuCrashOnVerificationFailures = input.ReadBool();
            break;
          }
          case 816: {
            XlaForceHostPlatformDeviceCount = input.ReadInt32();
            break;
          }
          case 824: {
            XlaGpuDisableGpuasmOptimizations = input.ReadBool();
            break;
          }
          case 832: {
            XlaDisableAllHloPasses = input.ReadBool();
            break;
          }
          case 848: {
            XlaHloEvaluatorUseFastPath = input.ReadBool();
            break;
          }
          case 856: {
            XlaAllowScalarIndexDynamicOps = input.ReadBool();
            break;
          }
          case 864: {
            XlaStepMarkerLocation = (global::Xla.DebugOptions.Types.StepMarkerLocation) input.ReadEnum();
            break;
          }
          case 874: {
            XlaDumpTo = input.ReadString();
            break;
          }
          case 882: {
            XlaDumpHloModuleRe = input.ReadString();
            break;
          }
          case 890: {
            XlaDumpHloPassRe = input.ReadString();
            break;
          }
          case 896: {
            XlaDumpHloAsText = input.ReadBool();
            break;
          }
          case 904: {
            XlaDumpHloAsProto = input.ReadBool();
            break;
          }
          case 912: {
            XlaDumpHloAsDot = input.ReadBool();
            break;
          }
          case 920: {
            XlaDumpHloAsUrl = input.ReadBool();
            break;
          }
          case 928: {
            XlaDumpHloAsHtml = input.ReadBool();
            break;
          }
          case 944: {
            XlaDumpHloSnapshots = input.ReadBool();
            break;
          }
          case 960: {
            XlaCpuFastMathHonorNans = input.ReadBool();
            break;
          }
          case 968: {
            XlaCpuFastMathHonorInfs = input.ReadBool();
            break;
          }
          case 976: {
            XlaAllowExcessPrecision = input.ReadBool();
            break;
          }
          case 984: {
            XlaGpuAutotuneLevel = input.ReadInt32();
            break;
          }
          case 994: {
            xlaEnableHloPassesOnly_.AddEntriesFrom(ref input, _repeated_xlaEnableHloPassesOnly_codec);
            break;
          }
          case 1000: {
            XlaGpuForceConvNchw = input.ReadBool();
            break;
          }
          case 1008: {
            XlaCpuFastMathHonorDivision = input.ReadBool();
            break;
          }
          case 1018: {
            xlaGpuPtxFile_.AddEntriesFrom(ref input, _repeated_xlaGpuPtxFile_codec);
            break;
          }
          case 1026: {
            XlaGpuAlgorithmDenylistPath = input.ReadString();
            break;
          }
          case 1032: {
            XlaCpuFastMathHonorFunctions = input.ReadBool();
            break;
          }
          case 1048: {
            XlaDumpIncludeTimestamp = input.ReadBool();
            break;
          }
          case 1056: {
            XlaDumpMaxHloModules = input.ReadInt32();
            break;
          }
          case 1080: {
            XlaTpuDetectNan = input.ReadBool();
            break;
          }
          case 1088: {
            XlaTpuDetectInf = input.ReadBool();
            break;
          }
          case 1096: {
            XlaCpuEnableXprofTraceme = input.ReadBool();
            break;
          }
          case 1104: {
            XlaGpuUnsafeFallbackToDriverOnPtxasNotFound = input.ReadBool();
            break;
          }
          case 1120: {
            XlaCpuEnableFastMinMax = input.ReadBool();
            break;
          }
          case 1130: {
            XlaGpuAsmExtraFlags = input.ReadString();
            break;
          }
          case 1136: {
            XlaMultiheapSizeConstraintPerHeap = input.ReadInt32();
            break;
          }
          case 1144: {
            XlaDetailedLoggingAndDumping = input.ReadBool();
            break;
          }
          case 1152: {
            XlaDumpModuleMetadata = input.ReadBool();
            break;
          }
          case 1168: {
            XlaGpuForceConvNhwc = input.ReadBool();
            break;
          }
          case 1176: {
            XlaGpuForceCompilationParallelism = input.ReadInt32();
            break;
          }
          case 1184: {
            XlaGpuDeterministicOps = input.ReadBool();
            break;
          }
          case 1192: {
            XlaDumpFusionVisualization = input.ReadBool();
            break;
          }
          case 1202: {
            xlaGpuLlvmIrFile_.AddEntriesFrom(ref input, _repeated_xlaGpuLlvmIrFile_codec);
            break;
          }
          case 1208: {
            XlaDumpCompressProtos = input.ReadBool();
            break;
          }
          case 1216: {
            XlaGpuEnableAsyncAllReduce = input.ReadBool();
            break;
          }
          case 1224: {
            XlaDumpDisableMetadata = input.ReadBool();
            break;
          }
          case 1234: {
            XlaDumpHloPipelineRe = input.ReadString();
            break;
          }
          case 1240: {
            XlaGpuDumpLlvmir = input.ReadBool();
            break;
          }
          case 1248: {
            XlaGpuStrictConvAlgorithmPicker = input.ReadBool();
            break;
          }
          case 1256: {
            XlaGpuAllReduceCombineThresholdBytes = input.ReadInt64();
            break;
          }
          case 1264: {
            XlaGpuAllReduceContiguous = input.ReadBool();
            break;
          }
          case 1272: {
            XlaGpuAllReduceBlueconnectNumDevicesPerHost = input.ReadInt32();
            break;
          }
          case 1280: {
            XlaGpuEnableCudnnFrontend = input.ReadBool();
            break;
          }
          case 1304: {
            XlaGpuNcclTerminationTimeoutSeconds = input.ReadInt64();
            break;
          }
          case 1312: {
            XlaDumpHloAsLongText = input.ReadBool();
            break;
          }
          case 1320: {
            XlaGpuEnableSharedConstants = input.ReadBool();
            break;
          }
          case 1328: {
            XlaGpuEnableCublaslt = input.ReadBool();
            break;
          }
          case 1336: {
            XlaGpuRedzoneScratchMaxMegabytes = input.ReadInt64();
            break;
          }
          case 1344: {
            XlaGpuSimplifyAllFpConversions = input.ReadBool();
            break;
          }
          case 1352: {
            XlaGpuEnableXlaRuntimeExecutable = input.ReadBool();
            break;
          }
          case 1360: {
            XlaGpuShapeChecks = (global::Xla.DebugOptions.Types.ShapeChecks) input.ReadEnum();
            break;
          }
          case 1368: {
            XlaCpuEnableMlirLowering = input.ReadBool();
            break;
          }
          case 1376: {
            XlaGpuNormalizeLayouts = input.ReadBool();
            break;
          }
          case 1384: {
            XlaGpuEnableMlirLowering = input.ReadBool();
            break;
          }
          case 1392: {
            XlaCpuUseAcl = input.ReadBool();
            break;
          }
          case 1400: {
            XlaCpuStrictDotConvMath = input.ReadBool();
            break;
          }
          case 1416: {
            XlaCpuUseXlaRuntime = input.ReadBool();
            break;
          }
          case 4002: {
            xlaBackendExtraOptions_.AddEntriesFrom(ref input, _map_xlaBackendExtraOptions_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DebugOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ShapeChecks {
        /// <summary>
        /// Do not insert any shape checks for dynamically shaped operations; output
        /// buffers might contain garbage data if shapes don't match.
        /// </summary>
        [pbr::OriginalName("IGNORE")] Ignore = 0,
        /// <summary>
        /// Check shapes at runtime, will insert an extra synchronization if shapes
        /// cannot be proven correct at compile time.
        /// </summary>
        [pbr::OriginalName("RUNTIME")] Runtime = 1,
        /// <summary>
        /// Will refuse to compile any program where shape correctness can not be
        /// established at compile time.
        /// </summary>
        [pbr::OriginalName("COMPILE_TIME")] CompileTime = 2,
      }

      public enum StepMarkerLocation {
        /// <summary>
        /// Generate a step marker at the program entry. This handles the case where
        /// each step is done by one or multiple program execution(s). Only the first
        /// program will be tagged for generating a step marker at the program entry.
        /// This is the default.
        /// </summary>
        [pbr::OriginalName("STEP_MARK_AT_ENTRY")] StepMarkAtEntry = 0,
        /// <summary>
        /// Generate a step marker at each iteration of the top level while loop,
        /// which is assumed to be a training loop.
        /// </summary>
        [pbr::OriginalName("STEP_MARK_AT_TOP_LEVEL_WHILE_LOOP")] StepMarkAtTopLevelWhileLoop = 1,
        /// <summary>
        /// Generate a step marker at each iteration of the second level while loops,
        /// which is assumed to be a training or eval loop.
        /// </summary>
        [pbr::OriginalName("STEP_MARK_AT_SECOND_LEVEL_WHILE_LOOP")] StepMarkAtSecondLevelWhileLoop = 3,
        /// <summary>
        /// No step marker generated.
        /// </summary>
        [pbr::OriginalName("STEP_MARK_NONE")] StepMarkNone = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// These settings control how XLA compiles and/or runs code.  Not all settings
  /// will have an effect on every platform.
  ///
  /// When adding new fields, keep in mind that boolean fields default to false.
  /// </summary>
  public sealed partial class ExecutionOptions : pb::IMessage<ExecutionOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecutionOptions> _parser = new pb::MessageParser<ExecutionOptions>(() => new ExecutionOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExecutionOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutionOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutionOptions(ExecutionOptions other) : this() {
      shapeWithOutputLayout_ = other.shapeWithOutputLayout_ != null ? other.shapeWithOutputLayout_.Clone() : null;
      seed_ = other.seed_;
      debugOptions_ = other.debugOptions_ != null ? other.debugOptions_.Clone() : null;
      deviceHandles_ = other.deviceHandles_.Clone();
      numReplicas_ = other.numReplicas_;
      deviceAssignment_ = other.deviceAssignment_ != null ? other.deviceAssignment_.Clone() : null;
      aliasPassthroughParams_ = other.aliasPassthroughParams_;
      numPartitions_ = other.numPartitions_;
      launchId_ = other.launchId_;
      useSpmdPartitioning_ = other.useSpmdPartitioning_;
      useAutoSpmdPartitioning_ = other.useAutoSpmdPartitioning_;
      autoSpmdPartitioningMeshShape_ = other.autoSpmdPartitioningMeshShape_.Clone();
      autoSpmdPartitioningMeshIds_ = other.autoSpmdPartitioningMeshIds_.Clone();
      deduplicateHlo_ = other.deduplicateHlo_;
      allowSpmdShardingPropagationToOutput_ = other.allowSpmdShardingPropagationToOutput_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutionOptions Clone() {
      return new ExecutionOptions(this);
    }

    /// <summary>Field number for the "shape_with_output_layout" field.</summary>
    public const int ShapeWithOutputLayoutFieldNumber = 2;
    private global::Xla.ShapeProto shapeWithOutputLayout_;
    /// <summary>
    /// This optional field's layout is used as a hint when storing the output of
    /// this computation.  Subsequent transfers of this output array to the client
    /// may be faster when using this layout.
    ///
    /// We use a Shape here to accommodate computations that return a tuple.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ShapeProto ShapeWithOutputLayout {
      get { return shapeWithOutputLayout_; }
      set {
        shapeWithOutputLayout_ = value;
      }
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 3;
    private ulong seed_;
    /// <summary>
    /// Used to seed random-number generators used in this computation.  If this is
    /// 0, we generate a seed ourselves.
    ///
    /// TODO(b/32083678): Changing the seed unnecessarily forces a recompilation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    /// <summary>Field number for the "debug_options" field.</summary>
    public const int DebugOptionsFieldNumber = 4;
    private global::Xla.DebugOptions debugOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.DebugOptions DebugOptions {
      get { return debugOptions_; }
      set {
        debugOptions_ = value;
      }
    }

    /// <summary>Field number for the "device_handles" field.</summary>
    public const int DeviceHandlesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Xla.DeviceHandle> _repeated_deviceHandles_codec
        = pb::FieldCodec.ForMessage(42, global::Xla.DeviceHandle.Parser);
    private readonly pbc::RepeatedField<global::Xla.DeviceHandle> deviceHandles_ = new pbc::RepeatedField<global::Xla.DeviceHandle>();
    /// <summary>
    /// This optional field specifies a particular set of devices to run the
    /// computation on. The computation will be partitioned across these devices.
    /// If not provided, the default device will be chosen.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xla.DeviceHandle> DeviceHandles {
      get { return deviceHandles_; }
    }

    /// <summary>Field number for the "num_replicas" field.</summary>
    public const int NumReplicasFieldNumber = 6;
    private int numReplicas_;
    /// <summary>
    /// Number of replicas of the computation to run. If zero, uses the default
    /// number of replicas for the XLA service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumReplicas {
      get { return numReplicas_; }
      set {
        numReplicas_ = value;
      }
    }

    /// <summary>Field number for the "device_assignment" field.</summary>
    public const int DeviceAssignmentFieldNumber = 7;
    private global::Xla.DeviceAssignmentProto deviceAssignment_;
    /// <summary>
    /// This optional field specifies the device assignment if known at compile
    /// time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.DeviceAssignmentProto DeviceAssignment {
      get { return deviceAssignment_; }
      set {
        deviceAssignment_ = value;
      }
    }

    /// <summary>Field number for the "alias_passthrough_params" field.</summary>
    public const int AliasPassthroughParamsFieldNumber = 8;
    private bool aliasPassthroughParams_;
    /// <summary>
    /// Alias input and output buffers for parameters that are passed-through XLA
    /// modules without being changed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AliasPassthroughParams {
      get { return aliasPassthroughParams_; }
      set {
        aliasPassthroughParams_ = value;
      }
    }

    /// <summary>Field number for the "num_partitions" field.</summary>
    public const int NumPartitionsFieldNumber = 9;
    private int numPartitions_;
    /// <summary>
    /// Number of partitions of the computation to run (model parallelism).
    /// If zero, uses the default number of partitions for the XLA service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumPartitions {
      get { return numPartitions_; }
      set {
        numPartitions_ = value;
      }
    }

    /// <summary>Field number for the "launch_id" field.</summary>
    public const int LaunchIdFieldNumber = 10;
    private int launchId_;
    /// <summary>
    /// Used to identify a set of programs that should be launch together.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LaunchId {
      get { return launchId_; }
      set {
        launchId_ = value;
      }
    }

    /// <summary>Field number for the "use_spmd_partitioning" field.</summary>
    public const int UseSpmdPartitioningFieldNumber = 11;
    private bool useSpmdPartitioning_;
    /// <summary>
    /// Indicates whether to use SPMD (true) or MPMD (false) partitioning when
    /// num_partitions > 1 and XLA is requested to partition the input program.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseSpmdPartitioning {
      get { return useSpmdPartitioning_; }
      set {
        useSpmdPartitioning_ = value;
      }
    }

    /// <summary>Field number for the "use_auto_spmd_partitioning" field.</summary>
    public const int UseAutoSpmdPartitioningFieldNumber = 15;
    private bool useAutoSpmdPartitioning_;
    /// <summary>
    /// Whether to automatically generate XLA shardings for SPMD partitioner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseAutoSpmdPartitioning {
      get { return useAutoSpmdPartitioning_; }
      set {
        useAutoSpmdPartitioning_ = value;
      }
    }

    /// <summary>Field number for the "auto_spmd_partitioning_mesh_shape" field.</summary>
    public const int AutoSpmdPartitioningMeshShapeFieldNumber = 16;
    private static readonly pb::FieldCodec<long> _repeated_autoSpmdPartitioningMeshShape_codec
        = pb::FieldCodec.ForInt64(130);
    private readonly pbc::RepeatedField<long> autoSpmdPartitioningMeshShape_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Device mesh shape used to create the sharding search space when
    /// use_auto_spmd_partitioning=true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> AutoSpmdPartitioningMeshShape {
      get { return autoSpmdPartitioningMeshShape_; }
    }

    /// <summary>Field number for the "auto_spmd_partitioning_mesh_ids" field.</summary>
    public const int AutoSpmdPartitioningMeshIdsFieldNumber = 17;
    private static readonly pb::FieldCodec<long> _repeated_autoSpmdPartitioningMeshIds_codec
        = pb::FieldCodec.ForInt64(138);
    private readonly pbc::RepeatedField<long> autoSpmdPartitioningMeshIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Device mesh ids compatible with the above mesh_shape used when
    /// use_auto_spmd_partitioning=true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> AutoSpmdPartitioningMeshIds {
      get { return autoSpmdPartitioningMeshIds_; }
    }

    /// <summary>Field number for the "deduplicate_hlo" field.</summary>
    public const int DeduplicateHloFieldNumber = 12;
    private bool deduplicateHlo_;
    /// <summary>
    /// If set, deduplicate hlo into function calls to reduce binary size. Only
    /// works on TPU.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DeduplicateHlo {
      get { return deduplicateHlo_; }
      set {
        deduplicateHlo_ = value;
      }
    }

    /// <summary>Field number for the "allow_spmd_sharding_propagation_to_output" field.</summary>
    public const int AllowSpmdShardingPropagationToOutputFieldNumber = 14;
    private bool allowSpmdShardingPropagationToOutput_;
    /// <summary>
    /// Allows sharding propagation to propagate to the outputs. This changes the
    /// output shape of the computation (which is undesirable), but it can be used
    /// to allow to run partial compilation to determine what would be the output
    /// sharding of a computation if XLA would be allowed to propagate the sharding
    /// which can be used by higher level framework as a way to query intermediate
    /// sharding of operations when multiple computation would be chained and
    /// merged together.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AllowSpmdShardingPropagationToOutput {
      get { return allowSpmdShardingPropagationToOutput_; }
      set {
        allowSpmdShardingPropagationToOutput_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExecutionOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExecutionOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ShapeWithOutputLayout, other.ShapeWithOutputLayout)) return false;
      if (Seed != other.Seed) return false;
      if (!object.Equals(DebugOptions, other.DebugOptions)) return false;
      if(!deviceHandles_.Equals(other.deviceHandles_)) return false;
      if (NumReplicas != other.NumReplicas) return false;
      if (!object.Equals(DeviceAssignment, other.DeviceAssignment)) return false;
      if (AliasPassthroughParams != other.AliasPassthroughParams) return false;
      if (NumPartitions != other.NumPartitions) return false;
      if (LaunchId != other.LaunchId) return false;
      if (UseSpmdPartitioning != other.UseSpmdPartitioning) return false;
      if (UseAutoSpmdPartitioning != other.UseAutoSpmdPartitioning) return false;
      if(!autoSpmdPartitioningMeshShape_.Equals(other.autoSpmdPartitioningMeshShape_)) return false;
      if(!autoSpmdPartitioningMeshIds_.Equals(other.autoSpmdPartitioningMeshIds_)) return false;
      if (DeduplicateHlo != other.DeduplicateHlo) return false;
      if (AllowSpmdShardingPropagationToOutput != other.AllowSpmdShardingPropagationToOutput) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (shapeWithOutputLayout_ != null) hash ^= ShapeWithOutputLayout.GetHashCode();
      if (Seed != 0UL) hash ^= Seed.GetHashCode();
      if (debugOptions_ != null) hash ^= DebugOptions.GetHashCode();
      hash ^= deviceHandles_.GetHashCode();
      if (NumReplicas != 0) hash ^= NumReplicas.GetHashCode();
      if (deviceAssignment_ != null) hash ^= DeviceAssignment.GetHashCode();
      if (AliasPassthroughParams != false) hash ^= AliasPassthroughParams.GetHashCode();
      if (NumPartitions != 0) hash ^= NumPartitions.GetHashCode();
      if (LaunchId != 0) hash ^= LaunchId.GetHashCode();
      if (UseSpmdPartitioning != false) hash ^= UseSpmdPartitioning.GetHashCode();
      if (UseAutoSpmdPartitioning != false) hash ^= UseAutoSpmdPartitioning.GetHashCode();
      hash ^= autoSpmdPartitioningMeshShape_.GetHashCode();
      hash ^= autoSpmdPartitioningMeshIds_.GetHashCode();
      if (DeduplicateHlo != false) hash ^= DeduplicateHlo.GetHashCode();
      if (AllowSpmdShardingPropagationToOutput != false) hash ^= AllowSpmdShardingPropagationToOutput.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (shapeWithOutputLayout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ShapeWithOutputLayout);
      }
      if (Seed != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Seed);
      }
      if (debugOptions_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DebugOptions);
      }
      deviceHandles_.WriteTo(output, _repeated_deviceHandles_codec);
      if (NumReplicas != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(NumReplicas);
      }
      if (deviceAssignment_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DeviceAssignment);
      }
      if (AliasPassthroughParams != false) {
        output.WriteRawTag(64);
        output.WriteBool(AliasPassthroughParams);
      }
      if (NumPartitions != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(NumPartitions);
      }
      if (LaunchId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(LaunchId);
      }
      if (UseSpmdPartitioning != false) {
        output.WriteRawTag(88);
        output.WriteBool(UseSpmdPartitioning);
      }
      if (DeduplicateHlo != false) {
        output.WriteRawTag(96);
        output.WriteBool(DeduplicateHlo);
      }
      if (AllowSpmdShardingPropagationToOutput != false) {
        output.WriteRawTag(112);
        output.WriteBool(AllowSpmdShardingPropagationToOutput);
      }
      if (UseAutoSpmdPartitioning != false) {
        output.WriteRawTag(120);
        output.WriteBool(UseAutoSpmdPartitioning);
      }
      autoSpmdPartitioningMeshShape_.WriteTo(output, _repeated_autoSpmdPartitioningMeshShape_codec);
      autoSpmdPartitioningMeshIds_.WriteTo(output, _repeated_autoSpmdPartitioningMeshIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (shapeWithOutputLayout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ShapeWithOutputLayout);
      }
      if (Seed != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Seed);
      }
      if (debugOptions_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DebugOptions);
      }
      deviceHandles_.WriteTo(ref output, _repeated_deviceHandles_codec);
      if (NumReplicas != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(NumReplicas);
      }
      if (deviceAssignment_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DeviceAssignment);
      }
      if (AliasPassthroughParams != false) {
        output.WriteRawTag(64);
        output.WriteBool(AliasPassthroughParams);
      }
      if (NumPartitions != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(NumPartitions);
      }
      if (LaunchId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(LaunchId);
      }
      if (UseSpmdPartitioning != false) {
        output.WriteRawTag(88);
        output.WriteBool(UseSpmdPartitioning);
      }
      if (DeduplicateHlo != false) {
        output.WriteRawTag(96);
        output.WriteBool(DeduplicateHlo);
      }
      if (AllowSpmdShardingPropagationToOutput != false) {
        output.WriteRawTag(112);
        output.WriteBool(AllowSpmdShardingPropagationToOutput);
      }
      if (UseAutoSpmdPartitioning != false) {
        output.WriteRawTag(120);
        output.WriteBool(UseAutoSpmdPartitioning);
      }
      autoSpmdPartitioningMeshShape_.WriteTo(ref output, _repeated_autoSpmdPartitioningMeshShape_codec);
      autoSpmdPartitioningMeshIds_.WriteTo(ref output, _repeated_autoSpmdPartitioningMeshIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (shapeWithOutputLayout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShapeWithOutputLayout);
      }
      if (Seed != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Seed);
      }
      if (debugOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DebugOptions);
      }
      size += deviceHandles_.CalculateSize(_repeated_deviceHandles_codec);
      if (NumReplicas != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumReplicas);
      }
      if (deviceAssignment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceAssignment);
      }
      if (AliasPassthroughParams != false) {
        size += 1 + 1;
      }
      if (NumPartitions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumPartitions);
      }
      if (LaunchId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LaunchId);
      }
      if (UseSpmdPartitioning != false) {
        size += 1 + 1;
      }
      if (UseAutoSpmdPartitioning != false) {
        size += 1 + 1;
      }
      size += autoSpmdPartitioningMeshShape_.CalculateSize(_repeated_autoSpmdPartitioningMeshShape_codec);
      size += autoSpmdPartitioningMeshIds_.CalculateSize(_repeated_autoSpmdPartitioningMeshIds_codec);
      if (DeduplicateHlo != false) {
        size += 1 + 1;
      }
      if (AllowSpmdShardingPropagationToOutput != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExecutionOptions other) {
      if (other == null) {
        return;
      }
      if (other.shapeWithOutputLayout_ != null) {
        if (shapeWithOutputLayout_ == null) {
          ShapeWithOutputLayout = new global::Xla.ShapeProto();
        }
        ShapeWithOutputLayout.MergeFrom(other.ShapeWithOutputLayout);
      }
      if (other.Seed != 0UL) {
        Seed = other.Seed;
      }
      if (other.debugOptions_ != null) {
        if (debugOptions_ == null) {
          DebugOptions = new global::Xla.DebugOptions();
        }
        DebugOptions.MergeFrom(other.DebugOptions);
      }
      deviceHandles_.Add(other.deviceHandles_);
      if (other.NumReplicas != 0) {
        NumReplicas = other.NumReplicas;
      }
      if (other.deviceAssignment_ != null) {
        if (deviceAssignment_ == null) {
          DeviceAssignment = new global::Xla.DeviceAssignmentProto();
        }
        DeviceAssignment.MergeFrom(other.DeviceAssignment);
      }
      if (other.AliasPassthroughParams != false) {
        AliasPassthroughParams = other.AliasPassthroughParams;
      }
      if (other.NumPartitions != 0) {
        NumPartitions = other.NumPartitions;
      }
      if (other.LaunchId != 0) {
        LaunchId = other.LaunchId;
      }
      if (other.UseSpmdPartitioning != false) {
        UseSpmdPartitioning = other.UseSpmdPartitioning;
      }
      if (other.UseAutoSpmdPartitioning != false) {
        UseAutoSpmdPartitioning = other.UseAutoSpmdPartitioning;
      }
      autoSpmdPartitioningMeshShape_.Add(other.autoSpmdPartitioningMeshShape_);
      autoSpmdPartitioningMeshIds_.Add(other.autoSpmdPartitioningMeshIds_);
      if (other.DeduplicateHlo != false) {
        DeduplicateHlo = other.DeduplicateHlo;
      }
      if (other.AllowSpmdShardingPropagationToOutput != false) {
        AllowSpmdShardingPropagationToOutput = other.AllowSpmdShardingPropagationToOutput;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (shapeWithOutputLayout_ == null) {
              ShapeWithOutputLayout = new global::Xla.ShapeProto();
            }
            input.ReadMessage(ShapeWithOutputLayout);
            break;
          }
          case 24: {
            Seed = input.ReadUInt64();
            break;
          }
          case 34: {
            if (debugOptions_ == null) {
              DebugOptions = new global::Xla.DebugOptions();
            }
            input.ReadMessage(DebugOptions);
            break;
          }
          case 42: {
            deviceHandles_.AddEntriesFrom(input, _repeated_deviceHandles_codec);
            break;
          }
          case 48: {
            NumReplicas = input.ReadInt32();
            break;
          }
          case 58: {
            if (deviceAssignment_ == null) {
              DeviceAssignment = new global::Xla.DeviceAssignmentProto();
            }
            input.ReadMessage(DeviceAssignment);
            break;
          }
          case 64: {
            AliasPassthroughParams = input.ReadBool();
            break;
          }
          case 72: {
            NumPartitions = input.ReadInt32();
            break;
          }
          case 80: {
            LaunchId = input.ReadInt32();
            break;
          }
          case 88: {
            UseSpmdPartitioning = input.ReadBool();
            break;
          }
          case 96: {
            DeduplicateHlo = input.ReadBool();
            break;
          }
          case 112: {
            AllowSpmdShardingPropagationToOutput = input.ReadBool();
            break;
          }
          case 120: {
            UseAutoSpmdPartitioning = input.ReadBool();
            break;
          }
          case 130:
          case 128: {
            autoSpmdPartitioningMeshShape_.AddEntriesFrom(input, _repeated_autoSpmdPartitioningMeshShape_codec);
            break;
          }
          case 138:
          case 136: {
            autoSpmdPartitioningMeshIds_.AddEntriesFrom(input, _repeated_autoSpmdPartitioningMeshIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (shapeWithOutputLayout_ == null) {
              ShapeWithOutputLayout = new global::Xla.ShapeProto();
            }
            input.ReadMessage(ShapeWithOutputLayout);
            break;
          }
          case 24: {
            Seed = input.ReadUInt64();
            break;
          }
          case 34: {
            if (debugOptions_ == null) {
              DebugOptions = new global::Xla.DebugOptions();
            }
            input.ReadMessage(DebugOptions);
            break;
          }
          case 42: {
            deviceHandles_.AddEntriesFrom(ref input, _repeated_deviceHandles_codec);
            break;
          }
          case 48: {
            NumReplicas = input.ReadInt32();
            break;
          }
          case 58: {
            if (deviceAssignment_ == null) {
              DeviceAssignment = new global::Xla.DeviceAssignmentProto();
            }
            input.ReadMessage(DeviceAssignment);
            break;
          }
          case 64: {
            AliasPassthroughParams = input.ReadBool();
            break;
          }
          case 72: {
            NumPartitions = input.ReadInt32();
            break;
          }
          case 80: {
            LaunchId = input.ReadInt32();
            break;
          }
          case 88: {
            UseSpmdPartitioning = input.ReadBool();
            break;
          }
          case 96: {
            DeduplicateHlo = input.ReadBool();
            break;
          }
          case 112: {
            AllowSpmdShardingPropagationToOutput = input.ReadBool();
            break;
          }
          case 120: {
            UseAutoSpmdPartitioning = input.ReadBool();
            break;
          }
          case 130:
          case 128: {
            autoSpmdPartitioningMeshShape_.AddEntriesFrom(ref input, _repeated_autoSpmdPartitioningMeshShape_codec);
            break;
          }
          case 138:
          case 136: {
            autoSpmdPartitioningMeshIds_.AddEntriesFrom(ref input, _repeated_autoSpmdPartitioningMeshIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetDeviceHandlesRequest : pb::IMessage<GetDeviceHandlesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDeviceHandlesRequest> _parser = new pb::MessageParser<GetDeviceHandlesRequest>(() => new GetDeviceHandlesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetDeviceHandlesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDeviceHandlesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDeviceHandlesRequest(GetDeviceHandlesRequest other) : this() {
      deviceCount_ = other.deviceCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDeviceHandlesRequest Clone() {
      return new GetDeviceHandlesRequest(this);
    }

    /// <summary>Field number for the "device_count" field.</summary>
    public const int DeviceCountFieldNumber = 1;
    private long deviceCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DeviceCount {
      get { return deviceCount_; }
      set {
        deviceCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetDeviceHandlesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetDeviceHandlesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceCount != other.DeviceCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceCount != 0L) hash ^= DeviceCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DeviceCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DeviceCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DeviceCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DeviceCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetDeviceHandlesRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeviceCount != 0L) {
        DeviceCount = other.DeviceCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeviceCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DeviceCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetDeviceHandlesResponse : pb::IMessage<GetDeviceHandlesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDeviceHandlesResponse> _parser = new pb::MessageParser<GetDeviceHandlesResponse>(() => new GetDeviceHandlesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetDeviceHandlesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDeviceHandlesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDeviceHandlesResponse(GetDeviceHandlesResponse other) : this() {
      deviceHandles_ = other.deviceHandles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDeviceHandlesResponse Clone() {
      return new GetDeviceHandlesResponse(this);
    }

    /// <summary>Field number for the "device_handles" field.</summary>
    public const int DeviceHandlesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Xla.DeviceHandle> _repeated_deviceHandles_codec
        = pb::FieldCodec.ForMessage(10, global::Xla.DeviceHandle.Parser);
    private readonly pbc::RepeatedField<global::Xla.DeviceHandle> deviceHandles_ = new pbc::RepeatedField<global::Xla.DeviceHandle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xla.DeviceHandle> DeviceHandles {
      get { return deviceHandles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetDeviceHandlesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetDeviceHandlesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!deviceHandles_.Equals(other.deviceHandles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= deviceHandles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      deviceHandles_.WriteTo(output, _repeated_deviceHandles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      deviceHandles_.WriteTo(ref output, _repeated_deviceHandles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += deviceHandles_.CalculateSize(_repeated_deviceHandles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetDeviceHandlesResponse other) {
      if (other == null) {
        return;
      }
      deviceHandles_.Add(other.deviceHandles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            deviceHandles_.AddEntriesFrom(input, _repeated_deviceHandles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            deviceHandles_.AddEntriesFrom(ref input, _repeated_deviceHandles_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TransferToClientRequest : pb::IMessage<TransferToClientRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferToClientRequest> _parser = new pb::MessageParser<TransferToClientRequest>(() => new TransferToClientRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TransferToClientRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToClientRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToClientRequest(TransferToClientRequest other) : this() {
      data_ = other.data_ != null ? other.data_.Clone() : null;
      shapeWithLayout_ = other.shapeWithLayout_ != null ? other.shapeWithLayout_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToClientRequest Clone() {
      return new TransferToClientRequest(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private global::Xla.GlobalDataHandle data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.GlobalDataHandle Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "shape_with_layout" field.</summary>
    public const int ShapeWithLayoutFieldNumber = 2;
    private global::Xla.ShapeProto shapeWithLayout_;
    /// <summary>
    /// This optional field directs the service to return the literal in this
    /// layout. A shape is used to hold the layout to accommodate tuples.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ShapeProto ShapeWithLayout {
      get { return shapeWithLayout_; }
      set {
        shapeWithLayout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TransferToClientRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TransferToClientRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Data, other.Data)) return false;
      if (!object.Equals(ShapeWithLayout, other.ShapeWithLayout)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (data_ != null) hash ^= Data.GetHashCode();
      if (shapeWithLayout_ != null) hash ^= ShapeWithLayout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (shapeWithLayout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ShapeWithLayout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (shapeWithLayout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ShapeWithLayout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (shapeWithLayout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShapeWithLayout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TransferToClientRequest other) {
      if (other == null) {
        return;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Xla.GlobalDataHandle();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.shapeWithLayout_ != null) {
        if (shapeWithLayout_ == null) {
          ShapeWithLayout = new global::Xla.ShapeProto();
        }
        ShapeWithLayout.MergeFrom(other.ShapeWithLayout);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(Data);
            break;
          }
          case 18: {
            if (shapeWithLayout_ == null) {
              ShapeWithLayout = new global::Xla.ShapeProto();
            }
            input.ReadMessage(ShapeWithLayout);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(Data);
            break;
          }
          case 18: {
            if (shapeWithLayout_ == null) {
              ShapeWithLayout = new global::Xla.ShapeProto();
            }
            input.ReadMessage(ShapeWithLayout);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TransferToClientResponse : pb::IMessage<TransferToClientResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferToClientResponse> _parser = new pb::MessageParser<TransferToClientResponse>(() => new TransferToClientResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TransferToClientResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToClientResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToClientResponse(TransferToClientResponse other) : this() {
      literal_ = other.literal_ != null ? other.literal_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToClientResponse Clone() {
      return new TransferToClientResponse(this);
    }

    /// <summary>Field number for the "literal" field.</summary>
    public const int LiteralFieldNumber = 1;
    private global::Xla.LiteralProto literal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.LiteralProto Literal {
      get { return literal_; }
      set {
        literal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TransferToClientResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TransferToClientResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Literal, other.Literal)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (literal_ != null) hash ^= Literal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (literal_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Literal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (literal_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Literal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (literal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Literal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TransferToClientResponse other) {
      if (other == null) {
        return;
      }
      if (other.literal_ != null) {
        if (literal_ == null) {
          Literal = new global::Xla.LiteralProto();
        }
        Literal.MergeFrom(other.Literal);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (literal_ == null) {
              Literal = new global::Xla.LiteralProto();
            }
            input.ReadMessage(Literal);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (literal_ == null) {
              Literal = new global::Xla.LiteralProto();
            }
            input.ReadMessage(Literal);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TransferToServerRequest : pb::IMessage<TransferToServerRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferToServerRequest> _parser = new pb::MessageParser<TransferToServerRequest>(() => new TransferToServerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TransferToServerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToServerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToServerRequest(TransferToServerRequest other) : this() {
      literal_ = other.literal_ != null ? other.literal_.Clone() : null;
      deviceHandle_ = other.deviceHandle_ != null ? other.deviceHandle_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToServerRequest Clone() {
      return new TransferToServerRequest(this);
    }

    /// <summary>Field number for the "literal" field.</summary>
    public const int LiteralFieldNumber = 1;
    private global::Xla.LiteralProto literal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.LiteralProto Literal {
      get { return literal_; }
      set {
        literal_ = value;
      }
    }

    /// <summary>Field number for the "device_handle" field.</summary>
    public const int DeviceHandleFieldNumber = 2;
    private global::Xla.DeviceHandle deviceHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.DeviceHandle DeviceHandle {
      get { return deviceHandle_; }
      set {
        deviceHandle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TransferToServerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TransferToServerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Literal, other.Literal)) return false;
      if (!object.Equals(DeviceHandle, other.DeviceHandle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (literal_ != null) hash ^= Literal.GetHashCode();
      if (deviceHandle_ != null) hash ^= DeviceHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (literal_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Literal);
      }
      if (deviceHandle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeviceHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (literal_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Literal);
      }
      if (deviceHandle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DeviceHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (literal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Literal);
      }
      if (deviceHandle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TransferToServerRequest other) {
      if (other == null) {
        return;
      }
      if (other.literal_ != null) {
        if (literal_ == null) {
          Literal = new global::Xla.LiteralProto();
        }
        Literal.MergeFrom(other.Literal);
      }
      if (other.deviceHandle_ != null) {
        if (deviceHandle_ == null) {
          DeviceHandle = new global::Xla.DeviceHandle();
        }
        DeviceHandle.MergeFrom(other.DeviceHandle);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (literal_ == null) {
              Literal = new global::Xla.LiteralProto();
            }
            input.ReadMessage(Literal);
            break;
          }
          case 18: {
            if (deviceHandle_ == null) {
              DeviceHandle = new global::Xla.DeviceHandle();
            }
            input.ReadMessage(DeviceHandle);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (literal_ == null) {
              Literal = new global::Xla.LiteralProto();
            }
            input.ReadMessage(Literal);
            break;
          }
          case 18: {
            if (deviceHandle_ == null) {
              DeviceHandle = new global::Xla.DeviceHandle();
            }
            input.ReadMessage(DeviceHandle);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TransferToServerResponse : pb::IMessage<TransferToServerResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferToServerResponse> _parser = new pb::MessageParser<TransferToServerResponse>(() => new TransferToServerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TransferToServerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToServerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToServerResponse(TransferToServerResponse other) : this() {
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToServerResponse Clone() {
      return new TransferToServerResponse(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private global::Xla.GlobalDataHandle data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.GlobalDataHandle Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TransferToServerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TransferToServerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TransferToServerResponse other) {
      if (other == null) {
        return;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Xla.GlobalDataHandle();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TransferToInfeedRequest : pb::IMessage<TransferToInfeedRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferToInfeedRequest> _parser = new pb::MessageParser<TransferToInfeedRequest>(() => new TransferToInfeedRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TransferToInfeedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToInfeedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToInfeedRequest(TransferToInfeedRequest other) : this() {
      literal_ = other.literal_ != null ? other.literal_.Clone() : null;
      replicaId_ = other.replicaId_;
      deviceHandle_ = other.deviceHandle_ != null ? other.deviceHandle_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToInfeedRequest Clone() {
      return new TransferToInfeedRequest(this);
    }

    /// <summary>Field number for the "literal" field.</summary>
    public const int LiteralFieldNumber = 1;
    private global::Xla.LiteralProto literal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.LiteralProto Literal {
      get { return literal_; }
      set {
        literal_ = value;
      }
    }

    /// <summary>Field number for the "replica_id" field.</summary>
    public const int ReplicaIdFieldNumber = 2;
    private long replicaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReplicaId {
      get { return replicaId_; }
      set {
        replicaId_ = value;
      }
    }

    /// <summary>Field number for the "device_handle" field.</summary>
    public const int DeviceHandleFieldNumber = 3;
    private global::Xla.DeviceHandle deviceHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.DeviceHandle DeviceHandle {
      get { return deviceHandle_; }
      set {
        deviceHandle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TransferToInfeedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TransferToInfeedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Literal, other.Literal)) return false;
      if (ReplicaId != other.ReplicaId) return false;
      if (!object.Equals(DeviceHandle, other.DeviceHandle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (literal_ != null) hash ^= Literal.GetHashCode();
      if (ReplicaId != 0L) hash ^= ReplicaId.GetHashCode();
      if (deviceHandle_ != null) hash ^= DeviceHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (literal_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Literal);
      }
      if (ReplicaId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ReplicaId);
      }
      if (deviceHandle_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DeviceHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (literal_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Literal);
      }
      if (ReplicaId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ReplicaId);
      }
      if (deviceHandle_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DeviceHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (literal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Literal);
      }
      if (ReplicaId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReplicaId);
      }
      if (deviceHandle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TransferToInfeedRequest other) {
      if (other == null) {
        return;
      }
      if (other.literal_ != null) {
        if (literal_ == null) {
          Literal = new global::Xla.LiteralProto();
        }
        Literal.MergeFrom(other.Literal);
      }
      if (other.ReplicaId != 0L) {
        ReplicaId = other.ReplicaId;
      }
      if (other.deviceHandle_ != null) {
        if (deviceHandle_ == null) {
          DeviceHandle = new global::Xla.DeviceHandle();
        }
        DeviceHandle.MergeFrom(other.DeviceHandle);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (literal_ == null) {
              Literal = new global::Xla.LiteralProto();
            }
            input.ReadMessage(Literal);
            break;
          }
          case 16: {
            ReplicaId = input.ReadInt64();
            break;
          }
          case 26: {
            if (deviceHandle_ == null) {
              DeviceHandle = new global::Xla.DeviceHandle();
            }
            input.ReadMessage(DeviceHandle);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (literal_ == null) {
              Literal = new global::Xla.LiteralProto();
            }
            input.ReadMessage(Literal);
            break;
          }
          case 16: {
            ReplicaId = input.ReadInt64();
            break;
          }
          case 26: {
            if (deviceHandle_ == null) {
              DeviceHandle = new global::Xla.DeviceHandle();
            }
            input.ReadMessage(DeviceHandle);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TransferToInfeedResponse : pb::IMessage<TransferToInfeedResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferToInfeedResponse> _parser = new pb::MessageParser<TransferToInfeedResponse>(() => new TransferToInfeedResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TransferToInfeedResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToInfeedResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToInfeedResponse(TransferToInfeedResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferToInfeedResponse Clone() {
      return new TransferToInfeedResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TransferToInfeedResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TransferToInfeedResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TransferToInfeedResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class TransferFromOutfeedRequest : pb::IMessage<TransferFromOutfeedRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferFromOutfeedRequest> _parser = new pb::MessageParser<TransferFromOutfeedRequest>(() => new TransferFromOutfeedRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TransferFromOutfeedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferFromOutfeedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferFromOutfeedRequest(TransferFromOutfeedRequest other) : this() {
      shapeWithLayout_ = other.shapeWithLayout_ != null ? other.shapeWithLayout_.Clone() : null;
      replicaId_ = other.replicaId_;
      deviceHandle_ = other.deviceHandle_ != null ? other.deviceHandle_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferFromOutfeedRequest Clone() {
      return new TransferFromOutfeedRequest(this);
    }

    /// <summary>Field number for the "shape_with_layout" field.</summary>
    public const int ShapeWithLayoutFieldNumber = 1;
    private global::Xla.ShapeProto shapeWithLayout_;
    /// <summary>
    /// This optional field directs the service to return the literal in this
    /// layout. A shape is used to hold the layout to accommodate tuples.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ShapeProto ShapeWithLayout {
      get { return shapeWithLayout_; }
      set {
        shapeWithLayout_ = value;
      }
    }

    /// <summary>Field number for the "replica_id" field.</summary>
    public const int ReplicaIdFieldNumber = 2;
    private long replicaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReplicaId {
      get { return replicaId_; }
      set {
        replicaId_ = value;
      }
    }

    /// <summary>Field number for the "device_handle" field.</summary>
    public const int DeviceHandleFieldNumber = 3;
    private global::Xla.DeviceHandle deviceHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.DeviceHandle DeviceHandle {
      get { return deviceHandle_; }
      set {
        deviceHandle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TransferFromOutfeedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TransferFromOutfeedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ShapeWithLayout, other.ShapeWithLayout)) return false;
      if (ReplicaId != other.ReplicaId) return false;
      if (!object.Equals(DeviceHandle, other.DeviceHandle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (shapeWithLayout_ != null) hash ^= ShapeWithLayout.GetHashCode();
      if (ReplicaId != 0L) hash ^= ReplicaId.GetHashCode();
      if (deviceHandle_ != null) hash ^= DeviceHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (shapeWithLayout_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ShapeWithLayout);
      }
      if (ReplicaId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ReplicaId);
      }
      if (deviceHandle_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DeviceHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (shapeWithLayout_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ShapeWithLayout);
      }
      if (ReplicaId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ReplicaId);
      }
      if (deviceHandle_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DeviceHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (shapeWithLayout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShapeWithLayout);
      }
      if (ReplicaId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReplicaId);
      }
      if (deviceHandle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TransferFromOutfeedRequest other) {
      if (other == null) {
        return;
      }
      if (other.shapeWithLayout_ != null) {
        if (shapeWithLayout_ == null) {
          ShapeWithLayout = new global::Xla.ShapeProto();
        }
        ShapeWithLayout.MergeFrom(other.ShapeWithLayout);
      }
      if (other.ReplicaId != 0L) {
        ReplicaId = other.ReplicaId;
      }
      if (other.deviceHandle_ != null) {
        if (deviceHandle_ == null) {
          DeviceHandle = new global::Xla.DeviceHandle();
        }
        DeviceHandle.MergeFrom(other.DeviceHandle);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (shapeWithLayout_ == null) {
              ShapeWithLayout = new global::Xla.ShapeProto();
            }
            input.ReadMessage(ShapeWithLayout);
            break;
          }
          case 16: {
            ReplicaId = input.ReadInt64();
            break;
          }
          case 26: {
            if (deviceHandle_ == null) {
              DeviceHandle = new global::Xla.DeviceHandle();
            }
            input.ReadMessage(DeviceHandle);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (shapeWithLayout_ == null) {
              ShapeWithLayout = new global::Xla.ShapeProto();
            }
            input.ReadMessage(ShapeWithLayout);
            break;
          }
          case 16: {
            ReplicaId = input.ReadInt64();
            break;
          }
          case 26: {
            if (deviceHandle_ == null) {
              DeviceHandle = new global::Xla.DeviceHandle();
            }
            input.ReadMessage(DeviceHandle);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TransferFromOutfeedResponse : pb::IMessage<TransferFromOutfeedResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferFromOutfeedResponse> _parser = new pb::MessageParser<TransferFromOutfeedResponse>(() => new TransferFromOutfeedResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TransferFromOutfeedResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferFromOutfeedResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferFromOutfeedResponse(TransferFromOutfeedResponse other) : this() {
      literal_ = other.literal_ != null ? other.literal_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferFromOutfeedResponse Clone() {
      return new TransferFromOutfeedResponse(this);
    }

    /// <summary>Field number for the "literal" field.</summary>
    public const int LiteralFieldNumber = 1;
    private global::Xla.LiteralProto literal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.LiteralProto Literal {
      get { return literal_; }
      set {
        literal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TransferFromOutfeedResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TransferFromOutfeedResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Literal, other.Literal)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (literal_ != null) hash ^= Literal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (literal_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Literal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (literal_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Literal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (literal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Literal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TransferFromOutfeedResponse other) {
      if (other == null) {
        return;
      }
      if (other.literal_ != null) {
        if (literal_ == null) {
          Literal = new global::Xla.LiteralProto();
        }
        Literal.MergeFrom(other.Literal);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (literal_ == null) {
              Literal = new global::Xla.LiteralProto();
            }
            input.ReadMessage(Literal);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (literal_ == null) {
              Literal = new global::Xla.LiteralProto();
            }
            input.ReadMessage(Literal);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResetDeviceRequest : pb::IMessage<ResetDeviceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResetDeviceRequest> _parser = new pb::MessageParser<ResetDeviceRequest>(() => new ResetDeviceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResetDeviceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResetDeviceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResetDeviceRequest(ResetDeviceRequest other) : this() {
      deviceHandle_ = other.deviceHandle_ != null ? other.deviceHandle_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResetDeviceRequest Clone() {
      return new ResetDeviceRequest(this);
    }

    /// <summary>Field number for the "device_handle" field.</summary>
    public const int DeviceHandleFieldNumber = 1;
    private global::Xla.DeviceHandle deviceHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.DeviceHandle DeviceHandle {
      get { return deviceHandle_; }
      set {
        deviceHandle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResetDeviceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResetDeviceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DeviceHandle, other.DeviceHandle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (deviceHandle_ != null) hash ^= DeviceHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (deviceHandle_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DeviceHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (deviceHandle_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DeviceHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (deviceHandle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResetDeviceRequest other) {
      if (other == null) {
        return;
      }
      if (other.deviceHandle_ != null) {
        if (deviceHandle_ == null) {
          DeviceHandle = new global::Xla.DeviceHandle();
        }
        DeviceHandle.MergeFrom(other.DeviceHandle);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (deviceHandle_ == null) {
              DeviceHandle = new global::Xla.DeviceHandle();
            }
            input.ReadMessage(DeviceHandle);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (deviceHandle_ == null) {
              DeviceHandle = new global::Xla.DeviceHandle();
            }
            input.ReadMessage(DeviceHandle);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResetDeviceResponse : pb::IMessage<ResetDeviceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResetDeviceResponse> _parser = new pb::MessageParser<ResetDeviceResponse>(() => new ResetDeviceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResetDeviceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResetDeviceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResetDeviceResponse(ResetDeviceResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResetDeviceResponse Clone() {
      return new ResetDeviceResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResetDeviceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResetDeviceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResetDeviceResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class ComputationGraphStatsRequest : pb::IMessage<ComputationGraphStatsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputationGraphStatsRequest> _parser = new pb::MessageParser<ComputationGraphStatsRequest>(() => new ComputationGraphStatsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ComputationGraphStatsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComputationGraphStatsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComputationGraphStatsRequest(ComputationGraphStatsRequest other) : this() {
      computation_ = other.computation_ != null ? other.computation_.Clone() : null;
      debugOptions_ = other.debugOptions_ != null ? other.debugOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComputationGraphStatsRequest Clone() {
      return new ComputationGraphStatsRequest(this);
    }

    /// <summary>Field number for the "computation" field.</summary>
    public const int ComputationFieldNumber = 1;
    private global::Xla.HloModuleProto computation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.HloModuleProto Computation {
      get { return computation_; }
      set {
        computation_ = value;
      }
    }

    /// <summary>Field number for the "debug_options" field.</summary>
    public const int DebugOptionsFieldNumber = 2;
    private global::Xla.DebugOptions debugOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.DebugOptions DebugOptions {
      get { return debugOptions_; }
      set {
        debugOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ComputationGraphStatsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ComputationGraphStatsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Computation, other.Computation)) return false;
      if (!object.Equals(DebugOptions, other.DebugOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (computation_ != null) hash ^= Computation.GetHashCode();
      if (debugOptions_ != null) hash ^= DebugOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (computation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Computation);
      }
      if (debugOptions_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DebugOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (computation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Computation);
      }
      if (debugOptions_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DebugOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (computation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Computation);
      }
      if (debugOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DebugOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ComputationGraphStatsRequest other) {
      if (other == null) {
        return;
      }
      if (other.computation_ != null) {
        if (computation_ == null) {
          Computation = new global::Xla.HloModuleProto();
        }
        Computation.MergeFrom(other.Computation);
      }
      if (other.debugOptions_ != null) {
        if (debugOptions_ == null) {
          DebugOptions = new global::Xla.DebugOptions();
        }
        DebugOptions.MergeFrom(other.DebugOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (computation_ == null) {
              Computation = new global::Xla.HloModuleProto();
            }
            input.ReadMessage(Computation);
            break;
          }
          case 18: {
            if (debugOptions_ == null) {
              DebugOptions = new global::Xla.DebugOptions();
            }
            input.ReadMessage(DebugOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (computation_ == null) {
              Computation = new global::Xla.HloModuleProto();
            }
            input.ReadMessage(Computation);
            break;
          }
          case 18: {
            if (debugOptions_ == null) {
              DebugOptions = new global::Xla.DebugOptions();
            }
            input.ReadMessage(DebugOptions);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComputationStatsResponse : pb::IMessage<ComputationStatsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputationStatsResponse> _parser = new pb::MessageParser<ComputationStatsResponse>(() => new ComputationStatsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ComputationStatsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComputationStatsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComputationStatsResponse(ComputationStatsResponse other) : this() {
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComputationStatsResponse Clone() {
      return new ComputationStatsResponse(this);
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 1;
    private global::Xla.ComputationStats stats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ComputationStats Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ComputationStatsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ComputationStatsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stats, other.Stats)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stats_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Stats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ComputationStatsResponse other) {
      if (other == null) {
        return;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::Xla.ComputationStats();
        }
        Stats.MergeFrom(other.Stats);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stats_ == null) {
              Stats = new global::Xla.ComputationStats();
            }
            input.ReadMessage(Stats);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stats_ == null) {
              Stats = new global::Xla.ComputationStats();
            }
            input.ReadMessage(Stats);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateChannelHandleRequest : pb::IMessage<CreateChannelHandleRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateChannelHandleRequest> _parser = new pb::MessageParser<CreateChannelHandleRequest>(() => new CreateChannelHandleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateChannelHandleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateChannelHandleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateChannelHandleRequest(CreateChannelHandleRequest other) : this() {
      channelType_ = other.channelType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateChannelHandleRequest Clone() {
      return new CreateChannelHandleRequest(this);
    }

    /// <summary>Field number for the "channel_type" field.</summary>
    public const int ChannelTypeFieldNumber = 1;
    private global::Xla.ChannelHandle.Types.ChannelType channelType_ = global::Xla.ChannelHandle.Types.ChannelType.Invalid;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ChannelHandle.Types.ChannelType ChannelType {
      get { return channelType_; }
      set {
        channelType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateChannelHandleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateChannelHandleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChannelType != other.ChannelType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ChannelType != global::Xla.ChannelHandle.Types.ChannelType.Invalid) hash ^= ChannelType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChannelType != global::Xla.ChannelHandle.Types.ChannelType.Invalid) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ChannelType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChannelType != global::Xla.ChannelHandle.Types.ChannelType.Invalid) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ChannelType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ChannelType != global::Xla.ChannelHandle.Types.ChannelType.Invalid) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChannelType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateChannelHandleRequest other) {
      if (other == null) {
        return;
      }
      if (other.ChannelType != global::Xla.ChannelHandle.Types.ChannelType.Invalid) {
        ChannelType = other.ChannelType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChannelType = (global::Xla.ChannelHandle.Types.ChannelType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChannelType = (global::Xla.ChannelHandle.Types.ChannelType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateChannelHandleResponse : pb::IMessage<CreateChannelHandleResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateChannelHandleResponse> _parser = new pb::MessageParser<CreateChannelHandleResponse>(() => new CreateChannelHandleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateChannelHandleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateChannelHandleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateChannelHandleResponse(CreateChannelHandleResponse other) : this() {
      channel_ = other.channel_ != null ? other.channel_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateChannelHandleResponse Clone() {
      return new CreateChannelHandleResponse(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private global::Xla.ChannelHandle channel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ChannelHandle Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateChannelHandleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateChannelHandleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Channel, other.Channel)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (channel_ != null) hash ^= Channel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (channel_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (channel_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (channel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Channel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateChannelHandleResponse other) {
      if (other == null) {
        return;
      }
      if (other.channel_ != null) {
        if (channel_ == null) {
          Channel = new global::Xla.ChannelHandle();
        }
        Channel.MergeFrom(other.Channel);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (channel_ == null) {
              Channel = new global::Xla.ChannelHandle();
            }
            input.ReadMessage(Channel);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (channel_ == null) {
              Channel = new global::Xla.ChannelHandle();
            }
            input.ReadMessage(Channel);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnregisterRequest : pb::IMessage<UnregisterRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnregisterRequest> _parser = new pb::MessageParser<UnregisterRequest>(() => new UnregisterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnregisterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterRequest(UnregisterRequest other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterRequest Clone() {
      return new UnregisterRequest(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Xla.GlobalDataHandle> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::Xla.GlobalDataHandle.Parser);
    private readonly pbc::RepeatedField<global::Xla.GlobalDataHandle> data_ = new pbc::RepeatedField<global::Xla.GlobalDataHandle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xla.GlobalDataHandle> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnregisterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnregisterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnregisterRequest other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnregisterResponse : pb::IMessage<UnregisterResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnregisterResponse> _parser = new pb::MessageParser<UnregisterResponse>(() => new UnregisterResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnregisterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterResponse(UnregisterResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterResponse Clone() {
      return new UnregisterResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnregisterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnregisterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnregisterResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CompileRequest : pb::IMessage<CompileRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompileRequest> _parser = new pb::MessageParser<CompileRequest>(() => new CompileRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CompileRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompileRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompileRequest(CompileRequest other) : this() {
      computation_ = other.computation_ != null ? other.computation_.Clone() : null;
      executionOptions_ = other.executionOptions_ != null ? other.executionOptions_.Clone() : null;
      inputShapeWithLayout_ = other.inputShapeWithLayout_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompileRequest Clone() {
      return new CompileRequest(this);
    }

    /// <summary>Field number for the "computation" field.</summary>
    public const int ComputationFieldNumber = 1;
    private global::Xla.HloModuleProto computation_;
    /// <summary>
    /// The graph to be compiled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.HloModuleProto Computation {
      get { return computation_; }
      set {
        computation_ = value;
      }
    }

    /// <summary>Field number for the "execution_options" field.</summary>
    public const int ExecutionOptionsFieldNumber = 2;
    private global::Xla.ExecutionOptions executionOptions_;
    /// <summary>
    /// Options that affect how XLA compiles code to service this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ExecutionOptions ExecutionOptions {
      get { return executionOptions_; }
      set {
        executionOptions_ = value;
      }
    }

    /// <summary>Field number for the "input_shape_with_layout" field.</summary>
    public const int InputShapeWithLayoutFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Xla.ShapeProto> _repeated_inputShapeWithLayout_codec
        = pb::FieldCodec.ForMessage(26, global::Xla.ShapeProto.Parser);
    private readonly pbc::RepeatedField<global::Xla.ShapeProto> inputShapeWithLayout_ = new pbc::RepeatedField<global::Xla.ShapeProto>();
    /// <summary>
    /// The layouts of the input arguments. If not set, the default layout will be
    /// used. Although the real arguments are not needed in compilation, the
    /// layouts of the arguments can affect the compilation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xla.ShapeProto> InputShapeWithLayout {
      get { return inputShapeWithLayout_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CompileRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CompileRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Computation, other.Computation)) return false;
      if (!object.Equals(ExecutionOptions, other.ExecutionOptions)) return false;
      if(!inputShapeWithLayout_.Equals(other.inputShapeWithLayout_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (computation_ != null) hash ^= Computation.GetHashCode();
      if (executionOptions_ != null) hash ^= ExecutionOptions.GetHashCode();
      hash ^= inputShapeWithLayout_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (computation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Computation);
      }
      if (executionOptions_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExecutionOptions);
      }
      inputShapeWithLayout_.WriteTo(output, _repeated_inputShapeWithLayout_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (computation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Computation);
      }
      if (executionOptions_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExecutionOptions);
      }
      inputShapeWithLayout_.WriteTo(ref output, _repeated_inputShapeWithLayout_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (computation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Computation);
      }
      if (executionOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecutionOptions);
      }
      size += inputShapeWithLayout_.CalculateSize(_repeated_inputShapeWithLayout_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CompileRequest other) {
      if (other == null) {
        return;
      }
      if (other.computation_ != null) {
        if (computation_ == null) {
          Computation = new global::Xla.HloModuleProto();
        }
        Computation.MergeFrom(other.Computation);
      }
      if (other.executionOptions_ != null) {
        if (executionOptions_ == null) {
          ExecutionOptions = new global::Xla.ExecutionOptions();
        }
        ExecutionOptions.MergeFrom(other.ExecutionOptions);
      }
      inputShapeWithLayout_.Add(other.inputShapeWithLayout_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (computation_ == null) {
              Computation = new global::Xla.HloModuleProto();
            }
            input.ReadMessage(Computation);
            break;
          }
          case 18: {
            if (executionOptions_ == null) {
              ExecutionOptions = new global::Xla.ExecutionOptions();
            }
            input.ReadMessage(ExecutionOptions);
            break;
          }
          case 26: {
            inputShapeWithLayout_.AddEntriesFrom(input, _repeated_inputShapeWithLayout_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (computation_ == null) {
              Computation = new global::Xla.HloModuleProto();
            }
            input.ReadMessage(Computation);
            break;
          }
          case 18: {
            if (executionOptions_ == null) {
              ExecutionOptions = new global::Xla.ExecutionOptions();
            }
            input.ReadMessage(ExecutionOptions);
            break;
          }
          case 26: {
            inputShapeWithLayout_.AddEntriesFrom(ref input, _repeated_inputShapeWithLayout_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CompileResponse : pb::IMessage<CompileResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompileResponse> _parser = new pb::MessageParser<CompileResponse>(() => new CompileResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CompileResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompileResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompileResponse(CompileResponse other) : this() {
      handle_ = other.handle_ != null ? other.handle_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompileResponse Clone() {
      return new CompileResponse(this);
    }

    /// <summary>Field number for the "handle" field.</summary>
    public const int HandleFieldNumber = 1;
    private global::Xla.ExecutionHandle handle_;
    /// <summary>
    /// The handle to the executable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ExecutionHandle Handle {
      get { return handle_; }
      set {
        handle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CompileResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CompileResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Handle, other.Handle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (handle_ != null) hash ^= Handle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (handle_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Handle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (handle_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Handle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (handle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Handle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CompileResponse other) {
      if (other == null) {
        return;
      }
      if (other.handle_ != null) {
        if (handle_ == null) {
          Handle = new global::Xla.ExecutionHandle();
        }
        Handle.MergeFrom(other.Handle);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (handle_ == null) {
              Handle = new global::Xla.ExecutionHandle();
            }
            input.ReadMessage(Handle);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (handle_ == null) {
              Handle = new global::Xla.ExecutionHandle();
            }
            input.ReadMessage(Handle);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExecuteRequest : pb::IMessage<ExecuteRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecuteRequest> _parser = new pb::MessageParser<ExecuteRequest>(() => new ExecuteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExecuteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteRequest(ExecuteRequest other) : this() {
      handle_ = other.handle_ != null ? other.handle_.Clone() : null;
      arguments_ = other.arguments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteRequest Clone() {
      return new ExecuteRequest(this);
    }

    /// <summary>Field number for the "handle" field.</summary>
    public const int HandleFieldNumber = 1;
    private global::Xla.ExecutionHandle handle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ExecutionHandle Handle {
      get { return handle_; }
      set {
        handle_ = value;
      }
    }

    /// <summary>Field number for the "arguments" field.</summary>
    public const int ArgumentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Xla.GlobalDataHandle> _repeated_arguments_codec
        = pb::FieldCodec.ForMessage(18, global::Xla.GlobalDataHandle.Parser);
    private readonly pbc::RepeatedField<global::Xla.GlobalDataHandle> arguments_ = new pbc::RepeatedField<global::Xla.GlobalDataHandle>();
    /// <summary>
    /// The shape and layout of the arguments must be the same as the those of the
    /// executable's parameters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xla.GlobalDataHandle> Arguments {
      get { return arguments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExecuteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExecuteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Handle, other.Handle)) return false;
      if(!arguments_.Equals(other.arguments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (handle_ != null) hash ^= Handle.GetHashCode();
      hash ^= arguments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (handle_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Handle);
      }
      arguments_.WriteTo(output, _repeated_arguments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (handle_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Handle);
      }
      arguments_.WriteTo(ref output, _repeated_arguments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (handle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Handle);
      }
      size += arguments_.CalculateSize(_repeated_arguments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExecuteRequest other) {
      if (other == null) {
        return;
      }
      if (other.handle_ != null) {
        if (handle_ == null) {
          Handle = new global::Xla.ExecutionHandle();
        }
        Handle.MergeFrom(other.Handle);
      }
      arguments_.Add(other.arguments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (handle_ == null) {
              Handle = new global::Xla.ExecutionHandle();
            }
            input.ReadMessage(Handle);
            break;
          }
          case 18: {
            arguments_.AddEntriesFrom(input, _repeated_arguments_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (handle_ == null) {
              Handle = new global::Xla.ExecutionHandle();
            }
            input.ReadMessage(Handle);
            break;
          }
          case 18: {
            arguments_.AddEntriesFrom(ref input, _repeated_arguments_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TODO(b/118493728): Remove this and ExecuteGraphParallelRequest and replace
  /// the uses with calls to Compile and Execute.
  /// </summary>
  public sealed partial class ExecuteGraphRequest : pb::IMessage<ExecuteGraphRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecuteGraphRequest> _parser = new pb::MessageParser<ExecuteGraphRequest>(() => new ExecuteGraphRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExecuteGraphRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteGraphRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteGraphRequest(ExecuteGraphRequest other) : this() {
      computation_ = other.computation_ != null ? other.computation_.Clone() : null;
      arguments_ = other.arguments_.Clone();
      executionOptions_ = other.executionOptions_ != null ? other.executionOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteGraphRequest Clone() {
      return new ExecuteGraphRequest(this);
    }

    /// <summary>Field number for the "computation" field.</summary>
    public const int ComputationFieldNumber = 1;
    private global::Xla.HloModuleProto computation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.HloModuleProto Computation {
      get { return computation_; }
      set {
        computation_ = value;
      }
    }

    /// <summary>Field number for the "arguments" field.</summary>
    public const int ArgumentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Xla.GlobalDataHandle> _repeated_arguments_codec
        = pb::FieldCodec.ForMessage(18, global::Xla.GlobalDataHandle.Parser);
    private readonly pbc::RepeatedField<global::Xla.GlobalDataHandle> arguments_ = new pbc::RepeatedField<global::Xla.GlobalDataHandle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xla.GlobalDataHandle> Arguments {
      get { return arguments_; }
    }

    /// <summary>Field number for the "execution_options" field.</summary>
    public const int ExecutionOptionsFieldNumber = 3;
    private global::Xla.ExecutionOptions executionOptions_;
    /// <summary>
    /// Options that affect how XLA compiles and runs code to service this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ExecutionOptions ExecutionOptions {
      get { return executionOptions_; }
      set {
        executionOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExecuteGraphRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExecuteGraphRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Computation, other.Computation)) return false;
      if(!arguments_.Equals(other.arguments_)) return false;
      if (!object.Equals(ExecutionOptions, other.ExecutionOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (computation_ != null) hash ^= Computation.GetHashCode();
      hash ^= arguments_.GetHashCode();
      if (executionOptions_ != null) hash ^= ExecutionOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (computation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Computation);
      }
      arguments_.WriteTo(output, _repeated_arguments_codec);
      if (executionOptions_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExecutionOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (computation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Computation);
      }
      arguments_.WriteTo(ref output, _repeated_arguments_codec);
      if (executionOptions_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExecutionOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (computation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Computation);
      }
      size += arguments_.CalculateSize(_repeated_arguments_codec);
      if (executionOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecutionOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExecuteGraphRequest other) {
      if (other == null) {
        return;
      }
      if (other.computation_ != null) {
        if (computation_ == null) {
          Computation = new global::Xla.HloModuleProto();
        }
        Computation.MergeFrom(other.Computation);
      }
      arguments_.Add(other.arguments_);
      if (other.executionOptions_ != null) {
        if (executionOptions_ == null) {
          ExecutionOptions = new global::Xla.ExecutionOptions();
        }
        ExecutionOptions.MergeFrom(other.ExecutionOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (computation_ == null) {
              Computation = new global::Xla.HloModuleProto();
            }
            input.ReadMessage(Computation);
            break;
          }
          case 18: {
            arguments_.AddEntriesFrom(input, _repeated_arguments_codec);
            break;
          }
          case 26: {
            if (executionOptions_ == null) {
              ExecutionOptions = new global::Xla.ExecutionOptions();
            }
            input.ReadMessage(ExecutionOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (computation_ == null) {
              Computation = new global::Xla.HloModuleProto();
            }
            input.ReadMessage(Computation);
            break;
          }
          case 18: {
            arguments_.AddEntriesFrom(ref input, _repeated_arguments_codec);
            break;
          }
          case 26: {
            if (executionOptions_ == null) {
              ExecutionOptions = new global::Xla.ExecutionOptions();
            }
            input.ReadMessage(ExecutionOptions);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExecuteGraphParallelRequest : pb::IMessage<ExecuteGraphParallelRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecuteGraphParallelRequest> _parser = new pb::MessageParser<ExecuteGraphParallelRequest>(() => new ExecuteGraphParallelRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExecuteGraphParallelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteGraphParallelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteGraphParallelRequest(ExecuteGraphParallelRequest other) : this() {
      requests_ = other.requests_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteGraphParallelRequest Clone() {
      return new ExecuteGraphParallelRequest(this);
    }

    /// <summary>Field number for the "requests" field.</summary>
    public const int RequestsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Xla.ExecuteGraphRequest> _repeated_requests_codec
        = pb::FieldCodec.ForMessage(10, global::Xla.ExecuteGraphRequest.Parser);
    private readonly pbc::RepeatedField<global::Xla.ExecuteGraphRequest> requests_ = new pbc::RepeatedField<global::Xla.ExecuteGraphRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xla.ExecuteGraphRequest> Requests {
      get { return requests_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExecuteGraphParallelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExecuteGraphParallelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!requests_.Equals(other.requests_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= requests_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      requests_.WriteTo(output, _repeated_requests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      requests_.WriteTo(ref output, _repeated_requests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += requests_.CalculateSize(_repeated_requests_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExecuteGraphParallelRequest other) {
      if (other == null) {
        return;
      }
      requests_.Add(other.requests_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            requests_.AddEntriesFrom(input, _repeated_requests_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            requests_.AddEntriesFrom(ref input, _repeated_requests_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExecuteResponse : pb::IMessage<ExecuteResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecuteResponse> _parser = new pb::MessageParser<ExecuteResponse>(() => new ExecuteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExecuteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteResponse(ExecuteResponse other) : this() {
      output_ = other.output_ != null ? other.output_.Clone() : null;
      profile_ = other.profile_ != null ? other.profile_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteResponse Clone() {
      return new ExecuteResponse(this);
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 1;
    private global::Xla.GlobalDataHandle output_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.GlobalDataHandle Output {
      get { return output_; }
      set {
        output_ = value;
      }
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 2;
    private global::Xla.ExecutionProfile profile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ExecutionProfile Profile {
      get { return profile_; }
      set {
        profile_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExecuteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExecuteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Output, other.Output)) return false;
      if (!object.Equals(Profile, other.Profile)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (output_ != null) hash ^= Output.GetHashCode();
      if (profile_ != null) hash ^= Profile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (output_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Output);
      }
      if (profile_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Profile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (output_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Output);
      }
      if (profile_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Profile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (output_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Output);
      }
      if (profile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExecuteResponse other) {
      if (other == null) {
        return;
      }
      if (other.output_ != null) {
        if (output_ == null) {
          Output = new global::Xla.GlobalDataHandle();
        }
        Output.MergeFrom(other.Output);
      }
      if (other.profile_ != null) {
        if (profile_ == null) {
          Profile = new global::Xla.ExecutionProfile();
        }
        Profile.MergeFrom(other.Profile);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (output_ == null) {
              Output = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(Output);
            break;
          }
          case 18: {
            if (profile_ == null) {
              Profile = new global::Xla.ExecutionProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (output_ == null) {
              Output = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(Output);
            break;
          }
          case 18: {
            if (profile_ == null) {
              Profile = new global::Xla.ExecutionProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExecuteParallelResponse : pb::IMessage<ExecuteParallelResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecuteParallelResponse> _parser = new pb::MessageParser<ExecuteParallelResponse>(() => new ExecuteParallelResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExecuteParallelResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteParallelResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteParallelResponse(ExecuteParallelResponse other) : this() {
      responses_ = other.responses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecuteParallelResponse Clone() {
      return new ExecuteParallelResponse(this);
    }

    /// <summary>Field number for the "responses" field.</summary>
    public const int ResponsesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Xla.ExecuteResponse> _repeated_responses_codec
        = pb::FieldCodec.ForMessage(10, global::Xla.ExecuteResponse.Parser);
    private readonly pbc::RepeatedField<global::Xla.ExecuteResponse> responses_ = new pbc::RepeatedField<global::Xla.ExecuteResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xla.ExecuteResponse> Responses {
      get { return responses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExecuteParallelResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExecuteParallelResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!responses_.Equals(other.responses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= responses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      responses_.WriteTo(output, _repeated_responses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      responses_.WriteTo(ref output, _repeated_responses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += responses_.CalculateSize(_repeated_responses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExecuteParallelResponse other) {
      if (other == null) {
        return;
      }
      responses_.Add(other.responses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            responses_.AddEntriesFrom(input, _repeated_responses_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            responses_.AddEntriesFrom(ref input, _repeated_responses_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WaitForExecutionRequest : pb::IMessage<WaitForExecutionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WaitForExecutionRequest> _parser = new pb::MessageParser<WaitForExecutionRequest>(() => new WaitForExecutionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WaitForExecutionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaitForExecutionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaitForExecutionRequest(WaitForExecutionRequest other) : this() {
      execution_ = other.execution_ != null ? other.execution_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaitForExecutionRequest Clone() {
      return new WaitForExecutionRequest(this);
    }

    /// <summary>Field number for the "execution" field.</summary>
    public const int ExecutionFieldNumber = 1;
    private global::Xla.ExecutionHandle execution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ExecutionHandle Execution {
      get { return execution_; }
      set {
        execution_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WaitForExecutionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WaitForExecutionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Execution, other.Execution)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (execution_ != null) hash ^= Execution.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (execution_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Execution);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (execution_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Execution);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (execution_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Execution);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WaitForExecutionRequest other) {
      if (other == null) {
        return;
      }
      if (other.execution_ != null) {
        if (execution_ == null) {
          Execution = new global::Xla.ExecutionHandle();
        }
        Execution.MergeFrom(other.Execution);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (execution_ == null) {
              Execution = new global::Xla.ExecutionHandle();
            }
            input.ReadMessage(Execution);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (execution_ == null) {
              Execution = new global::Xla.ExecutionHandle();
            }
            input.ReadMessage(Execution);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WaitForExecutionResponse : pb::IMessage<WaitForExecutionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WaitForExecutionResponse> _parser = new pb::MessageParser<WaitForExecutionResponse>(() => new WaitForExecutionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WaitForExecutionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaitForExecutionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaitForExecutionResponse(WaitForExecutionResponse other) : this() {
      output_ = other.output_ != null ? other.output_.Clone() : null;
      profile_ = other.profile_ != null ? other.profile_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaitForExecutionResponse Clone() {
      return new WaitForExecutionResponse(this);
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 1;
    private global::Xla.GlobalDataHandle output_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.GlobalDataHandle Output {
      get { return output_; }
      set {
        output_ = value;
      }
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 2;
    private global::Xla.ExecutionProfile profile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ExecutionProfile Profile {
      get { return profile_; }
      set {
        profile_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WaitForExecutionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WaitForExecutionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Output, other.Output)) return false;
      if (!object.Equals(Profile, other.Profile)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (output_ != null) hash ^= Output.GetHashCode();
      if (profile_ != null) hash ^= Profile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (output_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Output);
      }
      if (profile_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Profile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (output_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Output);
      }
      if (profile_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Profile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (output_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Output);
      }
      if (profile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WaitForExecutionResponse other) {
      if (other == null) {
        return;
      }
      if (other.output_ != null) {
        if (output_ == null) {
          Output = new global::Xla.GlobalDataHandle();
        }
        Output.MergeFrom(other.Output);
      }
      if (other.profile_ != null) {
        if (profile_ == null) {
          Profile = new global::Xla.ExecutionProfile();
        }
        Profile.MergeFrom(other.Profile);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (output_ == null) {
              Output = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(Output);
            break;
          }
          case 18: {
            if (profile_ == null) {
              Profile = new global::Xla.ExecutionProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (output_ == null) {
              Output = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(Output);
            break;
          }
          case 18: {
            if (profile_ == null) {
              Profile = new global::Xla.ExecutionProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComputeConstantGraphRequest : pb::IMessage<ComputeConstantGraphRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputeConstantGraphRequest> _parser = new pb::MessageParser<ComputeConstantGraphRequest>(() => new ComputeConstantGraphRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ComputeConstantGraphRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComputeConstantGraphRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComputeConstantGraphRequest(ComputeConstantGraphRequest other) : this() {
      computation_ = other.computation_ != null ? other.computation_.Clone() : null;
      outputLayout_ = other.outputLayout_ != null ? other.outputLayout_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComputeConstantGraphRequest Clone() {
      return new ComputeConstantGraphRequest(this);
    }

    /// <summary>Field number for the "computation" field.</summary>
    public const int ComputationFieldNumber = 1;
    private global::Xla.HloModuleProto computation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.HloModuleProto Computation {
      get { return computation_; }
      set {
        computation_ = value;
      }
    }

    /// <summary>Field number for the "output_layout" field.</summary>
    public const int OutputLayoutFieldNumber = 2;
    private global::Xla.LayoutProto outputLayout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.LayoutProto OutputLayout {
      get { return outputLayout_; }
      set {
        outputLayout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ComputeConstantGraphRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ComputeConstantGraphRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Computation, other.Computation)) return false;
      if (!object.Equals(OutputLayout, other.OutputLayout)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (computation_ != null) hash ^= Computation.GetHashCode();
      if (outputLayout_ != null) hash ^= OutputLayout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (computation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Computation);
      }
      if (outputLayout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OutputLayout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (computation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Computation);
      }
      if (outputLayout_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OutputLayout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (computation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Computation);
      }
      if (outputLayout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutputLayout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ComputeConstantGraphRequest other) {
      if (other == null) {
        return;
      }
      if (other.computation_ != null) {
        if (computation_ == null) {
          Computation = new global::Xla.HloModuleProto();
        }
        Computation.MergeFrom(other.Computation);
      }
      if (other.outputLayout_ != null) {
        if (outputLayout_ == null) {
          OutputLayout = new global::Xla.LayoutProto();
        }
        OutputLayout.MergeFrom(other.OutputLayout);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (computation_ == null) {
              Computation = new global::Xla.HloModuleProto();
            }
            input.ReadMessage(Computation);
            break;
          }
          case 18: {
            if (outputLayout_ == null) {
              OutputLayout = new global::Xla.LayoutProto();
            }
            input.ReadMessage(OutputLayout);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (computation_ == null) {
              Computation = new global::Xla.HloModuleProto();
            }
            input.ReadMessage(Computation);
            break;
          }
          case 18: {
            if (outputLayout_ == null) {
              OutputLayout = new global::Xla.LayoutProto();
            }
            input.ReadMessage(OutputLayout);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComputeConstantResponse : pb::IMessage<ComputeConstantResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComputeConstantResponse> _parser = new pb::MessageParser<ComputeConstantResponse>(() => new ComputeConstantResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ComputeConstantResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComputeConstantResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComputeConstantResponse(ComputeConstantResponse other) : this() {
      literal_ = other.literal_ != null ? other.literal_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ComputeConstantResponse Clone() {
      return new ComputeConstantResponse(this);
    }

    /// <summary>Field number for the "literal" field.</summary>
    public const int LiteralFieldNumber = 1;
    private global::Xla.LiteralProto literal_;
    /// <summary>
    /// A LiteralProto is returned directly for this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.LiteralProto Literal {
      get { return literal_; }
      set {
        literal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ComputeConstantResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ComputeConstantResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Literal, other.Literal)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (literal_ != null) hash ^= Literal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (literal_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Literal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (literal_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Literal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (literal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Literal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ComputeConstantResponse other) {
      if (other == null) {
        return;
      }
      if (other.literal_ != null) {
        if (literal_ == null) {
          Literal = new global::Xla.LiteralProto();
        }
        Literal.MergeFrom(other.Literal);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (literal_ == null) {
              Literal = new global::Xla.LiteralProto();
            }
            input.ReadMessage(Literal);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (literal_ == null) {
              Literal = new global::Xla.LiteralProto();
            }
            input.ReadMessage(Literal);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeconstructTupleRequest : pb::IMessage<DeconstructTupleRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeconstructTupleRequest> _parser = new pb::MessageParser<DeconstructTupleRequest>(() => new DeconstructTupleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeconstructTupleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeconstructTupleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeconstructTupleRequest(DeconstructTupleRequest other) : this() {
      tupleHandle_ = other.tupleHandle_ != null ? other.tupleHandle_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeconstructTupleRequest Clone() {
      return new DeconstructTupleRequest(this);
    }

    /// <summary>Field number for the "tuple_handle" field.</summary>
    public const int TupleHandleFieldNumber = 2;
    private global::Xla.GlobalDataHandle tupleHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.GlobalDataHandle TupleHandle {
      get { return tupleHandle_; }
      set {
        tupleHandle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeconstructTupleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeconstructTupleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TupleHandle, other.TupleHandle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (tupleHandle_ != null) hash ^= TupleHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tupleHandle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TupleHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tupleHandle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TupleHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (tupleHandle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TupleHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeconstructTupleRequest other) {
      if (other == null) {
        return;
      }
      if (other.tupleHandle_ != null) {
        if (tupleHandle_ == null) {
          TupleHandle = new global::Xla.GlobalDataHandle();
        }
        TupleHandle.MergeFrom(other.TupleHandle);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (tupleHandle_ == null) {
              TupleHandle = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(TupleHandle);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (tupleHandle_ == null) {
              TupleHandle = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(TupleHandle);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeconstructTupleResponse : pb::IMessage<DeconstructTupleResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeconstructTupleResponse> _parser = new pb::MessageParser<DeconstructTupleResponse>(() => new DeconstructTupleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeconstructTupleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeconstructTupleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeconstructTupleResponse(DeconstructTupleResponse other) : this() {
      elementHandles_ = other.elementHandles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeconstructTupleResponse Clone() {
      return new DeconstructTupleResponse(this);
    }

    /// <summary>Field number for the "element_handles" field.</summary>
    public const int ElementHandlesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Xla.GlobalDataHandle> _repeated_elementHandles_codec
        = pb::FieldCodec.ForMessage(10, global::Xla.GlobalDataHandle.Parser);
    private readonly pbc::RepeatedField<global::Xla.GlobalDataHandle> elementHandles_ = new pbc::RepeatedField<global::Xla.GlobalDataHandle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xla.GlobalDataHandle> ElementHandles {
      get { return elementHandles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeconstructTupleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeconstructTupleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!elementHandles_.Equals(other.elementHandles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= elementHandles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      elementHandles_.WriteTo(output, _repeated_elementHandles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      elementHandles_.WriteTo(ref output, _repeated_elementHandles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += elementHandles_.CalculateSize(_repeated_elementHandles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeconstructTupleResponse other) {
      if (other == null) {
        return;
      }
      elementHandles_.Add(other.elementHandles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            elementHandles_.AddEntriesFrom(input, _repeated_elementHandles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            elementHandles_.AddEntriesFrom(ref input, _repeated_elementHandles_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoadDataRequest : pb::IMessage<LoadDataRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadDataRequest> _parser = new pb::MessageParser<LoadDataRequest>(() => new LoadDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LoadDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoadDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoadDataRequest(LoadDataRequest other) : this() {
      columnioTabletPath_ = other.columnioTabletPath_;
      columnioField_ = other.columnioField_;
      elementShape_ = other.elementShape_ != null ? other.elementShape_.Clone() : null;
      offset_ = other.offset_;
      limit_ = other.limit_;
      zip_ = other.zip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoadDataRequest Clone() {
      return new LoadDataRequest(this);
    }

    /// <summary>Field number for the "columnio_tablet_path" field.</summary>
    public const int ColumnioTabletPathFieldNumber = 1;
    private string columnioTabletPath_ = "";
    /// <summary>
    /// Describes the path of the ColumnIO tablet to load.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ColumnioTabletPath {
      get { return columnioTabletPath_; }
      set {
        columnioTabletPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "columnio_field" field.</summary>
    public const int ColumnioFieldFieldNumber = 2;
    private string columnioField_ = "";
    /// <summary>
    /// Describes the field to load within the ColumnIO tablet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ColumnioField {
      get { return columnioField_; }
      set {
        columnioField_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "element_shape" field.</summary>
    public const int ElementShapeFieldNumber = 3;
    private global::Xla.ShapeProto elementShape_;
    /// <summary>
    /// Individual element shape, excluding rows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ShapeProto ElementShape {
      get { return elementShape_; }
      set {
        elementShape_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 4;
    private long offset_;
    /// <summary>
    /// Warning: ColumnIO does not support random-access, so use offset with
    /// caution in performance-critical scenarios.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 5;
    private long limit_;
    /// <summary>
    /// Maximum number of elements (with shape element_shape) to load.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "zip" field.</summary>
    public const int ZipFieldNumber = 6;
    private bool zip_;
    /// <summary>
    /// If more than one item is requested (via limit > 1), then this request
    /// attribute zips together the produced vectors.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Zip {
      get { return zip_; }
      set {
        zip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LoadDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LoadDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ColumnioTabletPath != other.ColumnioTabletPath) return false;
      if (ColumnioField != other.ColumnioField) return false;
      if (!object.Equals(ElementShape, other.ElementShape)) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      if (Zip != other.Zip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ColumnioTabletPath.Length != 0) hash ^= ColumnioTabletPath.GetHashCode();
      if (ColumnioField.Length != 0) hash ^= ColumnioField.GetHashCode();
      if (elementShape_ != null) hash ^= ElementShape.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (Zip != false) hash ^= Zip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ColumnioTabletPath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ColumnioTabletPath);
      }
      if (ColumnioField.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ColumnioField);
      }
      if (elementShape_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ElementShape);
      }
      if (Offset != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Limit);
      }
      if (Zip != false) {
        output.WriteRawTag(48);
        output.WriteBool(Zip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ColumnioTabletPath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ColumnioTabletPath);
      }
      if (ColumnioField.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ColumnioField);
      }
      if (elementShape_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ElementShape);
      }
      if (Offset != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Limit);
      }
      if (Zip != false) {
        output.WriteRawTag(48);
        output.WriteBool(Zip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ColumnioTabletPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColumnioTabletPath);
      }
      if (ColumnioField.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColumnioField);
      }
      if (elementShape_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ElementShape);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (Zip != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LoadDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.ColumnioTabletPath.Length != 0) {
        ColumnioTabletPath = other.ColumnioTabletPath;
      }
      if (other.ColumnioField.Length != 0) {
        ColumnioField = other.ColumnioField;
      }
      if (other.elementShape_ != null) {
        if (elementShape_ == null) {
          ElementShape = new global::Xla.ShapeProto();
        }
        ElementShape.MergeFrom(other.ElementShape);
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.Zip != false) {
        Zip = other.Zip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ColumnioTabletPath = input.ReadString();
            break;
          }
          case 18: {
            ColumnioField = input.ReadString();
            break;
          }
          case 26: {
            if (elementShape_ == null) {
              ElementShape = new global::Xla.ShapeProto();
            }
            input.ReadMessage(ElementShape);
            break;
          }
          case 32: {
            Offset = input.ReadInt64();
            break;
          }
          case 40: {
            Limit = input.ReadInt64();
            break;
          }
          case 48: {
            Zip = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ColumnioTabletPath = input.ReadString();
            break;
          }
          case 18: {
            ColumnioField = input.ReadString();
            break;
          }
          case 26: {
            if (elementShape_ == null) {
              ElementShape = new global::Xla.ShapeProto();
            }
            input.ReadMessage(ElementShape);
            break;
          }
          case 32: {
            Offset = input.ReadInt64();
            break;
          }
          case 40: {
            Limit = input.ReadInt64();
            break;
          }
          case 48: {
            Zip = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoadDataResponse : pb::IMessage<LoadDataResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadDataResponse> _parser = new pb::MessageParser<LoadDataResponse>(() => new LoadDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LoadDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoadDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoadDataResponse(LoadDataResponse other) : this() {
      data_ = other.data_ != null ? other.data_.Clone() : null;
      dataShape_ = other.dataShape_ != null ? other.dataShape_.Clone() : null;
      availableRows_ = other.availableRows_;
      rowsLoaded_ = other.rowsLoaded_;
      nanoseconds_ = other.nanoseconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoadDataResponse Clone() {
      return new LoadDataResponse(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private global::Xla.GlobalDataHandle data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.GlobalDataHandle Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "data_shape" field.</summary>
    public const int DataShapeFieldNumber = 2;
    private global::Xla.ShapeProto dataShape_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ShapeProto DataShape {
      get { return dataShape_; }
      set {
        dataShape_ = value;
      }
    }

    /// <summary>Field number for the "available_rows" field.</summary>
    public const int AvailableRowsFieldNumber = 3;
    private long availableRows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AvailableRows {
      get { return availableRows_; }
      set {
        availableRows_ = value;
      }
    }

    /// <summary>Field number for the "rows_loaded" field.</summary>
    public const int RowsLoadedFieldNumber = 4;
    private long rowsLoaded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RowsLoaded {
      get { return rowsLoaded_; }
      set {
        rowsLoaded_ = value;
      }
    }

    /// <summary>Field number for the "nanoseconds" field.</summary>
    public const int NanosecondsFieldNumber = 5;
    private long nanoseconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Nanoseconds {
      get { return nanoseconds_; }
      set {
        nanoseconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LoadDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LoadDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Data, other.Data)) return false;
      if (!object.Equals(DataShape, other.DataShape)) return false;
      if (AvailableRows != other.AvailableRows) return false;
      if (RowsLoaded != other.RowsLoaded) return false;
      if (Nanoseconds != other.Nanoseconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (data_ != null) hash ^= Data.GetHashCode();
      if (dataShape_ != null) hash ^= DataShape.GetHashCode();
      if (AvailableRows != 0L) hash ^= AvailableRows.GetHashCode();
      if (RowsLoaded != 0L) hash ^= RowsLoaded.GetHashCode();
      if (Nanoseconds != 0L) hash ^= Nanoseconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (dataShape_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DataShape);
      }
      if (AvailableRows != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(AvailableRows);
      }
      if (RowsLoaded != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RowsLoaded);
      }
      if (Nanoseconds != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Nanoseconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (dataShape_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DataShape);
      }
      if (AvailableRows != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(AvailableRows);
      }
      if (RowsLoaded != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RowsLoaded);
      }
      if (Nanoseconds != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Nanoseconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (dataShape_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataShape);
      }
      if (AvailableRows != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AvailableRows);
      }
      if (RowsLoaded != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RowsLoaded);
      }
      if (Nanoseconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Nanoseconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LoadDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Xla.GlobalDataHandle();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.dataShape_ != null) {
        if (dataShape_ == null) {
          DataShape = new global::Xla.ShapeProto();
        }
        DataShape.MergeFrom(other.DataShape);
      }
      if (other.AvailableRows != 0L) {
        AvailableRows = other.AvailableRows;
      }
      if (other.RowsLoaded != 0L) {
        RowsLoaded = other.RowsLoaded;
      }
      if (other.Nanoseconds != 0L) {
        Nanoseconds = other.Nanoseconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(Data);
            break;
          }
          case 18: {
            if (dataShape_ == null) {
              DataShape = new global::Xla.ShapeProto();
            }
            input.ReadMessage(DataShape);
            break;
          }
          case 24: {
            AvailableRows = input.ReadInt64();
            break;
          }
          case 32: {
            RowsLoaded = input.ReadInt64();
            break;
          }
          case 40: {
            Nanoseconds = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(Data);
            break;
          }
          case 18: {
            if (dataShape_ == null) {
              DataShape = new global::Xla.ShapeProto();
            }
            input.ReadMessage(DataShape);
            break;
          }
          case 24: {
            AvailableRows = input.ReadInt64();
            break;
          }
          case 32: {
            RowsLoaded = input.ReadInt64();
            break;
          }
          case 40: {
            Nanoseconds = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetShapeRequest : pb::IMessage<GetShapeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetShapeRequest> _parser = new pb::MessageParser<GetShapeRequest>(() => new GetShapeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetShapeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetShapeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetShapeRequest(GetShapeRequest other) : this() {
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetShapeRequest Clone() {
      return new GetShapeRequest(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private global::Xla.GlobalDataHandle data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.GlobalDataHandle Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetShapeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetShapeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetShapeRequest other) {
      if (other == null) {
        return;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Xla.GlobalDataHandle();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetShapeResponse : pb::IMessage<GetShapeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetShapeResponse> _parser = new pb::MessageParser<GetShapeResponse>(() => new GetShapeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetShapeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetShapeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetShapeResponse(GetShapeResponse other) : this() {
      shape_ = other.shape_ != null ? other.shape_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetShapeResponse Clone() {
      return new GetShapeResponse(this);
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 1;
    private global::Xla.ShapeProto shape_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.ShapeProto Shape {
      get { return shape_; }
      set {
        shape_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetShapeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetShapeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Shape, other.Shape)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (shape_ != null) hash ^= Shape.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (shape_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Shape);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (shape_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Shape);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (shape_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Shape);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetShapeResponse other) {
      if (other == null) {
        return;
      }
      if (other.shape_ != null) {
        if (shape_ == null) {
          Shape = new global::Xla.ShapeProto();
        }
        Shape.MergeFrom(other.Shape);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (shape_ == null) {
              Shape = new global::Xla.ShapeProto();
            }
            input.ReadMessage(Shape);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (shape_ == null) {
              Shape = new global::Xla.ShapeProto();
            }
            input.ReadMessage(Shape);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnpackRequest : pb::IMessage<UnpackRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnpackRequest> _parser = new pb::MessageParser<UnpackRequest>(() => new UnpackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnpackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnpackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnpackRequest(UnpackRequest other) : this() {
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnpackRequest Clone() {
      return new UnpackRequest(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private global::Xla.GlobalDataHandle data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Xla.GlobalDataHandle Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnpackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnpackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnpackRequest other) {
      if (other == null) {
        return;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Xla.GlobalDataHandle();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::Xla.GlobalDataHandle();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnpackResponse : pb::IMessage<UnpackResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnpackResponse> _parser = new pb::MessageParser<UnpackResponse>(() => new UnpackResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnpackResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xla.XlaReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnpackResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnpackResponse(UnpackResponse other) : this() {
      tiedData_ = other.tiedData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnpackResponse Clone() {
      return new UnpackResponse(this);
    }

    /// <summary>Field number for the "tied_data" field.</summary>
    public const int TiedDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Xla.GlobalDataHandle> _repeated_tiedData_codec
        = pb::FieldCodec.ForMessage(10, global::Xla.GlobalDataHandle.Parser);
    private readonly pbc::RepeatedField<global::Xla.GlobalDataHandle> tiedData_ = new pbc::RepeatedField<global::Xla.GlobalDataHandle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Xla.GlobalDataHandle> TiedData {
      get { return tiedData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnpackResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnpackResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tiedData_.Equals(other.tiedData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tiedData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      tiedData_.WriteTo(output, _repeated_tiedData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      tiedData_.WriteTo(ref output, _repeated_tiedData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += tiedData_.CalculateSize(_repeated_tiedData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnpackResponse other) {
      if (other == null) {
        return;
      }
      tiedData_.Add(other.tiedData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tiedData_.AddEntriesFrom(input, _repeated_tiedData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            tiedData_.AddEntriesFrom(ref input, _repeated_tiedData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
