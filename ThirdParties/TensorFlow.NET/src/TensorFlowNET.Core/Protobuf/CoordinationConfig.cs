// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tensorflow/core/protobuf/coordination_config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tensorflow {

  /// <summary>Holder for reflection information generated from tensorflow/core/protobuf/coordination_config.proto</summary>
  public static partial class CoordinationConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for tensorflow/core/protobuf/coordination_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CoordinationConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJ0ZW5zb3JmbG93L2NvcmUvcHJvdG9idWYvY29vcmRpbmF0aW9uX2NvbmZp",
            "Zy5wcm90bxIKdGVuc29yZmxvdyIxCg5Db29yZGluYXRlZEpvYhIMCgRuYW1l",
            "GAEgASgJEhEKCW51bV90YXNrcxgCIAEoBSLdAgoZQ29vcmRpbmF0aW9uU2Vy",
            "dmljZUNvbmZpZxIUCgxzZXJ2aWNlX3R5cGUYASABKAkSFgoOc2VydmljZV9s",
            "ZWFkZXIYAiABKAkSGwoTZW5hYmxlX2hlYWx0aF9jaGVjaxgDIAEoCBImCh5j",
            "bHVzdGVyX3JlZ2lzdGVyX3RpbWVvdXRfaW5fbXMYBCABKAMSHwoXaGVhcnRi",
            "ZWF0X3RpbWVvdXRfaW5fbXMYBSABKAMSOAoUY29vcmRpbmF0ZWRfam9iX2xp",
            "c3QYCiADKAsyGi50ZW5zb3JmbG93LkNvb3JkaW5hdGVkSm9iEiYKHnNodXRk",
            "b3duX2JhcnJpZXJfdGltZW91dF9pbl9tcxgHIAEoAxIqCiJhZ2VudF9kZXN0",
            "cnVjdGlvbl93aXRob3V0X3NodXRkb3duGAggASgIEhgKEHJlY292ZXJhYmxl",
            "X2pvYnMYCSADKAlKBAgGEAdCV1pVZ2l0aHViLmNvbS90ZW5zb3JmbG93L3Rl",
            "bnNvcmZsb3cvdGVuc29yZmxvdy9nby9jb3JlL3Byb3RvYnVmL2Zvcl9jb3Jl",
            "X3Byb3Rvc19nb19wcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.CoordinatedJob), global::Tensorflow.CoordinatedJob.Parser, new[]{ "Name", "NumTasks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.CoordinationServiceConfig), global::Tensorflow.CoordinationServiceConfig.Parser, new[]{ "ServiceType", "ServiceLeader", "EnableHealthCheck", "ClusterRegisterTimeoutInMs", "HeartbeatTimeoutInMs", "CoordinatedJobList", "ShutdownBarrierTimeoutInMs", "AgentDestructionWithoutShutdown", "RecoverableJobs" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Represents a job type and the number of tasks under this job.
  /// For example, ("worker", 20) implies that there will be 20 worker tasks.
  /// </summary>
  public sealed partial class CoordinatedJob : pb::IMessage<CoordinatedJob>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CoordinatedJob> _parser = new pb::MessageParser<CoordinatedJob>(() => new CoordinatedJob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CoordinatedJob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.CoordinationConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoordinatedJob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoordinatedJob(CoordinatedJob other) : this() {
      name_ = other.name_;
      numTasks_ = other.numTasks_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoordinatedJob Clone() {
      return new CoordinatedJob(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num_tasks" field.</summary>
    public const int NumTasksFieldNumber = 2;
    private int numTasks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumTasks {
      get { return numTasks_; }
      set {
        numTasks_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CoordinatedJob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CoordinatedJob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (NumTasks != other.NumTasks) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (NumTasks != 0) hash ^= NumTasks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (NumTasks != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumTasks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (NumTasks != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumTasks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (NumTasks != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumTasks);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CoordinatedJob other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.NumTasks != 0) {
        NumTasks = other.NumTasks;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            NumTasks = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            NumTasks = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Coordination service configuration parameters.
  /// The system picks appropriate values for fields that are not set.
  /// </summary>
  public sealed partial class CoordinationServiceConfig : pb::IMessage<CoordinationServiceConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CoordinationServiceConfig> _parser = new pb::MessageParser<CoordinationServiceConfig>(() => new CoordinationServiceConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CoordinationServiceConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.CoordinationConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoordinationServiceConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoordinationServiceConfig(CoordinationServiceConfig other) : this() {
      serviceType_ = other.serviceType_;
      serviceLeader_ = other.serviceLeader_;
      enableHealthCheck_ = other.enableHealthCheck_;
      clusterRegisterTimeoutInMs_ = other.clusterRegisterTimeoutInMs_;
      heartbeatTimeoutInMs_ = other.heartbeatTimeoutInMs_;
      coordinatedJobList_ = other.coordinatedJobList_.Clone();
      shutdownBarrierTimeoutInMs_ = other.shutdownBarrierTimeoutInMs_;
      agentDestructionWithoutShutdown_ = other.agentDestructionWithoutShutdown_;
      recoverableJobs_ = other.recoverableJobs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoordinationServiceConfig Clone() {
      return new CoordinationServiceConfig(this);
    }

    /// <summary>Field number for the "service_type" field.</summary>
    public const int ServiceTypeFieldNumber = 1;
    private string serviceType_ = "";
    /// <summary>
    /// Type of coordination service implementation to enable.
    /// For example, setting the service type as "standalone" starts a service
    /// instance on the leader task to provide the coordination services such as
    /// heartbeats and consistent key-value store.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceType {
      get { return serviceType_; }
      set {
        serviceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_leader" field.</summary>
    public const int ServiceLeaderFieldNumber = 2;
    private string serviceLeader_ = "";
    /// <summary>
    /// Address where the coordination service instance is hosted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceLeader {
      get { return serviceLeader_; }
      set {
        serviceLeader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enable_health_check" field.</summary>
    public const int EnableHealthCheckFieldNumber = 3;
    private bool enableHealthCheck_;
    /// <summary>
    /// Whether to enable the health check mechanism.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableHealthCheck {
      get { return enableHealthCheck_; }
      set {
        enableHealthCheck_ = value;
      }
    }

    /// <summary>Field number for the "cluster_register_timeout_in_ms" field.</summary>
    public const int ClusterRegisterTimeoutInMsFieldNumber = 4;
    private long clusterRegisterTimeoutInMs_;
    /// <summary>
    /// Maximum wait time for all members in the cluster to be registered.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ClusterRegisterTimeoutInMs {
      get { return clusterRegisterTimeoutInMs_; }
      set {
        clusterRegisterTimeoutInMs_ = value;
      }
    }

    /// <summary>Field number for the "heartbeat_timeout_in_ms" field.</summary>
    public const int HeartbeatTimeoutInMsFieldNumber = 5;
    private long heartbeatTimeoutInMs_;
    /// <summary>
    /// Heartbeat timeout, if a task does not record heartbeat in this time
    /// window, it will be considered disconnected.
    /// Note: This is also used as a grace period to accept any heartbeats after
    /// the agent has disconnected, to account for the lag time between the service
    /// recording the state change and the agent stopping heartbeats.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HeartbeatTimeoutInMs {
      get { return heartbeatTimeoutInMs_; }
      set {
        heartbeatTimeoutInMs_ = value;
      }
    }

    /// <summary>Field number for the "coordinated_job_list" field.</summary>
    public const int CoordinatedJobListFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Tensorflow.CoordinatedJob> _repeated_coordinatedJobList_codec
        = pb::FieldCodec.ForMessage(82, global::Tensorflow.CoordinatedJob.Parser);
    private readonly pbc::RepeatedField<global::Tensorflow.CoordinatedJob> coordinatedJobList_ = new pbc::RepeatedField<global::Tensorflow.CoordinatedJob>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tensorflow.CoordinatedJob> CoordinatedJobList {
      get { return coordinatedJobList_; }
    }

    /// <summary>Field number for the "shutdown_barrier_timeout_in_ms" field.</summary>
    public const int ShutdownBarrierTimeoutInMsFieldNumber = 7;
    private long shutdownBarrierTimeoutInMs_;
    /// <summary>
    /// Denotes how long to wait for all coordination agents to reach the barriers
    /// (after the first shutdown request) before disconnecting together. If
    /// set to 0, no barrier is imposed upon shutdown and each worker can
    /// disconnect individually.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ShutdownBarrierTimeoutInMs {
      get { return shutdownBarrierTimeoutInMs_; }
      set {
        shutdownBarrierTimeoutInMs_ = value;
      }
    }

    /// <summary>Field number for the "agent_destruction_without_shutdown" field.</summary>
    public const int AgentDestructionWithoutShutdownFieldNumber = 8;
    private bool agentDestructionWithoutShutdown_;
    /// <summary>
    /// If set, agents do not make an explicit Shutdown() call. Service will only
    /// find out about the disconnecte agent via stale heartbeats. Used for
    /// testing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AgentDestructionWithoutShutdown {
      get { return agentDestructionWithoutShutdown_; }
      set {
        agentDestructionWithoutShutdown_ = value;
      }
    }

    /// <summary>Field number for the "recoverable_jobs" field.</summary>
    public const int RecoverableJobsFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_recoverableJobs_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> recoverableJobs_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of jobs which are recoverable. If a task in this list fails,
    /// it will not propagate error to other tasks.
    /// If empty, no jobs will be recoverable and every task failure will cause
    /// error propagation to other tasks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> RecoverableJobs {
      get { return recoverableJobs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CoordinationServiceConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CoordinationServiceConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceType != other.ServiceType) return false;
      if (ServiceLeader != other.ServiceLeader) return false;
      if (EnableHealthCheck != other.EnableHealthCheck) return false;
      if (ClusterRegisterTimeoutInMs != other.ClusterRegisterTimeoutInMs) return false;
      if (HeartbeatTimeoutInMs != other.HeartbeatTimeoutInMs) return false;
      if(!coordinatedJobList_.Equals(other.coordinatedJobList_)) return false;
      if (ShutdownBarrierTimeoutInMs != other.ShutdownBarrierTimeoutInMs) return false;
      if (AgentDestructionWithoutShutdown != other.AgentDestructionWithoutShutdown) return false;
      if(!recoverableJobs_.Equals(other.recoverableJobs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceType.Length != 0) hash ^= ServiceType.GetHashCode();
      if (ServiceLeader.Length != 0) hash ^= ServiceLeader.GetHashCode();
      if (EnableHealthCheck != false) hash ^= EnableHealthCheck.GetHashCode();
      if (ClusterRegisterTimeoutInMs != 0L) hash ^= ClusterRegisterTimeoutInMs.GetHashCode();
      if (HeartbeatTimeoutInMs != 0L) hash ^= HeartbeatTimeoutInMs.GetHashCode();
      hash ^= coordinatedJobList_.GetHashCode();
      if (ShutdownBarrierTimeoutInMs != 0L) hash ^= ShutdownBarrierTimeoutInMs.GetHashCode();
      if (AgentDestructionWithoutShutdown != false) hash ^= AgentDestructionWithoutShutdown.GetHashCode();
      hash ^= recoverableJobs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ServiceType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceType);
      }
      if (ServiceLeader.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceLeader);
      }
      if (EnableHealthCheck != false) {
        output.WriteRawTag(24);
        output.WriteBool(EnableHealthCheck);
      }
      if (ClusterRegisterTimeoutInMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ClusterRegisterTimeoutInMs);
      }
      if (HeartbeatTimeoutInMs != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(HeartbeatTimeoutInMs);
      }
      if (ShutdownBarrierTimeoutInMs != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ShutdownBarrierTimeoutInMs);
      }
      if (AgentDestructionWithoutShutdown != false) {
        output.WriteRawTag(64);
        output.WriteBool(AgentDestructionWithoutShutdown);
      }
      recoverableJobs_.WriteTo(output, _repeated_recoverableJobs_codec);
      coordinatedJobList_.WriteTo(output, _repeated_coordinatedJobList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ServiceType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceType);
      }
      if (ServiceLeader.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceLeader);
      }
      if (EnableHealthCheck != false) {
        output.WriteRawTag(24);
        output.WriteBool(EnableHealthCheck);
      }
      if (ClusterRegisterTimeoutInMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ClusterRegisterTimeoutInMs);
      }
      if (HeartbeatTimeoutInMs != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(HeartbeatTimeoutInMs);
      }
      if (ShutdownBarrierTimeoutInMs != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ShutdownBarrierTimeoutInMs);
      }
      if (AgentDestructionWithoutShutdown != false) {
        output.WriteRawTag(64);
        output.WriteBool(AgentDestructionWithoutShutdown);
      }
      recoverableJobs_.WriteTo(ref output, _repeated_recoverableJobs_codec);
      coordinatedJobList_.WriteTo(ref output, _repeated_coordinatedJobList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ServiceType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceType);
      }
      if (ServiceLeader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceLeader);
      }
      if (EnableHealthCheck != false) {
        size += 1 + 1;
      }
      if (ClusterRegisterTimeoutInMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClusterRegisterTimeoutInMs);
      }
      if (HeartbeatTimeoutInMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeartbeatTimeoutInMs);
      }
      size += coordinatedJobList_.CalculateSize(_repeated_coordinatedJobList_codec);
      if (ShutdownBarrierTimeoutInMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShutdownBarrierTimeoutInMs);
      }
      if (AgentDestructionWithoutShutdown != false) {
        size += 1 + 1;
      }
      size += recoverableJobs_.CalculateSize(_repeated_recoverableJobs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CoordinationServiceConfig other) {
      if (other == null) {
        return;
      }
      if (other.ServiceType.Length != 0) {
        ServiceType = other.ServiceType;
      }
      if (other.ServiceLeader.Length != 0) {
        ServiceLeader = other.ServiceLeader;
      }
      if (other.EnableHealthCheck != false) {
        EnableHealthCheck = other.EnableHealthCheck;
      }
      if (other.ClusterRegisterTimeoutInMs != 0L) {
        ClusterRegisterTimeoutInMs = other.ClusterRegisterTimeoutInMs;
      }
      if (other.HeartbeatTimeoutInMs != 0L) {
        HeartbeatTimeoutInMs = other.HeartbeatTimeoutInMs;
      }
      coordinatedJobList_.Add(other.coordinatedJobList_);
      if (other.ShutdownBarrierTimeoutInMs != 0L) {
        ShutdownBarrierTimeoutInMs = other.ShutdownBarrierTimeoutInMs;
      }
      if (other.AgentDestructionWithoutShutdown != false) {
        AgentDestructionWithoutShutdown = other.AgentDestructionWithoutShutdown;
      }
      recoverableJobs_.Add(other.recoverableJobs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceType = input.ReadString();
            break;
          }
          case 18: {
            ServiceLeader = input.ReadString();
            break;
          }
          case 24: {
            EnableHealthCheck = input.ReadBool();
            break;
          }
          case 32: {
            ClusterRegisterTimeoutInMs = input.ReadInt64();
            break;
          }
          case 40: {
            HeartbeatTimeoutInMs = input.ReadInt64();
            break;
          }
          case 56: {
            ShutdownBarrierTimeoutInMs = input.ReadInt64();
            break;
          }
          case 64: {
            AgentDestructionWithoutShutdown = input.ReadBool();
            break;
          }
          case 74: {
            recoverableJobs_.AddEntriesFrom(input, _repeated_recoverableJobs_codec);
            break;
          }
          case 82: {
            coordinatedJobList_.AddEntriesFrom(input, _repeated_coordinatedJobList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ServiceType = input.ReadString();
            break;
          }
          case 18: {
            ServiceLeader = input.ReadString();
            break;
          }
          case 24: {
            EnableHealthCheck = input.ReadBool();
            break;
          }
          case 32: {
            ClusterRegisterTimeoutInMs = input.ReadInt64();
            break;
          }
          case 40: {
            HeartbeatTimeoutInMs = input.ReadInt64();
            break;
          }
          case 56: {
            ShutdownBarrierTimeoutInMs = input.ReadInt64();
            break;
          }
          case 64: {
            AgentDestructionWithoutShutdown = input.ReadBool();
            break;
          }
          case 74: {
            recoverableJobs_.AddEntriesFrom(ref input, _repeated_recoverableJobs_codec);
            break;
          }
          case 82: {
            coordinatedJobList_.AddEntriesFrom(ref input, _repeated_coordinatedJobList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
