// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tensorflow/tsl/protobuf/histogram.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tensorflow {

  /// <summary>Holder for reflection information generated from tensorflow/tsl/protobuf/histogram.proto</summary>
  public static partial class HistogramReflection {

    #region Descriptor
    /// <summary>File descriptor for tensorflow/tsl/protobuf/histogram.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HistogramReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cid0ZW5zb3JmbG93L3RzbC9wcm90b2J1Zi9oaXN0b2dyYW0ucHJvdG8SCnRl",
            "bnNvcmZsb3cihwEKDkhpc3RvZ3JhbVByb3RvEgsKA21pbhgBIAEoARILCgNt",
            "YXgYAiABKAESCwoDbnVtGAMgASgBEgsKA3N1bRgEIAEoARITCgtzdW1fc3F1",
            "YXJlcxgFIAEoARIYCgxidWNrZXRfbGltaXQYBiADKAFCAhABEhIKBmJ1Y2tl",
            "dBgHIAMoAUICEAFCXAoYb3JnLnRlbnNvcmZsb3cuZnJhbWV3b3JrUAFaO2dp",
            "dGh1Yi5jb20vZ29vZ2xlL3RzbC90c2wvZ28vY29yZS9wcm90b2J1Zi9zdW1t",
            "YXJ5X2dvX3Byb3Rv+AEBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.HistogramProto), global::Tensorflow.HistogramProto.Parser, new[]{ "Min", "Max", "Num", "Sum", "SumSquares", "BucketLimit", "Bucket" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Serialization format for histogram module in
  /// tsl/lib/histogram/histogram.h
  /// </summary>
  public sealed partial class HistogramProto : pb::IMessage<HistogramProto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HistogramProto> _parser = new pb::MessageParser<HistogramProto>(() => new HistogramProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HistogramProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.HistogramReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HistogramProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HistogramProto(HistogramProto other) : this() {
      min_ = other.min_;
      max_ = other.max_;
      num_ = other.num_;
      sum_ = other.sum_;
      sumSquares_ = other.sumSquares_;
      bucketLimit_ = other.bucketLimit_.Clone();
      bucket_ = other.bucket_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HistogramProto Clone() {
      return new HistogramProto(this);
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 1;
    private double min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 2;
    private double max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 3;
    private double num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "sum" field.</summary>
    public const int SumFieldNumber = 4;
    private double sum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Sum {
      get { return sum_; }
      set {
        sum_ = value;
      }
    }

    /// <summary>Field number for the "sum_squares" field.</summary>
    public const int SumSquaresFieldNumber = 5;
    private double sumSquares_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SumSquares {
      get { return sumSquares_; }
      set {
        sumSquares_ = value;
      }
    }

    /// <summary>Field number for the "bucket_limit" field.</summary>
    public const int BucketLimitFieldNumber = 6;
    private static readonly pb::FieldCodec<double> _repeated_bucketLimit_codec
        = pb::FieldCodec.ForDouble(50);
    private readonly pbc::RepeatedField<double> bucketLimit_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// Parallel arrays encoding the bucket boundaries and the bucket values.
    /// bucket(i) is the count for the bucket i.  The range for
    /// a bucket is:
    ///   i == 0:  -DBL_MAX .. bucket_limit(0)
    ///   i != 0:  bucket_limit(i-1) .. bucket_limit(i)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> BucketLimit {
      get { return bucketLimit_; }
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 7;
    private static readonly pb::FieldCodec<double> _repeated_bucket_codec
        = pb::FieldCodec.ForDouble(58);
    private readonly pbc::RepeatedField<double> bucket_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Bucket {
      get { return bucket_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HistogramProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HistogramProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Min, other.Min)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Max, other.Max)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Num, other.Num)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Sum, other.Sum)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SumSquares, other.SumSquares)) return false;
      if(!bucketLimit_.Equals(other.bucketLimit_)) return false;
      if(!bucket_.Equals(other.bucket_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Min != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Min);
      if (Max != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Max);
      if (Num != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Num);
      if (Sum != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Sum);
      if (SumSquares != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SumSquares);
      hash ^= bucketLimit_.GetHashCode();
      hash ^= bucket_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Min != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Min);
      }
      if (Max != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Max);
      }
      if (Num != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Num);
      }
      if (Sum != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Sum);
      }
      if (SumSquares != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(SumSquares);
      }
      bucketLimit_.WriteTo(output, _repeated_bucketLimit_codec);
      bucket_.WriteTo(output, _repeated_bucket_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Min != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Min);
      }
      if (Max != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Max);
      }
      if (Num != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Num);
      }
      if (Sum != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Sum);
      }
      if (SumSquares != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(SumSquares);
      }
      bucketLimit_.WriteTo(ref output, _repeated_bucketLimit_codec);
      bucket_.WriteTo(ref output, _repeated_bucket_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Min != 0D) {
        size += 1 + 8;
      }
      if (Max != 0D) {
        size += 1 + 8;
      }
      if (Num != 0D) {
        size += 1 + 8;
      }
      if (Sum != 0D) {
        size += 1 + 8;
      }
      if (SumSquares != 0D) {
        size += 1 + 8;
      }
      size += bucketLimit_.CalculateSize(_repeated_bucketLimit_codec);
      size += bucket_.CalculateSize(_repeated_bucket_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HistogramProto other) {
      if (other == null) {
        return;
      }
      if (other.Min != 0D) {
        Min = other.Min;
      }
      if (other.Max != 0D) {
        Max = other.Max;
      }
      if (other.Num != 0D) {
        Num = other.Num;
      }
      if (other.Sum != 0D) {
        Sum = other.Sum;
      }
      if (other.SumSquares != 0D) {
        SumSquares = other.SumSquares;
      }
      bucketLimit_.Add(other.bucketLimit_);
      bucket_.Add(other.bucket_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Min = input.ReadDouble();
            break;
          }
          case 17: {
            Max = input.ReadDouble();
            break;
          }
          case 25: {
            Num = input.ReadDouble();
            break;
          }
          case 33: {
            Sum = input.ReadDouble();
            break;
          }
          case 41: {
            SumSquares = input.ReadDouble();
            break;
          }
          case 50:
          case 49: {
            bucketLimit_.AddEntriesFrom(input, _repeated_bucketLimit_codec);
            break;
          }
          case 58:
          case 57: {
            bucket_.AddEntriesFrom(input, _repeated_bucket_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Min = input.ReadDouble();
            break;
          }
          case 17: {
            Max = input.ReadDouble();
            break;
          }
          case 25: {
            Num = input.ReadDouble();
            break;
          }
          case 33: {
            Sum = input.ReadDouble();
            break;
          }
          case 41: {
            SumSquares = input.ReadDouble();
            break;
          }
          case 50:
          case 49: {
            bucketLimit_.AddEntriesFrom(ref input, _repeated_bucketLimit_codec);
            break;
          }
          case 58:
          case 57: {
            bucket_.AddEntriesFrom(ref input, _repeated_bucket_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
